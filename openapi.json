{
  "openapi": "3.1.0",
  "info": {
    "title": "Fast Api Backend",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/login/access-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login-login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/test-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "login-test_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/password-recovery/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password",
        "description": "Password Recovery",
        "operationId": "login-recover_password",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reset-password/": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Reset Password",
        "description": "Reset password",
        "operationId": "login-reset_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/password-recovery-html-content/{email}": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Recover Password Html Content",
        "description": "HTML Content for Password Recovery",
        "operationId": "login-recover_password_html_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Read Users",
        "description": "Retrieve users with optional filtering.\nSuperuser only endpoint.",
        "operationId": "users-read_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "account_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AccountType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Account Type"
            }
          },
          {
            "name": "is_verified",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Verified"
            }
          },
          {
            "name": "is_journalist",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Journalist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Create User",
        "description": "Create new user (Superuser only).",
        "operationId": "users-create_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/signup": {
      "post": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Register User",
        "description": "Create new user without authentication (Public endpoint).",
        "operationId": "users-register_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/me": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Read User Me",
        "description": "Get current user's complete profile.",
        "operationId": "users-read_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPrivate"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Delete User Me",
        "description": "Delete own user account.",
        "operationId": "users-delete_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Update User Me",
        "description": "Update own user profile.",
        "operationId": "users-update_user_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateMe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/users/me/stats": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Read User Stats",
        "description": "Get current user's statistics.",
        "operationId": "users-read_user_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/users/me/password": {
      "patch": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Update Password Me",
        "description": "Update own password.",
        "operationId": "users-update_password_me",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/users/search": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Search Users",
        "description": "Search users by username, full_name, or email.",
        "operationId": "users-search_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "title": "Q"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPublic"
                  },
                  "title": "Response Users-Search Users"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/verified": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Get Verified Users",
        "description": "Get all verified users (journalists, organizations, etc.).",
        "operationId": "users-get_verified_users",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPublic"
                  },
                  "title": "Response Users-Get Verified Users"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/journalists": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Get Journalists",
        "description": "Get all journalist users.",
        "operationId": "users-get_journalists",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPublic"
                  },
                  "title": "Response Users-Get Journalists"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/{username}": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Read User By Username",
        "description": "Get a specific user by username.",
        "operationId": "users-read_user_by_username",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfilePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/{user_id}": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Read User By Id",
        "description": "Get a specific user by ID.\nRequires admin privileges for other users.",
        "operationId": "users-read_user_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Update User",
        "description": "Update a user (Superuser only).",
        "operationId": "users-update_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a user (Superuser only).",
        "operationId": "users-delete_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/users/verification-request": {
      "post": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Create Verification Request",
        "description": "Submit account verification request.",
        "operationId": "users-create_verification_request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/users/{username}/stats": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Read User Stats",
        "description": "Get user statistics by username.",
        "operationId": "users-read_user_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile/": {
      "get": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Get My Profile",
        "description": "Get current user's profile",
        "operationId": "profile-get_my_profile",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePrivate"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Update Profile",
        "description": "Update user profile",
        "operationId": "profile-update_profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePrivate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Create Or Update Profile",
        "description": "Create or update user profile",
        "operationId": "profile-create_or_update_profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePrivate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/profile/public/{user_id}": {
      "get": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Get User Profile",
        "description": "Get public profile of another user",
        "operationId": "profile-get_user_profile",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile/close-friends/{friend_id}": {
      "post": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Add Close Friend",
        "description": "Add a user to close friends list",
        "operationId": "profile-add_close_friend",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "friend_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Friend Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Remove Close Friend",
        "description": "Remove a user from close friends list",
        "operationId": "profile-remove_close_friend",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "friend_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Friend Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile/close-friends": {
      "get": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Get Close Friends",
        "description": "Get current user's close friends",
        "operationId": "profile-get_close_friends",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CloseFriendResponse"
                  },
                  "type": "array",
                  "title": "Response Profile-Get Close Friends"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/profile/block/{user_id}": {
      "post": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Block User",
        "description": "Block a user",
        "operationId": "profile-block_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Unblock User",
        "description": "Unblock a user",
        "operationId": "profile-unblock_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile/blocked": {
      "get": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Get Blocked Users",
        "description": "Get list of blocked users",
        "operationId": "profile-get_blocked_users",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserBlockResponse"
                  },
                  "type": "array",
                  "title": "Response Profile-Get Blocked Users"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/profile/analytics": {
      "get": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Get Profile Analytics",
        "description": "Get profile analytics",
        "operationId": "profile-get_profile_analytics",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileAnalytics"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/profile/view/{profile_id}": {
      "post": {
        "tags": [
          "profile",
          "profile"
        ],
        "summary": "Record Profile View",
        "description": "Record a profile view (for analytics)",
        "operationId": "profile-record_profile_view",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "profile_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Profile Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/verification/request": {
      "get": {
        "tags": [
          "verification",
          "verification"
        ],
        "summary": "Get My Verification Request",
        "description": "Get current user's verification request",
        "operationId": "verification-get_my_verification_request",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationRequestResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "verification",
          "verification"
        ],
        "summary": "Create Verification Request",
        "description": "Create a new verification request",
        "operationId": "verification-create_verification_request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationRequestCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/verification/badge": {
      "get": {
        "tags": [
          "verification",
          "verification"
        ],
        "summary": "Get My Verification Badge",
        "description": "Get current user's active verification badge",
        "operationId": "verification-get_my_verification_badge",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationBadgeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/verification/history": {
      "get": {
        "tags": [
          "verification",
          "verification"
        ],
        "summary": "Get My Verification History",
        "description": "Get current user's verification history",
        "operationId": "verification-get_my_verification_history",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationBadgesList"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/verification/appeal": {
      "post": {
        "tags": [
          "verification",
          "verification"
        ],
        "summary": "Appeal Verification Rejection",
        "description": "Appeal a rejected verification request",
        "operationId": "verification-appeal_verification_rejection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationAppealRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/verification/public/{user_id}": {
      "get": {
        "tags": [
          "verification",
          "verification"
        ],
        "summary": "Get User Verification Info",
        "description": "Get public verification information for a user",
        "operationId": "verification-get_user_verification_info",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicVerificationInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/verification/admin/requests": {
      "get": {
        "tags": [
          "verification",
          "verification"
        ],
        "summary": "Get Pending Verification Requests",
        "description": "Get all pending verification requests (admin only)",
        "operationId": "verification-get_pending_verification_requests",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationRequestsList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/verification/admin/review/{request_id}": {
      "post": {
        "tags": [
          "verification",
          "verification"
        ],
        "summary": "Review Verification Request",
        "description": "Review a verification request (admin only)",
        "operationId": "verification-review_verification_request",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/verification/admin/mark-review/{request_id}": {
      "post": {
        "tags": [
          "verification",
          "verification"
        ],
        "summary": "Mark Request Under Review",
        "description": "Mark a verification request as under review (admin only)",
        "operationId": "verification-mark_request_under_review",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/posts/": {
      "post": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Create Post",
        "description": "Create a new post",
        "operationId": "posts-create_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Get Posts",
        "description": "Get published posts",
        "operationId": "posts-get_posts",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/posts/feed": {
      "get": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Get Feed",
        "description": "Get personalized feed for current user",
        "operationId": "posts-get_feed",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/posts/{post_id}": {
      "get": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Get Post",
        "description": "Get a specific post by ID",
        "operationId": "posts-get_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Update Post",
        "description": "Update a post",
        "operationId": "posts-update_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Post Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Delete Post",
        "description": "Delete a post",
        "operationId": "posts-delete_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/posts/{post_id}/publish": {
      "post": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Publish Post",
        "description": "Publish a draft post",
        "operationId": "posts-publish_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/posts/{post_id}/pin": {
      "post": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Pin Post",
        "description": "Pin a post",
        "operationId": "posts-pin_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/posts/{post_id}/unpin": {
      "post": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Unpin Post",
        "description": "Unpin a post",
        "operationId": "posts-unpin_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/posts/user/{user_id}": {
      "get": {
        "tags": [
          "posts",
          "posts"
        ],
        "summary": "Get User Posts",
        "description": "Get posts by a specific user",
        "operationId": "posts-get_user_posts",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get News",
        "description": "Get news articles with filtering and pagination",
        "operationId": "news-get_news",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/NewsStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "is_breaking_news",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Breaking News"
            }
          },
          {
            "name": "is_featured",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Featured"
            }
          },
          {
            "name": "is_trending",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Trending"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/NewsPriority"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Priority"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "State"
            }
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "City"
            }
          },
          {
            "name": "published_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Published After"
            }
          },
          {
            "name": "published_before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Published Before"
            }
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created After"
            }
          },
          {
            "name": "created_before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created Before"
            }
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(published_at|created_at|view_count|like_count|comment_count)$"
                },
                {
                  "type": "null"
                }
              ],
              "default": "published_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(asc|desc)$"
                },
                {
                  "type": "null"
                }
              ],
              "default": "desc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Create News",
        "description": "Create new news article",
        "operationId": "news-create_news",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/breaking": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get Breaking News",
        "description": "Get breaking news articles",
        "operationId": "news-get_breaking_news",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakingNewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/trending": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get Trending News",
        "description": "Get trending news articles",
        "operationId": "news-get_trending_news",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "default": 24,
              "title": "Hours"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrendingNewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/featured": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get Featured News",
        "description": "Get featured news articles",
        "operationId": "news-get_featured_news",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/me": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get My News",
        "description": "Get current user's news articles",
        "operationId": "news-get_my_news",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/me/drafts": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get My Drafts",
        "description": "Get current user's draft news articles",
        "operationId": "news-get_my_drafts",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/me/scheduled": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get My Scheduled",
        "description": "Get current user's scheduled news articles",
        "operationId": "news-get_my_scheduled",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/{news_id}": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get News By Id",
        "description": "Get news article by ID",
        "operationId": "news-get_news_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "News Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Update News",
        "description": "Update news article",
        "operationId": "news-update_news",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "News Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Delete News",
        "description": "Delete news article",
        "operationId": "news-delete_news",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "News Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/slug/{slug}": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get News By Slug",
        "description": "Get news article by slug",
        "operationId": "news-get_news_by_slug",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/{news_id}/publish": {
      "post": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Publish News",
        "description": "Publish draft news article",
        "operationId": "news-publish_news",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "News Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsPublishResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/{news_id}/schedule": {
      "post": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Schedule News",
        "description": "Schedule news article for future publication",
        "operationId": "news-schedule_news",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "News Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsScheduleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/{news_id}/breaking": {
      "post": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Mark As Breaking",
        "description": "Mark news article as breaking news",
        "operationId": "news-mark_as_breaking",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "News Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/{news_id}/featured": {
      "post": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Mark As Featured",
        "description": "Mark news article as featured",
        "operationId": "news-mark_as_featured",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "News Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/search": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Search News",
        "description": "Search news articles",
        "operationId": "news-search_news",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "title": "Q"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "current_user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/User"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Current User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/location/nearby": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get Nearby News",
        "description": "Get news articles near a location",
        "operationId": "news-get_nearby_news",
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "maximum": 90,
              "minimum": -90,
              "title": "Latitude"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "maximum": 180,
              "minimum": -180,
              "title": "Longitude"
            }
          },
          {
            "name": "radius_km",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "minimum": 0.1,
              "default": 10,
              "title": "Radius Km"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "current_user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/User"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Current User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsByLocationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/news/news/stats": {
      "get": {
        "tags": [
          "news",
          "news"
        ],
        "summary": "Get News Stats",
        "description": "Get news statistics for current user",
        "operationId": "news-get_news_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/stories/stories/": {
      "get": {
        "tags": [
          "stories",
          "stories"
        ],
        "summary": "Get Stories",
        "description": "Get active stories feed",
        "operationId": "stories-get_stories",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryPublic"
                  },
                  "title": "Response Stories-Get Stories"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "stories",
          "stories"
        ],
        "summary": "Create Story",
        "description": "Create a new story",
        "operationId": "stories-create_story",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/stories/my-stories": {
      "get": {
        "tags": [
          "stories",
          "stories"
        ],
        "summary": "Get My Stories",
        "description": "Get current user's stories",
        "operationId": "stories-get_my_stories",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_expired",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Expired"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryPublic"
                  },
                  "title": "Response Stories-Get My Stories"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/stories/{story_id}": {
      "get": {
        "tags": [
          "stories",
          "stories"
        ],
        "summary": "Get Story",
        "description": "Get a specific story by ID",
        "operationId": "stories-get_story",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Story Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "stories",
          "stories"
        ],
        "summary": "Update Story",
        "description": "Update a story",
        "operationId": "stories-update_story",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Story Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "stories",
          "stories"
        ],
        "summary": "Delete Story",
        "description": "Delete a story",
        "operationId": "stories-delete_story",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Story Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/highlights/": {
      "get": {
        "tags": [
          "story-highlights",
          "story-highlights"
        ],
        "summary": "Get User Highlights",
        "description": "Get current user's story highlights",
        "operationId": "story-highlights-get_user_highlights",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Archived"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryHighlightPublic"
                  },
                  "title": "Response Story-Highlights-Get User Highlights"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "story-highlights",
          "story-highlights"
        ],
        "summary": "Create Highlight",
        "description": "Create a new story highlight",
        "operationId": "story-highlights-create_highlight",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryHighlightCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryHighlightPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/highlights/{highlight_id}": {
      "get": {
        "tags": [
          "story-highlights",
          "story-highlights"
        ],
        "summary": "Get Highlight",
        "description": "Get a specific highlight by ID",
        "operationId": "story-highlights-get_highlight",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "highlight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Highlight Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryHighlightPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "story-highlights",
          "story-highlights"
        ],
        "summary": "Update Highlight",
        "description": "Update a highlight",
        "operationId": "story-highlights-update_highlight",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "highlight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Highlight Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryHighlightUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryHighlightPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "story-highlights",
          "story-highlights"
        ],
        "summary": "Delete Highlight",
        "description": "Delete a highlight",
        "operationId": "story-highlights-delete_highlight",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "highlight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Highlight Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/highlights/{highlight_id}/archive": {
      "post": {
        "tags": [
          "story-highlights",
          "story-highlights"
        ],
        "summary": "Archive Highlight",
        "description": "Archive a highlight",
        "operationId": "story-highlights-archive_highlight",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "highlight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Highlight Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryHighlightPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/highlights/{highlight_id}/unarchive": {
      "post": {
        "tags": [
          "story-highlights",
          "story-highlights"
        ],
        "summary": "Unarchive Highlight",
        "description": "Unarchive a highlight",
        "operationId": "story-highlights-unarchive_highlight",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "highlight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Highlight Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryHighlightPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/interactions/story/{story_id}": {
      "get": {
        "tags": [
          "story-interactions",
          "story-interactions"
        ],
        "summary": "Get Story Interactions",
        "description": "Get interactions for a specific story",
        "operationId": "story-interactions-get_story_interactions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Story Id"
            }
          },
          {
            "name": "interaction_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/InteractionType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Interaction Type"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryInteractionPublic"
                  },
                  "title": "Response Story-Interactions-Get Story Interactions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/interactions/": {
      "post": {
        "tags": [
          "story-interactions",
          "story-interactions"
        ],
        "summary": "Create Interaction",
        "description": "Create a new story interaction",
        "operationId": "story-interactions-create_interaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryInteractionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryInteractionPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/stories/interactions/{interaction_id}": {
      "put": {
        "tags": [
          "story-interactions",
          "story-interactions"
        ],
        "summary": "Update Interaction",
        "description": "Update an interaction",
        "operationId": "story-interactions-update_interaction",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "interaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Interaction Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryInteractionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryInteractionPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "story-interactions",
          "story-interactions"
        ],
        "summary": "Delete Interaction",
        "description": "Delete an interaction",
        "operationId": "story-interactions-delete_interaction",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "interaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Interaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/interactions/poll/vote": {
      "post": {
        "tags": [
          "story-interactions",
          "story-interactions"
        ],
        "summary": "Vote Poll",
        "description": "Vote in a poll",
        "operationId": "story-interactions-vote_poll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PollVoteCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryInteractionPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/stories/interactions/poll/{story_id}/results": {
      "get": {
        "tags": [
          "story-interactions",
          "story-interactions"
        ],
        "summary": "Get Poll Results",
        "description": "Get poll results for a story",
        "operationId": "story-interactions-get_poll_results",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Story Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "title": "Response Story-Interactions-Get Poll Results"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/interactions/question/reply": {
      "post": {
        "tags": [
          "story-interactions",
          "story-interactions"
        ],
        "summary": "Submit Question Reply",
        "description": "Submit a reply to a question",
        "operationId": "story-interactions-submit_question_reply",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionReplyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryInteractionPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/stories/interactions/question/{story_id}/replies": {
      "get": {
        "tags": [
          "story-interactions",
          "story-interactions"
        ],
        "summary": "Get Question Replies",
        "description": "Get question replies for a story",
        "operationId": "story-interactions-get_question_replies",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Story Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryInteractionPublic"
                  },
                  "title": "Response Story-Interactions-Get Question Replies"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/interactions/quiz/answer": {
      "post": {
        "tags": [
          "story-interactions",
          "story-interactions"
        ],
        "summary": "Submit Quiz Answer",
        "description": "Submit a quiz answer",
        "operationId": "story-interactions-submit_quiz_answer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuizAnswerCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/stories/viewers/story/{story_id}": {
      "get": {
        "tags": [
          "story-viewers",
          "story-viewers"
        ],
        "summary": "Get Story Viewers",
        "description": "Get viewers for a specific story (story owner only)",
        "operationId": "story-viewers-get_story_viewers",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Story Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryViewerPublic"
                  },
                  "title": "Response Story-Viewers-Get Story Viewers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/viewers/my-history": {
      "get": {
        "tags": [
          "story-viewers",
          "story-viewers"
        ],
        "summary": "Get My View History",
        "description": "Get current user's story view history",
        "operationId": "story-viewers-get_my_view_history",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryViewerPublic"
                  },
                  "title": "Response Story-Viewers-Get My View History"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/viewers/story/{story_id}/view": {
      "post": {
        "tags": [
          "story-viewers",
          "story-viewers"
        ],
        "summary": "Record Story View",
        "description": "Record that current user viewed a story",
        "operationId": "story-viewers-record_story_view",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Story Id"
            }
          },
          {
            "name": "view_duration",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "View Duration"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 50
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Story-Viewers-Record Story View"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/viewers/{viewer_id}/duration": {
      "put": {
        "tags": [
          "story-viewers",
          "story-viewers"
        ],
        "summary": "Update View Duration",
        "description": "Update view duration for a viewer record",
        "operationId": "story-viewers-update_view_duration",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "viewer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Viewer Id"
            }
          },
          {
            "name": "view_duration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "title": "View Duration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryViewerPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/viewers/story/{story_id}/analytics": {
      "get": {
        "tags": [
          "story-viewers",
          "story-viewers"
        ],
        "summary": "Get Story View Analytics",
        "description": "Get view analytics for a story (story owner only)",
        "operationId": "story-viewers-get_story_view_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Story Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Story-Viewers-Get Story View Analytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/": {
      "get": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Get Reels Feed",
        "description": "Get reels feed",
        "operationId": "reels-get_reels_feed",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReelPublic"
                  },
                  "title": "Response Reels-Get Reels Feed"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Create Reel",
        "description": "Create a new reel",
        "operationId": "reels-create_reel",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReelPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/trending": {
      "get": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Get Trending Reels",
        "description": "Get trending reels",
        "operationId": "reels-get_trending_reels",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReelPublic"
                  },
                  "title": "Response Reels-Get Trending Reels"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/hashtag/{hashtag}": {
      "get": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Get Reels By Hashtag",
        "description": "Get reels by hashtag",
        "operationId": "reels-get_reels_by_hashtag",
        "parameters": [
          {
            "name": "hashtag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hashtag"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReelPublic"
                  },
                  "title": "Response Reels-Get Reels By Hashtag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/music/{music_id}": {
      "get": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Get Reels By Music",
        "description": "Get reels using specific music",
        "operationId": "reels-get_reels_by_music",
        "parameters": [
          {
            "name": "music_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Music Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReelPublic"
                  },
                  "title": "Response Reels-Get Reels By Music"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/my-reels": {
      "get": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Get My Reels",
        "description": "Get current user's reels",
        "operationId": "reels-get_my_reels",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_unpublished",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Unpublished"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReelPublic"
                  },
                  "title": "Response Reels-Get My Reels"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/{reel_id}": {
      "get": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Get Reel",
        "description": "Get a specific reel",
        "operationId": "reels-get_reel",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Reel Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReelPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Update Reel",
        "description": "Update a reel",
        "operationId": "reels-update_reel",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Reel Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReelPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Delete Reel",
        "description": "Delete a reel",
        "operationId": "reels-delete_reel",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Reel Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/{reel_id}/publish": {
      "post": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Publish Reel",
        "description": "Publish a processed reel",
        "operationId": "reels-publish_reel",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Reel Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReelPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/duet": {
      "post": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Create Duet",
        "description": "Create a duet reel",
        "operationId": "reels-create_duet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReelDuetCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReelPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/reels/reels/stitch": {
      "post": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Create Stitch",
        "description": "Create a stitch reel",
        "operationId": "reels-create_stitch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReelStitchCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReelPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/reels/reels/{reel_id}/duets": {
      "get": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Get Duets",
        "description": "Get duets of a reel",
        "operationId": "reels-get_duets",
        "parameters": [
          {
            "name": "reel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Reel Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReelPublic"
                  },
                  "title": "Response Reels-Get Duets"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/{reel_id}/stitches": {
      "get": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Get Stitches",
        "description": "Get stitches of a reel",
        "operationId": "reels-get_stitches",
        "parameters": [
          {
            "name": "reel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Reel Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReelPublic"
                  },
                  "title": "Response Reels-Get Stitches"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/{reel_id}/like": {
      "post": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "Like Reel",
        "description": "Like a reel",
        "operationId": "reels-like_reel",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Reel Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/reels/{reel_id}/view": {
      "post": {
        "tags": [
          "reels",
          "reels"
        ],
        "summary": "View Reel",
        "description": "Record a view on a reel",
        "operationId": "reels-view_reel",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Reel Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/music/": {
      "get": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Get Music List",
        "description": "Get list of all music tracks",
        "operationId": "reel-music-get_music_list",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MusicPublic"
                  },
                  "title": "Response Reel-Music-Get Music List"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Create Music",
        "description": "Create a new music track (admin only)",
        "operationId": "reel-music-create_music",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MusicCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/music/trending": {
      "get": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Get Trending Music",
        "description": "Get trending music tracks",
        "operationId": "reel-music-get_trending_music",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MusicPublic"
                  },
                  "title": "Response Reel-Music-Get Trending Music"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/music/search": {
      "get": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Search Music",
        "description": "Search music by title or artist",
        "operationId": "reel-music-search_music",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "title": "Q"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MusicPublic"
                  },
                  "title": "Response Reel-Music-Search Music"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/music/artist/{artist}": {
      "get": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Get Music By Artist",
        "description": "Get music by artist",
        "operationId": "reel-music-get_music_by_artist",
        "parameters": [
          {
            "name": "artist",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artist"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MusicPublic"
                  },
                  "title": "Response Reel-Music-Get Music By Artist"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/music/genre/{genre}": {
      "get": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Get Music By Genre",
        "description": "Get music by genre",
        "operationId": "reel-music-get_music_by_genre",
        "parameters": [
          {
            "name": "genre",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Genre"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MusicPublic"
                  },
                  "title": "Response Reel-Music-Get Music By Genre"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/music/{music_id}": {
      "get": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Get Music",
        "description": "Get a specific music track",
        "operationId": "reel-music-get_music",
        "parameters": [
          {
            "name": "music_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Music Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Update Music",
        "description": "Update a music track (admin only)",
        "operationId": "reel-music-update_music",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "music_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Music Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MusicUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Delete Music",
        "description": "Delete a music track (admin only)",
        "operationId": "reel-music-delete_music",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "music_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Music Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/music/{music_id}/use": {
      "post": {
        "tags": [
          "reel-music",
          "reel-music"
        ],
        "summary": "Use Music",
        "description": "Record music usage (called when music is used in a reel)",
        "operationId": "reel-music-use_music",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "music_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Music Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/effects/": {
      "get": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Get Effects List",
        "description": "Get list of all effects",
        "operationId": "reel-effects-get_effects_list",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EffectPublic"
                  },
                  "title": "Response Reel-Effects-Get Effects List"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Create Effect",
        "description": "Create a new effect (admin only)",
        "operationId": "reel-effects-create_effect",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EffectCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EffectPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/effects/popular": {
      "get": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Get Popular Effects",
        "description": "Get popular effects",
        "operationId": "reel-effects-get_popular_effects",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EffectPublic"
                  },
                  "title": "Response Reel-Effects-Get Popular Effects"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/effects/premium": {
      "get": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Get Premium Effects",
        "description": "Get premium effects",
        "operationId": "reel-effects-get_premium_effects",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EffectPublic"
                  },
                  "title": "Response Reel-Effects-Get Premium Effects"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/effects/category/{category}": {
      "get": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Get Effects By Category",
        "description": "Get effects by category",
        "operationId": "reel-effects-get_effects_by_category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EffectCategory"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EffectPublic"
                  },
                  "title": "Response Reel-Effects-Get Effects By Category"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/effects/search": {
      "get": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Search Effects",
        "description": "Search effects by name",
        "operationId": "reel-effects-search_effects",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "title": "Q"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EffectPublic"
                  },
                  "title": "Response Reel-Effects-Search Effects"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/effects/{effect_id}": {
      "get": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Get Effect",
        "description": "Get a specific effect",
        "operationId": "reel-effects-get_effect",
        "parameters": [
          {
            "name": "effect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Effect Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EffectPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Update Effect",
        "description": "Update an effect (admin only)",
        "operationId": "reel-effects-update_effect",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "effect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Effect Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EffectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EffectPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Delete Effect",
        "description": "Delete an effect (admin only)",
        "operationId": "reel-effects-delete_effect",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "effect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Effect Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reels/effects/{effect_id}/use": {
      "post": {
        "tags": [
          "reel-effects",
          "reel-effects"
        ],
        "summary": "Use Effect",
        "description": "Record effect usage (called when effect is applied to a reel)",
        "operationId": "reel-effects-use_effect",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "effect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Effect Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/": {
      "post": {
        "tags": [
          "live-streams",
          "live-streams"
        ],
        "summary": "Create Stream",
        "description": "Create a new live stream",
        "operationId": "live-streams-create_stream",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "live-streams",
          "live-streams"
        ],
        "summary": "Get Streams",
        "description": "Get user's streams",
        "operationId": "live-streams-get_streams",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/live": {
      "get": {
        "tags": [
          "live-streams",
          "live-streams"
        ],
        "summary": "Get Live Streams",
        "description": "Get all currently live streams",
        "operationId": "live-streams-get_live_streams",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StreamPublic"
                  },
                  "type": "array",
                  "title": "Response Live-Streams-Get Live Streams"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}": {
      "get": {
        "tags": [
          "live-streams",
          "live-streams"
        ],
        "summary": "Get Stream",
        "description": "Get stream by ID",
        "operationId": "live-streams-get_stream",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "live-streams",
          "live-streams"
        ],
        "summary": "Update Stream",
        "description": "Update stream details",
        "operationId": "live-streams-update_stream",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "live-streams",
          "live-streams"
        ],
        "summary": "Delete Stream",
        "description": "Delete a stream",
        "operationId": "live-streams-delete_stream",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Delete Stream"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/start": {
      "post": {
        "tags": [
          "live-streams",
          "live-streams"
        ],
        "summary": "Start Stream",
        "description": "Start a live stream",
        "operationId": "live-streams-start_stream",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/end": {
      "post": {
        "tags": [
          "live-streams",
          "live-streams"
        ],
        "summary": "End Stream",
        "description": "End a live stream",
        "operationId": "live-streams-end_stream",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamEnd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/analytics": {
      "get": {
        "tags": [
          "live-streams",
          "live-streams"
        ],
        "summary": "Get Stream Analytics",
        "description": "Get stream analytics",
        "operationId": "live-streams-get_stream_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamAnalytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/join": {
      "post": {
        "tags": [
          "live-streams",
          "live-stream-viewers"
        ],
        "summary": "Join Stream",
        "description": "Join a live stream",
        "operationId": "live-streams-join_stream",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Device type (mobile, desktop, tablet)",
              "title": "Device Type"
            },
            "description": "Device type (mobile, desktop, tablet)"
          },
          {
            "name": "browser",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Browser name",
              "title": "Browser"
            },
            "description": "Browser name"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "User location/country",
              "title": "Location"
            },
            "description": "User location/country"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Join Stream"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/leave": {
      "post": {
        "tags": [
          "live-streams",
          "live-stream-viewers"
        ],
        "summary": "Leave Stream",
        "description": "Leave a live stream",
        "operationId": "live-streams-leave_stream",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Leave Stream"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/viewers": {
      "get": {
        "tags": [
          "live-streams",
          "live-stream-viewers"
        ],
        "summary": "Get Stream Viewers",
        "description": "Get viewers for a stream",
        "operationId": "live-streams-get_stream_viewers",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only return active viewers",
              "default": false,
              "title": "Active Only"
            },
            "description": "Only return active viewers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamViewerList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/viewer/{viewer_id}/role": {
      "put": {
        "tags": [
          "live-streams",
          "live-stream-viewers"
        ],
        "summary": "Update Viewer Role",
        "description": "Update viewer role (moderator action)",
        "operationId": "live-streams-update_viewer_role",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "viewer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Viewer Id"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "New role (viewer, moderator, host)",
              "title": "Role"
            },
            "description": "New role (viewer, moderator, host)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Update Viewer Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/viewer/{viewer_id}/ban": {
      "post": {
        "tags": [
          "live-streams",
          "live-stream-viewers"
        ],
        "summary": "Ban Viewer",
        "description": "Ban a viewer from the stream",
        "operationId": "live-streams-ban_viewer",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "viewer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Viewer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Ban Viewer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/viewer/{viewer_id}/mute": {
      "post": {
        "tags": [
          "live-streams",
          "live-stream-viewers"
        ],
        "summary": "Mute Viewer",
        "description": "Mute a viewer in the stream",
        "operationId": "live-streams-mute_viewer",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "viewer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Viewer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Mute Viewer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/stats": {
      "get": {
        "tags": [
          "live-streams",
          "live-stream-viewers"
        ],
        "summary": "Get Viewer Stats",
        "description": "Get viewer statistics for a stream",
        "operationId": "live-streams-get_viewer_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamViewerStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/donate": {
      "post": {
        "tags": [
          "live-streams",
          "live-stream-badges"
        ],
        "summary": "Send Donation",
        "description": "Send a donation/badge to a stream",
        "operationId": "live-streams-send_donation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "minimum": 0.01,
              "description": "Donation amount",
              "title": "Amount"
            },
            "description": "Donation amount"
          },
          {
            "name": "badge_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Badge type (heart, star, diamond, etc.)",
              "default": "heart",
              "title": "Badge Type"
            },
            "description": "Badge type (heart, star, diamond, etc.)"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 500,
              "description": "Optional donation message",
              "title": "Message"
            },
            "description": "Optional donation message"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Send Donation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/badges": {
      "get": {
        "tags": [
          "live-streams",
          "live-stream-badges"
        ],
        "summary": "Get Stream Badges",
        "description": "Get badges/donations for a stream",
        "operationId": "live-streams-get_stream_badges",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "recent",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Get only recent badges",
              "default": false,
              "title": "Recent"
            },
            "description": "Get only recent badges"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamBadgeList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/user/{user_id}/badges": {
      "get": {
        "tags": [
          "live-streams",
          "live-stream-badges"
        ],
        "summary": "Get User Badges",
        "description": "Get badges sent by a user",
        "operationId": "live-streams-get_user_badges",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StreamBadgePublic"
                  },
                  "title": "Response Live-Streams-Get User Badges"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/badges/{badge_type}": {
      "get": {
        "tags": [
          "live-streams",
          "live-stream-badges"
        ],
        "summary": "Get Badges By Type",
        "description": "Get badges of specific type for a stream",
        "operationId": "live-streams-get_badges_by_type",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          },
          {
            "name": "badge_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Badge Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StreamBadgePublic"
                  },
                  "title": "Response Live-Streams-Get Badges By Type"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/donations/total": {
      "get": {
        "tags": [
          "live-streams",
          "live-stream-badges"
        ],
        "summary": "Get Total Donations",
        "description": "Get total donation amount for a stream",
        "operationId": "live-streams-get_total_donations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Get Total Donations"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/leaderboard": {
      "get": {
        "tags": [
          "live-streams",
          "live-stream-badges"
        ],
        "summary": "Get Donation Leaderboard",
        "description": "Get donation leaderboard for a stream",
        "operationId": "live-streams-get_donation_leaderboard",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Get Donation Leaderboard"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/{stream_id}/badges/stats": {
      "get": {
        "tags": [
          "live-streams",
          "live-stream-badges"
        ],
        "summary": "Get Badge Stats",
        "description": "Get badge statistics for a stream",
        "operationId": "live-streams-get_badge_stats",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Stream Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamBadgeStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/live-streams/streams/badge/{badge_id}": {
      "delete": {
        "tags": [
          "live-streams",
          "live-stream-badges"
        ],
        "summary": "Delete Badge",
        "description": "Delete a badge (admin/stream owner only)",
        "operationId": "live-streams-delete_badge",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "badge_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Badge Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Live-Streams-Delete Badge"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/conversations/": {
      "post": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Create Conversation",
        "description": "Create a new conversation",
        "operationId": "messaging-conversations-create_conversation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Read Conversations",
        "description": "Get user's conversations",
        "operationId": "messaging-conversations-read_conversations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationPublic"
                  },
                  "title": "Response Messaging-Conversations-Read Conversations"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/conversations/{conversation_id}": {
      "get": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Read Conversation",
        "description": "Get conversation by ID",
        "operationId": "messaging-conversations-read_conversation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Update Conversation",
        "description": "Update conversation details",
        "operationId": "messaging-conversations-update_conversation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Delete Conversation",
        "description": "Delete a conversation",
        "operationId": "messaging-conversations-delete_conversation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Conversations-Delete Conversation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/conversations/{conversation_id}/archive": {
      "post": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Archive Conversation",
        "description": "Archive a conversation",
        "operationId": "messaging-conversations-archive_conversation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Conversations-Archive Conversation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/conversations/{conversation_id}/unarchive": {
      "post": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Unarchive Conversation",
        "description": "Unarchive a conversation",
        "operationId": "messaging-conversations-unarchive_conversation",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Conversations-Unarchive Conversation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/conversations/{conversation_id}/participants": {
      "post": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Add Participants",
        "description": "Add participants to a conversation",
        "operationId": "messaging-conversations-add_participants",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": "User Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Conversations-Add Participants"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Get Conversation Participants",
        "description": "Get participants in a conversation",
        "operationId": "messaging-conversations-get_conversation_participants",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Messaging-Conversations-Get Conversation Participants"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/conversations/{conversation_id}/participants/{user_id}": {
      "delete": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Remove Participant",
        "description": "Remove a participant from a conversation",
        "operationId": "messaging-conversations-remove_participant",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Conversations-Remove Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/conversations/{conversation_id}/participants/{participant_id}/role": {
      "put": {
        "tags": [
          "messaging-conversations"
        ],
        "summary": "Update Participant Role",
        "description": "Update participant role",
        "operationId": "messaging-conversations-update_participant_role",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          },
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Conversations-Update Participant Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/messages/": {
      "post": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Send Message",
        "description": "Send a new message",
        "operationId": "messaging-messages-send_message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/messaging/messages/{message_id}": {
      "get": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Read Message",
        "description": "Get message by ID",
        "operationId": "messaging-messages-read_message",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Update Message",
        "description": "Update a message",
        "operationId": "messaging-messages-update_message",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Delete Message",
        "description": "Delete a message",
        "operationId": "messaging-messages-delete_message",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Messages-Delete Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/messages/conversation/{conversation_id}": {
      "get": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Read Conversation Messages",
        "description": "Get messages in a conversation",
        "operationId": "messaging-messages-read_conversation_messages",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessagePublic"
                  },
                  "title": "Response Messaging-Messages-Read Conversation Messages"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/messages/{message_id}/read": {
      "post": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Mark Message Read",
        "description": "Mark a message as read",
        "operationId": "messaging-messages-mark_message_read",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Messages-Mark Message Read"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/messages/conversation/{conversation_id}/read": {
      "post": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Mark Conversation Read",
        "description": "Mark all messages in conversation as read",
        "operationId": "messaging-messages-mark_conversation_read",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Messages-Mark Conversation Read"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/messages/{message_id}/reactions": {
      "post": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Add Reaction",
        "description": "Add reaction to a message",
        "operationId": "messaging-messages-add_reaction",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          },
          {
            "name": "emoji",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Emoji"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Messages-Add Reaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Get Message Reactions",
        "description": "Get reactions for a message",
        "operationId": "messaging-messages-get_message_reactions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Messages-Get Message Reactions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/messages/{message_id}/reactions/{emoji}": {
      "delete": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Remove Reaction",
        "description": "Remove reaction from a message",
        "operationId": "messaging-messages-remove_reaction",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          },
          {
            "name": "emoji",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Emoji"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Messages-Remove Reaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/messages/search/{conversation_id}": {
      "get": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Search Messages",
        "description": "Search messages in a conversation",
        "operationId": "messaging-messages-search_messages",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Q"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessagePublic"
                  },
                  "title": "Response Messaging-Messages-Search Messages"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/messages/{message_id}/forward": {
      "post": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Forward Message",
        "description": "Forward a message to another conversation",
        "operationId": "messaging-messages-forward_message",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          },
          {
            "name": "target_conversation_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Target Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/messages/schedule": {
      "post": {
        "tags": [
          "messaging-messages"
        ],
        "summary": "Schedule Message",
        "description": "Schedule a message to be sent later",
        "operationId": "messaging-messages-schedule_message",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "scheduled_at",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scheduled At"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/{participant_id}": {
      "get": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Read Participant",
        "description": "Get participant by ID",
        "operationId": "messaging-participants-read_participant",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationParticipantPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Update Participant",
        "description": "Update participant settings",
        "operationId": "messaging-participants-update_participant",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationParticipantUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationParticipantPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/{participant_id}/role": {
      "put": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Update Participant Role",
        "description": "Update participant role (admin/owner only)",
        "operationId": "messaging-participants-update_participant_role",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Update Participant Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/{participant_id}/status": {
      "put": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Update Participant Status",
        "description": "Update participant status (moderator action)",
        "operationId": "messaging-participants-update_participant_status",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Update Participant Status"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/{participant_id}/mute": {
      "post": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Mute Participant",
        "description": "Mute a participant",
        "operationId": "messaging-participants-mute_participant",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          },
          {
            "name": "muted_until",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Muted Until"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Mute Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/{participant_id}/unmute": {
      "post": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Unmute Participant",
        "description": "Unmute a participant",
        "operationId": "messaging-participants-unmute_participant",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Unmute Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/{participant_id}/ban": {
      "post": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Ban Participant",
        "description": "Ban a participant from the conversation",
        "operationId": "messaging-participants-ban_participant",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Ban Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/{participant_id}/unban": {
      "post": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Unban Participant",
        "description": "Unban a participant",
        "operationId": "messaging-participants-unban_participant",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Unban Participant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/conversation/{conversation_id}": {
      "get": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Get Conversation Participants",
        "description": "Get all participants in a conversation",
        "operationId": "messaging-participants-get_conversation_participants",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationParticipantPublic"
                  },
                  "title": "Response Messaging-Participants-Get Conversation Participants"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/user/me": {
      "get": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Get User Participations",
        "description": "Get all conversations the current user participates in",
        "operationId": "messaging-participants-get_user_participations",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ConversationParticipantPublic"
                  },
                  "type": "array",
                  "title": "Response Messaging-Participants-Get User Participations"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/messaging/participants/{participant_id}/permissions": {
      "get": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Get Participant Permissions",
        "description": "Get participant permissions",
        "operationId": "messaging-participants-get_participant_permissions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Participant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Get Participant Permissions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/conversation/{conversation_id}/last-seen": {
      "post": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Update Last Seen",
        "description": "Update last seen timestamp for current user in conversation",
        "operationId": "messaging-participants-update_last_seen",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Update Last Seen"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/conversation/{conversation_id}/unread-count": {
      "get": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Get Unread Count",
        "description": "Get unread message count for current user in conversation",
        "operationId": "messaging-participants-get_unread_count",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Get Unread Count"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/participants/conversation/{conversation_id}/reset-unread": {
      "post": {
        "tags": [
          "messaging-participants"
        ],
        "summary": "Reset Unread Count",
        "description": "Reset unread message count for current user in conversation",
        "operationId": "messaging-participants-reset_unread_count",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Messaging-Participants-Reset Unread Count"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/notifications/": {
      "get": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Read Notifications",
        "description": "Get user's notifications",
        "operationId": "notifications-read_notifications",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "include_read",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Read"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationWithSender"
                  },
                  "title": "Response Notifications-Read Notifications"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/notifications/unread/count": {
      "get": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Get Unread Count",
        "description": "Get count of unread notifications",
        "operationId": "notifications-get_unread_count",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/notifications/{notification_id}/read": {
      "put": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Mark Notification As Read",
        "description": "Mark a notification as read",
        "operationId": "notifications-mark_notification_as_read",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Notification Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/notifications/read-all": {
      "put": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Mark All Notifications As Read",
        "description": "Mark all notifications as read",
        "operationId": "notifications-mark_all_notifications_as_read",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/notifications/{notification_id}": {
      "delete": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Delete Notification",
        "description": "Delete a notification (soft delete by marking as read)",
        "operationId": "notifications-delete_notification",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Notification Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/devices/": {
      "get": {
        "tags": [
          "notifications",
          "devices"
        ],
        "summary": "Read Devices",
        "description": "Get user's registered devices",
        "operationId": "notifications-read_devices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DevicePublic"
                  },
                  "type": "array",
                  "title": "Response Notifications-Read Devices"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "notifications",
          "devices"
        ],
        "summary": "Create Device",
        "description": "Register a new device for push notifications",
        "operationId": "notifications-create_device",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/devices/active": {
      "get": {
        "tags": [
          "notifications",
          "devices"
        ],
        "summary": "Read Active Devices",
        "description": "Get user's active devices",
        "operationId": "notifications-read_active_devices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DevicePublic"
                  },
                  "type": "array",
                  "title": "Response Notifications-Read Active Devices"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/devices/{device_id}": {
      "put": {
        "tags": [
          "notifications",
          "devices"
        ],
        "summary": "Update Device",
        "description": "Update device information",
        "operationId": "notifications-update_device",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notifications",
          "devices"
        ],
        "summary": "Delete Device",
        "description": "Delete a device registration",
        "operationId": "notifications-delete_device",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/devices/{device_id}/deactivate": {
      "put": {
        "tags": [
          "notifications",
          "devices"
        ],
        "summary": "Deactivate Device",
        "description": "Deactivate a device",
        "operationId": "notifications-deactivate_device",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/preferences/": {
      "get": {
        "tags": [
          "notifications",
          "preferences"
        ],
        "summary": "Read Notification Preferences",
        "description": "Get user's notification preferences",
        "operationId": "notifications-read_notification_preferences",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferencePublic"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "notifications",
          "preferences"
        ],
        "summary": "Update Notification Preferences",
        "description": "Update user's notification preferences",
        "operationId": "notifications-update_notification_preferences",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPreferenceUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferencePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/preferences/reset": {
      "post": {
        "tags": [
          "notifications",
          "preferences"
        ],
        "summary": "Reset Notification Preferences",
        "description": "Reset notification preferences to defaults",
        "operationId": "notifications-reset_notification_preferences",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search/search": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Search",
        "description": "Perform a search across the platform.",
        "operationId": "search-search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search/search/suggestions": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Get Search Suggestions",
        "description": "Get search suggestions based on partial query.",
        "operationId": "search-get_search_suggestions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "Partial search query",
              "title": "Query"
            },
            "description": "Partial search query"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "description": "Maximum number of suggestions",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of suggestions"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSuggestionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/trending": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Get Trending Topics",
        "description": "Get trending topics across the platform.",
        "operationId": "search-get_trending_topics",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by geographic location",
              "title": "Location"
            },
            "description": "Filter by geographic location"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Language for trending topics",
              "default": "en",
              "title": "Language"
            },
            "description": "Language for trending topics"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Maximum number of trending topics",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of trending topics"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrendingTopicsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/search/history": {
      "delete": {
        "tags": [
          "search"
        ],
        "summary": "Clear Search History",
        "description": "Clear all search history for the current user.",
        "operationId": "search-clear_search_history",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Search-Clear Search History"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search/admin/search/cache/cleanup": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Cleanup Expired Cache",
        "description": "Clean up expired search result cache (admin only).",
        "operationId": "search-cleanup_expired_cache",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Search-Cleanup Expired Cache"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search/history/": {
      "post": {
        "tags": [
          "search-history"
        ],
        "summary": "Create Search History",
        "description": "Create a new search history entry.",
        "operationId": "search-history-create_search_history",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchHistoryCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoryPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search/history/my-history": {
      "get": {
        "tags": [
          "search-history"
        ],
        "summary": "Get My Search History",
        "description": "Get current user's search history.",
        "operationId": "search-history-get_my_search_history",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchHistoryPublic"
                  },
                  "title": "Response Search-History-Get My Search History"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/history/recent-queries": {
      "get": {
        "tags": [
          "search-history"
        ],
        "summary": "Get Recent Search Queries",
        "description": "Get recent unique search queries for current user.",
        "operationId": "search-history-get_recent_search_queries",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Search-History-Get Recent Search Queries"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/history/{history_id}": {
      "delete": {
        "tags": [
          "search-history"
        ],
        "summary": "Delete Search History",
        "description": "Delete a specific search history entry (users can only delete their own).",
        "operationId": "search-history-delete_search_history",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoryPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/history/clear-all": {
      "delete": {
        "tags": [
          "search-history"
        ],
        "summary": "Clear Search History",
        "description": "Clear all search history for current user.",
        "operationId": "search-history-clear_search_history",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Search-History-Clear Search History"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search/history/stats": {
      "get": {
        "tags": [
          "search-history"
        ],
        "summary": "Get Search Stats",
        "description": "Get search statistics for current user.",
        "operationId": "search-history-get_search_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoryStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search/history/popular": {
      "get": {
        "tags": [
          "search-history"
        ],
        "summary": "Get Popular Queries",
        "description": "Get globally popular search queries.",
        "operationId": "search-history-get_popular_queries",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Search-History-Get Popular Queries"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/trending/": {
      "get": {
        "tags": [
          "search-trending"
        ],
        "summary": "Get Trending Topics",
        "description": "Get active trending topics.",
        "operationId": "search-trending-get_trending_topics",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrendingTopicsList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "search-trending"
        ],
        "summary": "Create Trending Topic",
        "description": "Create a new trending topic (admin only).",
        "operationId": "search-trending-create_trending_topic",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrendingTopicCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__modules__search__schema__trending__TrendingTopicPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/trending/category/{category}": {
      "get": {
        "tags": [
          "search-trending"
        ],
        "summary": "Get Trending Topics By Category",
        "description": "Get trending topics for a specific category.",
        "operationId": "search-trending-get_trending_topics_by_category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Category"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__modules__search__schema__trending__TrendingTopicPublic"
                  },
                  "title": "Response Search-Trending-Get Trending Topics By Category"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/trending/{topic_id}": {
      "get": {
        "tags": [
          "search-trending"
        ],
        "summary": "Get Trending Topic",
        "description": "Get a specific trending topic by ID.",
        "operationId": "search-trending-get_trending_topic",
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__modules__search__schema__trending__TrendingTopicPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "search-trending"
        ],
        "summary": "Update Trending Topic",
        "description": "Update a trending topic (admin only).",
        "operationId": "search-trending-update_trending_topic",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrendingTopicCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__modules__search__schema__trending__TrendingTopicPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "search-trending"
        ],
        "summary": "Delete Trending Topic",
        "description": "Delete a trending topic (admin only).",
        "operationId": "search-trending-delete_trending_topic",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__modules__search__schema__trending__TrendingTopicPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/trending/search/{topic}": {
      "get": {
        "tags": [
          "search-trending"
        ],
        "summary": "Get Trending Topic By Name",
        "description": "Get a trending topic by name.",
        "operationId": "search-trending-get_trending_topic_by_name",
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__modules__search__schema__trending__TrendingTopicPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/trending/increment/{topic}": {
      "post": {
        "tags": [
          "search-trending"
        ],
        "summary": "Increment Topic Engagement",
        "description": "Increment engagement score for a topic (creates if doesn't exist).",
        "operationId": "search-trending-increment_topic_engagement",
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Topic"
            }
          },
          {
            "name": "increment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0.1,
              "default": 1.0,
              "title": "Increment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__modules__search__schema__trending__TrendingTopicPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/trending/cleanup": {
      "post": {
        "tags": [
          "search-trending"
        ],
        "summary": "Cleanup Expired Topics",
        "description": "Clean up expired trending topics (admin only).",
        "operationId": "search-trending-cleanup_expired_topics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours_old",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 24,
              "title": "Hours Old"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Search-Trending-Cleanup Expired Topics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/me": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get My Analytics",
        "description": "Get analytics for the current user.",
        "operationId": "analytics-get_my_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "End date (YYYY-MM-DD)"
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "daily, weekly, or monthly",
              "default": "daily",
              "title": "Granularity"
            },
            "description": "daily, weekly, or monthly"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnalyticsList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/me/summary": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get My Analytics Summary",
        "description": "Get a summary of analytics for the current user.",
        "operationId": "analytics-get_my_analytics_summary",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Analytics-Get My Analytics Summary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/content/{content_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Content Analytics",
        "description": "Get analytics for specific content.",
        "operationId": "analytics-get_content_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Content Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAnalyticsList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/author/{author_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Author Content Analytics",
        "description": "Get all content analytics for an author.",
        "operationId": "analytics-get_author_content_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "author_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Author Id"
            }
          },
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by content type",
              "title": "Content Type"
            },
            "description": "Filter by content type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAnalyticsList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/top-content": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Top Performing Content",
        "description": "Get top performing content.",
        "operationId": "analytics-get_top_performing_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by content type",
              "title": "Content Type"
            },
            "description": "Filter by content type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentAnalyticsPublic"
                  },
                  "title": "Response Analytics-Get Top Performing Content"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/platform": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Platform Analytics",
        "description": "Get platform-wide analytics (admin only).",
        "operationId": "analytics-get_platform_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (YYYY-MM-DD)",
              "title": "Start Date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (YYYY-MM-DD)",
              "title": "End Date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformAnalyticsList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/platform/summary": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Platform Summary",
        "description": "Get platform analytics summary (admin only).",
        "operationId": "analytics-get_platform_summary",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsSummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/track/user/{user_id}": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Track User Analytics",
        "description": "Track user analytics metrics (internal use).",
        "operationId": "analytics-track_user_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Metrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Analytics-Track User Analytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/track/content/{content_id}": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Track Content Analytics",
        "description": "Track content analytics metrics (internal use).",
        "operationId": "analytics-track_content_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Content Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Metrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Analytics-Track Content Analytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/track/platform": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Track Platform Analytics",
        "description": "Track platform analytics metrics (admin only).",
        "operationId": "analytics-track_platform_analytics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Metrics"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Analytics-Track Platform Analytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/media/upload": {
      "post": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Upload Media File",
        "description": "Upload a media file.",
        "operationId": "media-upload_media_file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_media-upload_media_file"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/media/": {
      "get": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Read Media Files",
        "description": "Retrieve media files with optional filtering.",
        "operationId": "media-read_media_files",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "media_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Media Type"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Public"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaFilePublic"
                  },
                  "title": "Response Media-Read Media Files"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/{file_id}": {
      "get": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Read Media File",
        "description": "Get a specific media file by ID.",
        "operationId": "media-read_media_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFilePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Update Media File",
        "description": "Update a media file.",
        "operationId": "media-update_media_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFilePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Delete Media File",
        "description": "Delete a media file.",
        "operationId": "media-delete_media_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Delete Media File"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/jobs": {
      "post": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Create Processing Job",
        "description": "Create a new processing job.",
        "operationId": "media-create_processing_job",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessingJobCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaProcessingJobPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Read Processing Jobs",
        "description": "Retrieve processing jobs with optional filtering.",
        "operationId": "media-read_processing_jobs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Filter"
            }
          },
          {
            "name": "file_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaProcessingJobPublic"
                  },
                  "title": "Response Media-Read Processing Jobs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/jobs/{job_id}": {
      "get": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Read Processing Job",
        "description": "Get a specific processing job by ID.",
        "operationId": "media-read_processing_job",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaProcessingJobPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Update Processing Job",
        "description": "Update a processing job.",
        "operationId": "media-update_processing_job",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessingJobUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaProcessingJobPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/storage": {
      "post": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Create Storage Config",
        "description": "Create a new storage configuration (admin only).",
        "operationId": "media-create_storage_config",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaStorageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaStoragePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Read Storage Configs",
        "description": "Retrieve storage configurations (admin only).",
        "operationId": "media-read_storage_configs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaStoragePublic"
                  },
                  "title": "Response Media-Read Storage Configs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/storage/stats": {
      "get": {
        "tags": [
          "media",
          "media"
        ],
        "summary": "Get Storage Stats",
        "description": "Get storage usage statistics (admin only).",
        "operationId": "media-get_storage_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Media-Get Storage Stats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/media/images/": {
      "get": {
        "tags": [
          "media",
          "images"
        ],
        "summary": "Read Images",
        "description": "Retrieve images with optional filtering.",
        "operationId": "media-read_images",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Public"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaFilePublic"
                  },
                  "title": "Response Media-Read Images"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/images/{image_id}/resize": {
      "post": {
        "tags": [
          "media",
          "images"
        ],
        "summary": "Resize Image",
        "description": "Create a processing job to resize an image.",
        "operationId": "media-resize_image",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Image Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageResizeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Resize Image"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/images/{image_id}/crop": {
      "post": {
        "tags": [
          "media",
          "images"
        ],
        "summary": "Crop Image",
        "description": "Create a processing job to crop an image.",
        "operationId": "media-crop_image",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Image Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageCropRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Crop Image"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/images/{image_id}/convert": {
      "post": {
        "tags": [
          "media",
          "images"
        ],
        "summary": "Convert Image Format",
        "description": "Create a processing job to convert image format.",
        "operationId": "media-convert_image_format",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Image Id"
            }
          },
          {
            "name": "target_format",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Target format (jpg, png, webp, etc.)",
              "title": "Target Format"
            },
            "description": "Target format (jpg, png, webp, etc.)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Convert Image Format"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/images/{image_id}/optimize": {
      "post": {
        "tags": [
          "media",
          "images"
        ],
        "summary": "Optimize Image",
        "description": "Create a processing job to optimize image for web.",
        "operationId": "media-optimize_image",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Image Id"
            }
          },
          {
            "name": "quality",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Quality level (1-100)",
              "default": 85,
              "title": "Quality"
            },
            "description": "Quality level (1-100)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Optimize Image"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/videos/": {
      "get": {
        "tags": [
          "media",
          "videos"
        ],
        "summary": "Read Videos",
        "description": "Retrieve videos with optional filtering.",
        "operationId": "media-read_videos",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Public"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaFilePublic"
                  },
                  "title": "Response Media-Read Videos"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/videos/{video_id}/compress": {
      "post": {
        "tags": [
          "media",
          "videos"
        ],
        "summary": "Compress Video",
        "description": "Create a processing job to compress a video.",
        "operationId": "media-compress_video",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Video Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoCompressRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Compress Video"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/videos/{video_id}/trim": {
      "post": {
        "tags": [
          "media",
          "videos"
        ],
        "summary": "Trim Video",
        "description": "Create a processing job to trim a video.",
        "operationId": "media-trim_video",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Video Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTrimRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Trim Video"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/videos/{video_id}/thumbnail": {
      "post": {
        "tags": [
          "media",
          "videos"
        ],
        "summary": "Generate Video Thumbnail",
        "description": "Create a processing job to generate video thumbnail.",
        "operationId": "media-generate_video_thumbnail",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Video Id"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Timestamp in seconds for thumbnail",
              "default": 1.0,
              "title": "Timestamp"
            },
            "description": "Timestamp in seconds for thumbnail"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Generate Video Thumbnail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/videos/{video_id}/convert": {
      "post": {
        "tags": [
          "media",
          "videos"
        ],
        "summary": "Convert Video Format",
        "description": "Create a processing job to convert video format.",
        "operationId": "media-convert_video_format",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Video Id"
            }
          },
          {
            "name": "target_format",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Target format (mp4, webm, avi, etc.)",
              "title": "Target Format"
            },
            "description": "Target format (mp4, webm, avi, etc.)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Convert Video Format"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/videos/{video_id}/extract-audio": {
      "post": {
        "tags": [
          "media",
          "videos"
        ],
        "summary": "Extract Audio From Video",
        "description": "Create a processing job to extract audio from video.",
        "operationId": "media-extract_audio_from_video",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Video Id"
            }
          },
          {
            "name": "audio_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Audio format (mp3, wav, aac, etc.)",
              "default": "mp3",
              "title": "Audio Format"
            },
            "description": "Audio format (mp3, wav, aac, etc.)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Media-Extract Audio From Video"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/tiers": {
      "post": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Create Subscription Tier",
        "description": "Create a new subscription tier.",
        "operationId": "monetization-create_subscription_tier",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionTierCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionTierPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read Subscription Tiers",
        "description": "Retrieve subscription tiers.",
        "operationId": "monetization-read_subscription_tiers",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "creator_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Creator Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionTierPublic"
                  },
                  "title": "Response Monetization-Read Subscription Tiers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/tiers/{tier_id}": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read Subscription Tier",
        "description": "Get a specific subscription tier.",
        "operationId": "monetization-read_subscription_tier",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tier Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionTierPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Update Subscription Tier",
        "description": "Update a subscription tier.",
        "operationId": "monetization-update_subscription_tier",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tier Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionTierUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionTierPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Delete Subscription Tier",
        "description": "Delete a subscription tier.",
        "operationId": "monetization-delete_subscription_tier",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tier Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Monetization-Delete Subscription Tier"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/subscribe": {
      "post": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Subscribe To Tier",
        "description": "Subscribe to a creator's tier.",
        "operationId": "monetization-subscribe_to_tier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCheckout"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscriptionPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/monetization/subscriptions": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read User Subscriptions",
        "description": "Get user's subscriptions.",
        "operationId": "monetization-read_user_subscriptions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscriptionPublic"
                  },
                  "title": "Response Monetization-Read User Subscriptions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/subscriptions/{subscription_id}/cancel": {
      "post": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Cancel Subscription",
        "description": "Cancel a subscription.",
        "operationId": "monetization-cancel_subscription",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subscription Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Monetization-Cancel Subscription"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/payments": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read User Payments",
        "description": "Get user's payment history.",
        "operationId": "monetization-read_user_payments",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentPublic"
                  },
                  "title": "Response Monetization-Read User Payments"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/campaigns": {
      "post": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Create Ad Campaign",
        "description": "Create a new ad campaign.",
        "operationId": "monetization-create_ad_campaign",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdCampaignCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdCampaignPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read Ad Campaigns",
        "description": "Get user's ad campaigns.",
        "operationId": "monetization-read_ad_campaigns",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdCampaignPublic"
                  },
                  "title": "Response Monetization-Read Ad Campaigns"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/campaigns/{campaign_id}": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read Ad Campaign",
        "description": "Get a specific ad campaign.",
        "operationId": "monetization-read_ad_campaign",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdCampaignPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Update Ad Campaign",
        "description": "Update an ad campaign.",
        "operationId": "monetization-update_ad_campaign",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdCampaignUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdCampaignPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/campaigns/{campaign_id}/analytics": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Get Campaign Analytics",
        "description": "Get analytics for an ad campaign.",
        "operationId": "monetization-get_campaign_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Monetization-Get Campaign Analytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/creator/dashboard": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Get Creator Dashboard",
        "description": "Get creator dashboard data.",
        "operationId": "monetization-get_creator_dashboard",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorDashboard"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/monetization/creator/analytics": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Get Creator Analytics",
        "description": "Get creator revenue analytics.",
        "operationId": "monetization-get_creator_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueAnalytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/creator/earnings": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read Creator Earnings",
        "description": "Get creator earnings.",
        "operationId": "monetization-read_creator_earnings",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreatorEarningPublic"
                  },
                  "title": "Response Monetization-Read Creator Earnings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/creator/payouts": {
      "post": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Create Creator Payout",
        "description": "Create a payout for creator earnings.",
        "operationId": "monetization-create_creator_payout",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "period_start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Period Start"
            }
          },
          {
            "name": "period_end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Period End"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatorPayoutPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/sponsored": {
      "post": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Create Sponsored Content",
        "description": "Create sponsored content.",
        "operationId": "monetization-create_sponsored_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredContentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredContentPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read Sponsored Content",
        "description": "Get user's sponsored content.",
        "operationId": "monetization-read_sponsored_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SponsoredContentPublic"
                  },
                  "title": "Response Monetization-Read Sponsored Content"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/sponsored/{content_id}/approve": {
      "put": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Approve Sponsored Content",
        "description": "Approve sponsored content.",
        "operationId": "monetization-approve_sponsored_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Content Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Monetization-Approve Sponsored Content"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/premium/features": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read Premium Features",
        "description": "Get available premium features.",
        "operationId": "monetization-read_premium_features",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PremiumFeaturePublic"
                  },
                  "type": "array",
                  "title": "Response Monetization-Read Premium Features"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Create Premium Feature",
        "description": "Create a premium feature (admin only).",
        "operationId": "monetization-create_premium_feature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PremiumFeatureCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremiumFeaturePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/monetization/premium/purchase": {
      "post": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Purchase Premium Feature",
        "description": "Purchase a premium feature.",
        "operationId": "monetization-purchase_premium_feature",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "feature_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feature Id"
            }
          },
          {
            "name": "payment_method",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Payment method",
              "title": "Payment Method"
            },
            "description": "Payment method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremiumFeaturePurchasePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/premium/purchases": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Read Premium Purchases",
        "description": "Get user's premium feature purchases.",
        "operationId": "monetization-read_premium_purchases",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PremiumFeaturePurchasePublic"
                  },
                  "title": "Response Monetization-Read Premium Purchases"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/premium/check-access/{feature_type}": {
      "get": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Check Premium Access",
        "description": "Check if user has access to a premium feature type.",
        "operationId": "monetization-check_premium_access",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "feature_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feature Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Monetization-Check Premium Access"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/impressions": {
      "post": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Record Ad Impression",
        "description": "Record an ad impression (internal use).",
        "operationId": "monetization-record_ad_impression",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdImpressionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Monetization-Record Ad Impression"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monetization/premium/features/{feature_id}": {
      "put": {
        "tags": [
          "monetization",
          "monetization"
        ],
        "summary": "Update Premium Feature",
        "description": "Update a premium feature (admin only).",
        "operationId": "monetization-update_premium_feature",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "feature_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feature Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PremiumFeatureUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremiumFeaturePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/reports/": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Report Content",
        "description": "Report content for moderation.",
        "operationId": "content-moderation-report_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentReportCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentReportPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Reports",
        "description": "Get content reports (moderators only).",
        "operationId": "content-moderation-get_reports",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentReportPublic"
                  },
                  "title": "Response Content-Moderation-Get Reports"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/reports/my-reports": {
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get My Reports",
        "description": "Get reports submitted by current user.",
        "operationId": "content-moderation-get_my_reports",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentReportPublic"
                  },
                  "title": "Response Content-Moderation-Get My Reports"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/reports/{report_id}/review": {
      "put": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Review Report",
        "description": "Review a content report (moderators only).",
        "operationId": "content-moderation-review_report",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Report Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "New status for the report",
              "title": "Status"
            },
            "description": "New status for the report"
          },
          {
            "name": "resolution",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Resolution notes",
              "title": "Resolution"
            },
            "description": "Resolution notes"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentReportPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/reports/bulk-update": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Bulk Update Reports",
        "description": "Bulk update multiple reports (moderators only).",
        "operationId": "content-moderation-bulk_update_reports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkReportUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContentReportPublic"
                  },
                  "type": "array",
                  "title": "Response Content-Moderation-Bulk Update Reports"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/moderation/actions/": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Take Moderation Action",
        "description": "Take a moderation action (moderators only).",
        "operationId": "content-moderation-take_moderation_action",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModerationActionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationActionPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Moderation Actions",
        "description": "Get moderation actions (moderators only).",
        "operationId": "content-moderation-get_moderation_actions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content Type"
            }
          },
          {
            "name": "content_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModerationActionPublic"
                  },
                  "title": "Response Content-Moderation-Get Moderation Actions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/actions/bulk": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Bulk Moderate Content",
        "description": "Apply moderation action to multiple content items (moderators only).",
        "operationId": "content-moderation-bulk_moderate_content",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkModerationAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ModerationActionPublic"
                  },
                  "type": "array",
                  "title": "Response Content-Moderation-Bulk Moderate Content"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/moderation/appeals/": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Appeal Moderation Action",
        "description": "Appeal a moderation action.",
        "operationId": "content-moderation-appeal_moderation_action",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModerationAppealCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationAppealPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Appeals",
        "description": "Get moderation appeals (moderators only).",
        "operationId": "content-moderation-get_appeals",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModerationAppealPublic"
                  },
                  "title": "Response Content-Moderation-Get Appeals"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/appeals/my-appeals": {
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get My Appeals",
        "description": "Get appeals submitted by current user.",
        "operationId": "content-moderation-get_my_appeals",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModerationAppealPublic"
                  },
                  "title": "Response Content-Moderation-Get My Appeals"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/appeals/{appeal_id}/review": {
      "put": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Review Appeal",
        "description": "Review a moderation appeal (moderators only).",
        "operationId": "content-moderation-review_appeal",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "appeal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Appeal Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "New status for the appeal",
              "title": "Status"
            },
            "description": "New status for the appeal"
          },
          {
            "name": "review_notes",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Review notes",
              "title": "Review Notes"
            },
            "description": "Review notes"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationAppealPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/strikes/": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Issue User Strike",
        "description": "Issue a strike to a user (moderators only).",
        "operationId": "content-moderation-issue_user_strike",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserStrikeCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStrikePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get User Strikes",
        "description": "Get user strikes (moderators only).",
        "operationId": "content-moderation-get_user_strikes",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserStrikePublic"
                  },
                  "title": "Response Content-Moderation-Get User Strikes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/bans/": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Ban User",
        "description": "Ban a user (moderators only).",
        "operationId": "content-moderation-ban_user",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBanCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBanPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get User Bans",
        "description": "Get user bans (moderators only).",
        "operationId": "content-moderation-get_user_bans",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBanPublic"
                  },
                  "title": "Response Content-Moderation-Get User Bans"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/bans/appeal": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Appeal Ban",
        "description": "Appeal a user ban.",
        "operationId": "content-moderation-appeal_ban",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanAppealCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanAppealPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/moderation/bans/appeals": {
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Ban Appeals",
        "description": "Get ban appeals (moderators only).",
        "operationId": "content-moderation-get_ban_appeals",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BanAppealPublic"
                  },
                  "title": "Response Content-Moderation-Get Ban Appeals"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/ai-moderate": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Ai Moderate Content",
        "description": "Use AI to moderate content (moderators only).",
        "operationId": "content-moderation-ai_moderate_content",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIModerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIModerationResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/moderation/flags/": {
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Content Flags",
        "description": "Get content flags (moderators only).",
        "operationId": "content-moderation-get_content_flags",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "high_confidence_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "High Confidence Only"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentFlagPublic"
                  },
                  "title": "Response Content-Moderation-Get Content Flags"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/flags/{flag_id}/resolve": {
      "put": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Resolve Content Flag",
        "description": "Resolve a content flag (moderators only).",
        "operationId": "content-moderation-resolve_content_flag",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "flag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Flag Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Resolution status",
              "default": "resolved",
              "title": "Status"
            },
            "description": "Resolution status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentFlagPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/rules/": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Create Moderation Rule",
        "description": "Create a moderation rule (moderators only).",
        "operationId": "content-moderation-create_moderation_rule",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModerationRuleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationRulePublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Moderation Rules",
        "description": "Get moderation rules (moderators only).",
        "operationId": "content-moderation-get_moderation_rules",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModerationRulePublic"
                  },
                  "title": "Response Content-Moderation-Get Moderation Rules"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/stats": {
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Moderation Stats",
        "description": "Get moderation statistics (moderators only).",
        "operationId": "content-moderation-get_moderation_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/moderation/analytics/content-summary": {
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Content Moderation Summary",
        "description": "Get content moderation summary (moderators only).",
        "operationId": "content-moderation-get_content_moderation_summary",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContentModerationSummary"
                  },
                  "type": "array",
                  "title": "Response Content-Moderation-Get Content Moderation Summary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/moderation/analytics/moderator-activity": {
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Moderator Activity",
        "description": "Get moderator activity (moderators only).",
        "operationId": "content-moderation-get_moderator_activity",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Hours to look back",
              "default": 24,
              "title": "Hours"
            },
            "description": "Hours to look back"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModeratorActivity"
                  },
                  "title": "Response Content-Moderation-Get Moderator Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/logs/": {
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Get Moderation Logs",
        "description": "Get moderation logs (moderators only).",
        "operationId": "content-moderation-get_moderation_logs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Hours to look back",
              "default": 24,
              "title": "Hours"
            },
            "description": "Hours to look back"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModerationLogPublic"
                  },
                  "title": "Response Content-Moderation-Get Moderation Logs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderation/cleanup": {
      "post": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Cleanup Expired Items",
        "description": "Clean up expired strikes and bans (moderators only).",
        "operationId": "content-moderation-cleanup_expired_items",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Content-Moderation-Cleanup Expired Items"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/moderation/check-ban/{user_id}": {
      "get": {
        "tags": [
          "content-moderation"
        ],
        "summary": "Check User Ban",
        "description": "Check if a user is currently banned.",
        "operationId": "content-moderation-check_user_ban",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Content-Moderation-Check User Ban"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/recommendations/": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get Recommendations",
        "description": "Get personalized content recommendations.",
        "operationId": "ai-features-get_recommendations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContentRecommendationPublic"
                  },
                  "type": "array",
                  "title": "Response Ai-Features-Get Recommendations"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-features/recommendations/mark-viewed": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Mark Recommendation Viewed",
        "description": "Mark a recommendation as viewed.",
        "operationId": "ai-features-mark_recommendation_viewed",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "content_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of content",
              "title": "Content Type"
            },
            "description": "Type of content"
          },
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the content",
              "title": "Content Id"
            },
            "description": "ID of the content"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/recommendations/mark-clicked": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Mark Recommendation Clicked",
        "description": "Mark a recommendation as clicked.",
        "operationId": "ai-features-mark_recommendation_clicked",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "content_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of content",
              "title": "Content Type"
            },
            "description": "Type of content"
          },
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the content",
              "title": "Content Id"
            },
            "description": "ID of the content"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/analyze/": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Analyze Content",
        "description": "Analyze content using AI models.",
        "operationId": "ai-features-analyze_content",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-features/analyze/bulk": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Bulk Analyze Content",
        "description": "Analyze multiple content items in bulk.",
        "operationId": "ai-features-bulk_analyze_content",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-features/translate/": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Translate Content",
        "description": "Translate content to target language.",
        "operationId": "ai-features-translate_content",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-features/trends/": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get Trending Content",
        "description": "Get trending content analysis.",
        "operationId": "ai-features-get_trending_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_window",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Time window (1h, 24h, 7d, 30d)",
              "default": "24h",
              "title": "Time Window"
            },
            "description": "Time window (1h, 24h, 7d, 30d)"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Region filter (country code)",
              "title": "Region"
            },
            "description": "Region filter (country code)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrendAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/predict/engagement": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Predict Engagement",
        "description": "Predict engagement metrics for content.",
        "operationId": "ai-features-predict_engagement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngagementPredictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngagementPredictionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-features/analyze/churn/{user_id}": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Analyze Churn Risk",
        "description": "Analyze churn risk for a user.",
        "operationId": "ai-features-analyze_churn_risk",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChurnAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/feed/personalized": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get Personalized Feed",
        "description": "Get user's personalized feed settings.",
        "operationId": "ai-features-get_personalized_feed",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PersonalizedFeedPublic"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Ai-Features-Get Personalized Feed"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Update Personalized Feed",
        "description": "Update personalized feed settings.",
        "operationId": "ai-features-update_personalized_feed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalizedFeedCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalizedFeedPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-features/behavior/track": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Track User Behavior",
        "description": "Track user behavior for ML training.",
        "operationId": "ai-features-track_user_behavior",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "action_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of action performed",
              "title": "Action Type"
            },
            "description": "Type of action performed"
          },
          {
            "name": "target_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of target (post, user, etc.)",
              "title": "Target Type"
            },
            "description": "Type of target (post, user, etc.)"
          },
          {
            "name": "target_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the target",
              "title": "Target Id"
            },
            "description": "ID of the target"
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User session ID",
              "title": "Session Id"
            },
            "description": "User session ID"
          },
          {
            "name": "duration_seconds",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Duration in seconds",
              "title": "Duration Seconds"
            },
            "description": "Duration in seconds"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_ai-features-track_user_behavior"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/classify/": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Classify Content",
        "description": "Classify content into categories.",
        "operationId": "ai-features-classify_content",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "content_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of content",
              "title": "Content Type"
            },
            "description": "Type of content"
          },
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the content",
              "title": "Content Id"
            },
            "description": "ID of the content"
          },
          {
            "name": "text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Content text to classify",
              "title": "Text"
            },
            "description": "Content text to classify"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentClassificationPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/detect-anomalies/": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Detect Anomalies",
        "description": "Detect anomalies for a target.",
        "operationId": "ai-features-detect_anomalies",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of target to analyze",
              "title": "Target Type"
            },
            "description": "Type of target to analyze"
          },
          {
            "name": "target_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the target",
              "title": "Target Id"
            },
            "description": "ID of the target"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnomalyDetectionPublic"
                  },
                  "title": "Response Ai-Features-Detect Anomalies"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/health/models": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get Ai Model Health",
        "description": "Get health status of AI models.",
        "operationId": "ai-features-get_ai_model_health",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AIModelHealthCheck"
                  },
                  "type": "array",
                  "title": "Response Ai-Features-Get Ai Model Health"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-features/metrics/log": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Log Model Metrics",
        "description": "Log performance metrics for AI models.",
        "operationId": "ai-features-log_model_metrics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIModelMetricsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIModelMetricsPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/ai-features/metrics/{model_name}": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get Model Metrics",
        "description": "Get metrics for a specific AI model.",
        "operationId": "ai-features-get_model_metrics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AIModelMetricsPublic"
                  },
                  "title": "Response Ai-Features-Get Model Metrics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/analytics/user-behavior": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get User Behavior Analytics",
        "description": "Get user behavior analytics.",
        "operationId": "ai-features-get_user_behavior_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User ID (optional, defaults to current user)",
              "title": "User Id"
            },
            "description": "User ID (optional, defaults to current user)"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "default": 30,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Ai-Features-Get User Behavior Analytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/analytics/content-classifications": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get Content Classifications",
        "description": "Get content classification analytics.",
        "operationId": "ai-features-get_content_classifications",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category"
            },
            "description": "Filter by category"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentClassificationPublic"
                  },
                  "title": "Response Ai-Features-Get Content Classifications"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/analytics/anomalies": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get Anomaly Analytics",
        "description": "Get anomaly detection analytics.",
        "operationId": "ai-features-get_anomaly_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "anomaly_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by anomaly type",
              "title": "Anomaly Type"
            },
            "description": "Filter by anomaly type"
          },
          {
            "name": "high_risk_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "High Risk Only"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnomalyDetectionPublic"
                  },
                  "title": "Response Ai-Features-Get Anomaly Analytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/analytics/engagement-predictions": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get Engagement Predictions",
        "description": "Get engagement prediction analytics.",
        "operationId": "ai-features-get_engagement_predictions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "viral_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Viral Only"
            }
          },
          {
            "name": "min_score",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.0,
              "default": 0.0,
              "title": "Min Score"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EngagementPredictionPublic"
                  },
                  "title": "Response Ai-Features-Get Engagement Predictions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/analytics/churn-risks": {
      "get": {
        "tags": [
          "ai-features"
        ],
        "summary": "Get Churn Risk Analytics",
        "description": "Get churn risk analytics.",
        "operationId": "ai-features-get_churn_risk_analytics",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by risk level",
              "title": "Risk Level"
            },
            "description": "Filter by risk level"
          },
          {
            "name": "min_probability",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.0,
              "default": 0.0,
              "title": "Min Probability"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChurnAnalysisResponse"
                  },
                  "title": "Response Ai-Features-Get Churn Risk Analytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/cache/cleanup-translations": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Cleanup Translation Cache",
        "description": "Clean up old translation cache entries.",
        "operationId": "ai-features-cleanup_translation_cache",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_old",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Remove translations older than this many days",
              "default": 30,
              "title": "Days Old"
            },
            "description": "Remove translations older than this many days"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "title": "Response Ai-Features-Cleanup Translation Cache"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-features/analysis/deactivate-old": {
      "post": {
        "tags": [
          "ai-features"
        ],
        "summary": "Deactivate Old Analyses",
        "description": "Deactivate old analyses for content.",
        "operationId": "ai-features-deactivate_old_analyses",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "content_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of content",
              "title": "Content Type"
            },
            "description": "Type of content"
          },
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the content",
              "title": "Content Id"
            },
            "description": "ID of the content"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "title": "Response Ai-Features-Deactivate Old Analyses"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Create Integration",
        "description": "Create a new integration.",
        "operationId": "integrations-create_integration",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Integrations",
        "description": "Get all integrations.",
        "operationId": "integrations-get_integrations",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationPublic"
                  },
                  "title": "Response Integrations-Get Integrations"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Integration",
        "description": "Get integration by ID.",
        "operationId": "integrations-get_integration",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Update Integration",
        "description": "Update integration.",
        "operationId": "integrations-update_integration",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "integrations"
        ],
        "summary": "Delete Integration",
        "description": "Delete integration.",
        "operationId": "integrations-delete_integration",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}/test": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Test Integration",
        "description": "Test integration connectivity.",
        "operationId": "integrations-test_integration",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationTestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}/sync": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Sync Integration",
        "description": "Sync integration data.",
        "operationId": "integrations-sync_integration",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSyncRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationSyncResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/webhooks/": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Create Webhook",
        "description": "Create a new webhook.",
        "operationId": "integrations-create_webhook",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Webhooks",
        "description": "Get all webhooks.",
        "operationId": "integrations-get_webhooks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by integration ID",
              "title": "Integration Id"
            },
            "description": "Filter by integration ID"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookPublic"
                  },
                  "title": "Response Integrations-Get Webhooks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Webhook",
        "description": "Get webhook by ID.",
        "operationId": "integrations-get_webhook",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Update Webhook",
        "description": "Update webhook.",
        "operationId": "integrations-update_webhook",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "integrations"
        ],
        "summary": "Delete Webhook",
        "description": "Delete webhook.",
        "operationId": "integrations-delete_webhook",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/webhooks/{webhook_id}/trigger": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Trigger Webhook",
        "description": "Manually trigger a webhook.",
        "operationId": "integrations-trigger_webhook",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookTriggerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookTriggerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/webhooks/{webhook_id}/deliveries": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Webhook Deliveries",
        "description": "Get webhook delivery history.",
        "operationId": "integrations-get_webhook_deliveries",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookDeliveryPublic"
                  },
                  "title": "Response Integrations-Get Webhook Deliveries"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/api-keys/generate": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Generate Api Key",
        "description": "Generate a new API key.",
        "operationId": "integrations-generate_api_key",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyGenerateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyGenerateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/api-keys/": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Api Keys",
        "description": "Get all API keys.",
        "operationId": "integrations-get_api_keys",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by integration ID",
              "title": "Integration Id"
            },
            "description": "Filter by integration ID"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APIKeyPublic"
                  },
                  "title": "Response Integrations-Get Api Keys"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/api-keys/{api_key_id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "summary": "Revoke Api Key",
        "description": "Revoke an API key.",
        "operationId": "integrations-revoke_api_key",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Api Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/api-keys/{api_key_id}/requests": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Api Key Requests",
        "description": "Get API request logs for a key.",
        "operationId": "integrations-get_api_key_requests",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Api Key Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APIRequestLogPublic"
                  },
                  "title": "Response Integrations-Get Api Key Requests"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}/social-media/post": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Post To Social Media",
        "description": "Post content to social media platforms.",
        "operationId": "integrations-post_to_social_media",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialMediaPostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialMediaPostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/social-media/posts": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Social Media Posts",
        "description": "Get social media posts.",
        "operationId": "integrations-get_social_media_posts",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration Id"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Platform"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SocialMediaPostPublic"
                  },
                  "title": "Response Integrations-Get Social Media Posts"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}/news/fetch": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Fetch News",
        "description": "Fetch news from external APIs.",
        "operationId": "integrations-fetch_news",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsFetchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsFetchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/news/sources": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get News Sources",
        "description": "Get news sources.",
        "operationId": "integrations-get_news_sources",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration Id"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NewsSourcePublic"
                  },
                  "title": "Response Integrations-Get News Sources"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/news/articles": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get News Articles",
        "description": "Get external news articles.",
        "operationId": "integrations-get_news_articles",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Id"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "imported_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Imported Only"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalNewsArticlePublic"
                  },
                  "title": "Response Integrations-Get News Articles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/news/articles/{article_id}/import": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Import News Article",
        "description": "Mark a news article as imported.",
        "operationId": "integrations-import_news_article",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Article Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}/weather": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Weather",
        "description": "Get weather data.",
        "operationId": "integrations-get_weather",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeatherRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}/stocks": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Stock Data",
        "description": "Get stock market data.",
        "operationId": "integrations-get_stock_data",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/{integration_id}/sports": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Sports Data",
        "description": "Get sports data.",
        "operationId": "integrations-get_sports_data",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SportsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SportsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/weather/cache": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Weather Cache",
        "description": "Get cached weather data.",
        "operationId": "integrations-get_weather_cache",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherDataPublic"
                  },
                  "title": "Response Integrations-Get Weather Cache"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/stocks/cache": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Stocks Cache",
        "description": "Get cached stock data.",
        "operationId": "integrations-get_stocks_cache",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Symbol"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockDataPublic"
                  },
                  "title": "Response Integrations-Get Stocks Cache"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/sports/cache": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Sports Cache",
        "description": "Get cached sports data.",
        "operationId": "integrations-get_sports_cache",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sport",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sport"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SportsDataPublic"
                  },
                  "title": "Response Integrations-Get Sports Cache"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/stats/integrations": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Integration Stats",
        "description": "Get integration statistics.",
        "operationId": "integrations-get_integration_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/stats/webhooks": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Webhook Stats",
        "description": "Get webhook statistics.",
        "operationId": "integrations-get_webhook_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/stats/api-keys": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Api Key Stats",
        "description": "Get API key statistics.",
        "operationId": "integrations-get_api_key_stats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/sync/logs": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Sync Logs",
        "description": "Get integration sync logs.",
        "operationId": "integrations-get_sync_logs",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "default": 24,
              "title": "Hours"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationSyncLogPublic"
                  },
                  "title": "Response Integrations-Get Sync Logs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/cleanup/weather": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Cleanup Weather Cache",
        "description": "Clean up expired weather data.",
        "operationId": "integrations-cleanup_weather_cache",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Integrations-Cleanup Weather Cache"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/cleanup/stocks": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Cleanup Stocks Cache",
        "description": "Clean up expired stock data.",
        "operationId": "integrations-cleanup_stocks_cache",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Integrations-Cleanup Stocks Cache"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/cleanup/sports": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Cleanup Sports Cache",
        "description": "Clean up expired sports data.",
        "operationId": "integrations-cleanup_sports_cache",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Integrations-Cleanup Sports Cache"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/integrations/cleanup/expired-api-keys": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Cleanup Expired Api Keys",
        "description": "Clean up expired API keys.",
        "operationId": "integrations-cleanup_expired_api_keys",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Integrations-Cleanup Expired Api Keys"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AIModelHealthCheck": {
        "properties": {
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "model_version": {
            "type": "string",
            "title": "Model Version"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "last_evaluation": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Evaluation"
          },
          "metrics": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Metrics"
          },
          "alerts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Alerts"
          }
        },
        "type": "object",
        "required": [
          "model_name",
          "model_version",
          "status",
          "metrics"
        ],
        "title": "AIModelHealthCheck"
      },
      "AIModelMetricsCreate": {
        "properties": {
          "model_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Model Name"
          },
          "model_version": {
            "type": "string",
            "maxLength": 50,
            "title": "Model Version"
          },
          "metric_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Metric Type"
          },
          "metric_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Metric Value"
          },
          "dataset_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Size"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "model_name",
          "model_version",
          "metric_type",
          "metric_value"
        ],
        "title": "AIModelMetricsCreate"
      },
      "AIModelMetricsPublic": {
        "properties": {
          "model_name": {
            "type": "string",
            "maxLength": 100,
            "title": "Model Name"
          },
          "model_version": {
            "type": "string",
            "maxLength": 50,
            "title": "Model Version"
          },
          "metric_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Metric Type"
          },
          "metric_value": {
            "type": "string",
            "title": "Metric Value"
          },
          "dataset_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Size"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "evaluation_date": {
            "type": "string",
            "format": "date-time",
            "title": "Evaluation Date"
          },
          "is_baseline": {
            "type": "boolean",
            "title": "Is Baseline"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "model_name",
          "model_version",
          "metric_type",
          "metric_value",
          "id",
          "evaluation_date",
          "is_baseline",
          "created_at"
        ],
        "title": "AIModelMetricsPublic"
      },
      "AIModerationRequest": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "content_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Text"
          },
          "content_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Url"
          },
          "check_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Check Types"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id"
        ],
        "title": "AIModerationRequest"
      },
      "AIModerationResult": {
        "properties": {
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "flags": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Flags"
          },
          "overall_risk_score": {
            "type": "number",
            "title": "Overall Risk Score"
          },
          "recommended_action": {
            "type": "string",
            "title": "Recommended Action"
          },
          "confidence_scores": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Confidence Scores"
          }
        },
        "type": "object",
        "required": [
          "content_id",
          "flags",
          "overall_risk_score",
          "recommended_action",
          "confidence_scores"
        ],
        "title": "AIModerationResult"
      },
      "APIKeyGenerateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          },
          "rate_limit": {
            "type": "integer",
            "title": "Rate Limit",
            "default": 1000
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "APIKeyGenerateRequest"
      },
      "APIKeyGenerateResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "api_key": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APIKeyPublic"
              },
              {
                "type": "null"
              }
            ]
          },
          "raw_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw Key"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "APIKeyGenerateResponse"
      },
      "APIKeyPublic": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          },
          "rate_limit": {
            "type": "integer",
            "title": "Rate Limit",
            "default": 1000
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "integration_id",
          "created_at",
          "updated_at",
          "usage_count"
        ],
        "title": "APIKeyPublic"
      },
      "APIKeyStatsResponse": {
        "properties": {
          "total_keys": {
            "type": "integer",
            "title": "Total Keys"
          },
          "active_keys": {
            "type": "integer",
            "title": "Active Keys"
          },
          "total_requests": {
            "type": "integer",
            "title": "Total Requests"
          },
          "average_response_time": {
            "type": "number",
            "title": "Average Response Time"
          },
          "top_endpoints": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Endpoints"
          },
          "recent_requests": {
            "items": {
              "$ref": "#/components/schemas/APIRequestLogPublic"
            },
            "type": "array",
            "title": "Recent Requests"
          }
        },
        "type": "object",
        "required": [
          "total_keys",
          "active_keys",
          "total_requests",
          "average_response_time",
          "top_endpoints",
          "recent_requests"
        ],
        "title": "APIKeyStatsResponse"
      },
      "APIRequestLogPublic": {
        "properties": {
          "method": {
            "type": "string",
            "maxLength": 10,
            "title": "Method"
          },
          "endpoint": {
            "type": "string",
            "maxLength": 500,
            "title": "Endpoint"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 45
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "response_status": {
            "type": "integer",
            "title": "Response Status"
          },
          "response_time_ms": {
            "type": "integer",
            "title": "Response Time Ms"
          },
          "request_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Size Bytes"
          },
          "response_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Size Bytes"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "api_key_id": {
            "type": "string",
            "format": "uuid",
            "title": "Api Key Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "method",
          "endpoint",
          "response_status",
          "response_time_ms",
          "id",
          "api_key_id",
          "created_at"
        ],
        "title": "APIRequestLogPublic"
      },
      "AccountType": {
        "type": "string",
        "enum": [
          "personal",
          "business",
          "journalist",
          "organization"
        ],
        "title": "AccountType"
      },
      "AdCampaignCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "budget": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Budget"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "target_audience": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience"
          },
          "ad_content": {
            "additionalProperties": true,
            "type": "object",
            "title": "Ad Content"
          }
        },
        "type": "object",
        "required": [
          "name",
          "budget"
        ],
        "title": "AdCampaignCreate"
      },
      "AdCampaignPublic": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "budget": {
            "type": "string",
            "title": "Budget"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "target_audience": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience"
          },
          "ad_content": {
            "additionalProperties": true,
            "type": "object",
            "title": "Ad Content"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "advertiser_id": {
            "type": "string",
            "format": "uuid",
            "title": "Advertiser Id"
          },
          "spent": {
            "type": "string",
            "title": "Spent"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "budget",
          "id",
          "advertiser_id",
          "spent",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "AdCampaignPublic"
      },
      "AdCampaignUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "budget": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budget"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "target_audience": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience"
          },
          "ad_content": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ad Content"
          }
        },
        "type": "object",
        "title": "AdCampaignUpdate"
      },
      "AdImpressionCreate": {
        "properties": {
          "campaign_id": {
            "type": "string",
            "format": "uuid",
            "title": "Campaign Id"
          },
          "content_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Id"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "impression_type": {
            "type": "string",
            "title": "Impression Type",
            "default": "view"
          }
        },
        "type": "object",
        "required": [
          "campaign_id"
        ],
        "title": "AdImpressionCreate"
      },
      "AnalyticsSummary": {
        "properties": {
          "total_users": {
            "type": "integer",
            "title": "Total Users"
          },
          "active_users_today": {
            "type": "integer",
            "title": "Active Users Today"
          },
          "total_content": {
            "type": "integer",
            "title": "Total Content"
          },
          "total_engagement": {
            "type": "integer",
            "title": "Total Engagement"
          },
          "top_performing_content": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Performing Content"
          },
          "user_growth_trend": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "User Growth Trend"
          },
          "revenue_trend": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revenue Trend"
          }
        },
        "type": "object",
        "required": [
          "total_users",
          "active_users_today",
          "total_content",
          "total_engagement",
          "top_performing_content",
          "user_growth_trend"
        ],
        "title": "AnalyticsSummary",
        "description": "Summary of key analytics metrics"
      },
      "AnomalyDetectionPublic": {
        "properties": {
          "target_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Target Type"
          },
          "target_id": {
            "type": "string",
            "format": "uuid",
            "title": "Target Id"
          },
          "anomaly_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Anomaly Type"
          },
          "anomaly_score": {
            "type": "string",
            "title": "Anomaly Score"
          },
          "threshold_breached": {
            "type": "string",
            "title": "Threshold Breached"
          },
          "detection_method": {
            "type": "string",
            "maxLength": 50,
            "title": "Detection Method"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "is_investigated": {
            "type": "boolean",
            "title": "Is Investigated"
          },
          "investigation_result": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Investigation Result"
          },
          "false_positive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "False Positive"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "target_type",
          "target_id",
          "anomaly_type",
          "anomaly_score",
          "threshold_breached",
          "detection_method",
          "id",
          "is_investigated",
          "created_at"
        ],
        "title": "AnomalyDetectionPublic"
      },
      "BadgeType": {
        "type": "string",
        "enum": [
          "heart",
          "star",
          "diamond",
          "fire",
          "rocket",
          "crown"
        ],
        "title": "BadgeType",
        "description": "Badge types for donations/tips"
      },
      "BanAppealCreate": {
        "properties": {
          "ban_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ban Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 1000,
            "title": "Reason"
          },
          "evidence": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Evidence"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "ban_id",
          "reason"
        ],
        "title": "BanAppealCreate"
      },
      "BanAppealPublic": {
        "properties": {
          "ban_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ban Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 1000,
            "title": "Reason"
          },
          "evidence": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Evidence"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "appellant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Appellant Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "reviewed_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed By"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "ban_id",
          "reason",
          "id",
          "appellant_id",
          "status",
          "created_at"
        ],
        "title": "BanAppealPublic"
      },
      "Body_ai-features-track_user_behavior": {
        "properties": {
          "device_info": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Info"
          },
          "location_info": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Info"
          }
        },
        "type": "object",
        "title": "Body_ai-features-track_user_behavior"
      },
      "Body_login-login_access_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "format": "password",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login-login_access_token"
      },
      "Body_media-upload_media_file": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": true
          },
          "media_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Type"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_media-upload_media_file"
      },
      "BreakingNewsResponse": {
        "properties": {
          "breaking_news": {
            "items": {
              "$ref": "#/components/schemas/NewsResponse"
            },
            "type": "array",
            "title": "Breaking News"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "breaking_news",
          "total",
          "last_updated"
        ],
        "title": "BreakingNewsResponse",
        "description": "Breaking news response"
      },
      "BulkAnalysisRequest": {
        "properties": {
          "content_items": {
            "items": {
              "$ref": "#/components/schemas/ContentAnalysisRequest"
            },
            "type": "array",
            "title": "Content Items"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "default": "normal"
          }
        },
        "type": "object",
        "required": [
          "content_items"
        ],
        "title": "BulkAnalysisRequest"
      },
      "BulkAnalysisResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/ContentAnalysisResponse"
            },
            "type": "array",
            "title": "Results"
          },
          "failed_items": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Failed Items"
          },
          "processing_stats": {
            "additionalProperties": true,
            "type": "object",
            "title": "Processing Stats"
          }
        },
        "type": "object",
        "required": [
          "results",
          "processing_stats"
        ],
        "title": "BulkAnalysisResponse"
      },
      "BulkModerationAction": {
        "properties": {
          "content_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Content Ids"
          },
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "default": "medium"
          }
        },
        "type": "object",
        "required": [
          "content_ids",
          "action_type",
          "reason"
        ],
        "title": "BulkModerationAction"
      },
      "BulkReportUpdate": {
        "properties": {
          "report_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Report Ids"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "resolution": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolution"
          }
        },
        "type": "object",
        "required": [
          "report_ids",
          "status"
        ],
        "title": "BulkReportUpdate"
      },
      "ChurnAnalysisResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "churn_risk": {
            "$ref": "#/components/schemas/ChurnPredictionPublic"
          },
          "risk_factors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Risk Factors"
          },
          "recommended_actions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommended Actions"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "churn_risk",
          "risk_factors",
          "recommended_actions"
        ],
        "title": "ChurnAnalysisResponse"
      },
      "ChurnPredictionPublic": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "churn_probability": {
            "type": "string",
            "title": "Churn Probability"
          },
          "churn_risk_level": {
            "type": "string",
            "maxLength": 20,
            "title": "Churn Risk Level"
          },
          "predicted_churn_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Churn Date"
          },
          "retention_recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Retention Recommendations"
          },
          "model_version": {
            "type": "string",
            "maxLength": 50,
            "title": "Model Version"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "is_action_taken": {
            "type": "boolean",
            "title": "Is Action Taken"
          },
          "action_result": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Result"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "churn_probability",
          "churn_risk_level",
          "model_version",
          "id",
          "is_action_taken",
          "created_at"
        ],
        "title": "ChurnPredictionPublic"
      },
      "CloseFriendResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "friend_id": {
            "type": "string",
            "format": "uuid",
            "title": "Friend Id"
          },
          "added_at": {
            "type": "string",
            "format": "date-time",
            "title": "Added At"
          },
          "friend_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Friend Username"
          },
          "friend_full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Friend Full Name"
          },
          "friend_profile_image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Friend Profile Image"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "friend_id",
          "added_at"
        ],
        "title": "CloseFriendResponse",
        "description": "Schema for close friend response"
      },
      "ContentAnalysisRequest": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "analysis_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Analysis Types"
          },
          "include_metadata": {
            "type": "boolean",
            "title": "Include Metadata",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "text"
        ],
        "title": "ContentAnalysisRequest"
      },
      "ContentAnalysisResponse": {
        "properties": {
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "analysis_results": {
            "additionalProperties": true,
            "type": "object",
            "title": "Analysis Results"
          },
          "processing_time_ms": {
            "type": "integer",
            "title": "Processing Time Ms"
          },
          "model_versions": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Model Versions"
          }
        },
        "type": "object",
        "required": [
          "content_id",
          "analysis_results",
          "processing_time_ms",
          "model_versions"
        ],
        "title": "ContentAnalysisResponse"
      },
      "ContentAnalyticsList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ContentAnalyticsPublic"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "author_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Id"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total"
        ],
        "title": "ContentAnalyticsList"
      },
      "ContentAnalyticsPublic": {
        "properties": {
          "content_id": {
            "type": "string",
            "title": "Content Id",
            "description": "Content ID (post, story, reel, etc.)"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "Type of content: post, story, reel, news, live_stream"
          },
          "author_id": {
            "type": "string",
            "title": "Author Id",
            "description": "Author/creator of the content"
          },
          "views": {
            "type": "integer",
            "title": "Views",
            "description": "Number of views",
            "default": 0
          },
          "likes": {
            "type": "integer",
            "title": "Likes",
            "description": "Number of likes",
            "default": 0
          },
          "comments": {
            "type": "integer",
            "title": "Comments",
            "description": "Number of comments",
            "default": 0
          },
          "shares": {
            "type": "integer",
            "title": "Shares",
            "description": "Number of shares",
            "default": 0
          },
          "bookmarks": {
            "type": "integer",
            "title": "Bookmarks",
            "description": "Number of bookmarks",
            "default": 0
          },
          "engagement_rate": {
            "type": "number",
            "title": "Engagement Rate",
            "description": "Engagement rate percentage",
            "default": 0.0
          },
          "click_through_rate": {
            "type": "number",
            "title": "Click Through Rate",
            "description": "Click-through rate",
            "default": 0.0
          },
          "average_view_duration": {
            "type": "integer",
            "title": "Average View Duration",
            "description": "Average view duration in seconds",
            "default": 0
          },
          "performance_score": {
            "type": "number",
            "title": "Performance Score",
            "description": "Performance score for ranking",
            "default": 0.0
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "date_recorded": {
            "type": "string",
            "format": "date-time",
            "title": "Date Recorded"
          },
          "content_created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Content Created At"
          },
          "viewer_locations": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Viewer Locations"
          },
          "device_types": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Types"
          },
          "platforms": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platforms"
          },
          "video_completion_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Completion Rate"
          },
          "story_completion_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Story Completion Rate"
          },
          "live_viewer_peak": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Live Viewer Peak"
          },
          "live_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Live Duration"
          }
        },
        "type": "object",
        "required": [
          "content_id",
          "content_type",
          "author_id",
          "id",
          "date_recorded",
          "content_created_at"
        ],
        "title": "ContentAnalyticsPublic"
      },
      "ContentClassificationPublic": {
        "properties": {
          "content_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "title": "Category"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "confidence_score": {
            "type": "string",
            "title": "Confidence Score"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Keywords"
          },
          "sentiment_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sentiment Score"
          },
          "toxicity_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Toxicity Score"
          },
          "model_version": {
            "type": "string",
            "maxLength": 50,
            "title": "Model Version"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "category",
          "confidence_score",
          "model_version",
          "id",
          "created_at"
        ],
        "title": "ContentClassificationPublic"
      },
      "ContentFlagPublic": {
        "properties": {
          "content_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "flag_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Flag Type"
          },
          "confidence_score": {
            "type": "string",
            "title": "Confidence Score"
          },
          "detected_text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Detected Text"
          },
          "flagged_by": {
            "type": "string",
            "maxLength": 50,
            "title": "Flagged By"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "resolved_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolved By"
          },
          "resolved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolved At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "flag_type",
          "confidence_score",
          "flagged_by",
          "id",
          "status",
          "created_at"
        ],
        "title": "ContentFlagPublic"
      },
      "ContentModerationSummary": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "total_items": {
            "type": "integer",
            "title": "Total Items"
          },
          "flagged_items": {
            "type": "integer",
            "title": "Flagged Items"
          },
          "moderated_items": {
            "type": "integer",
            "title": "Moderated Items"
          },
          "removal_rate": {
            "type": "number",
            "title": "Removal Rate"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "total_items",
          "flagged_items",
          "moderated_items",
          "removal_rate"
        ],
        "title": "ContentModerationSummary"
      },
      "ContentRecommendationPublic": {
        "properties": {
          "content_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "recommendation_score": {
            "type": "string",
            "title": "Recommendation Score"
          },
          "recommendation_reason": {
            "type": "string",
            "maxLength": 100,
            "title": "Recommendation Reason"
          },
          "algorithm_version": {
            "type": "string",
            "maxLength": 50,
            "title": "Algorithm Version"
          },
          "position": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "is_viewed": {
            "type": "boolean",
            "title": "Is Viewed"
          },
          "is_clicked": {
            "type": "boolean",
            "title": "Is Clicked"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "recommendation_score",
          "recommendation_reason",
          "algorithm_version",
          "id",
          "user_id",
          "is_viewed",
          "is_clicked",
          "created_at"
        ],
        "title": "ContentRecommendationPublic"
      },
      "ContentReportCreate": {
        "properties": {
          "content_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 100,
            "title": "Reason"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "default": "low"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "reason"
        ],
        "title": "ContentReportCreate"
      },
      "ContentReportPublic": {
        "properties": {
          "content_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 100,
            "title": "Reason"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "default": "low"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "reporter_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reporter Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "reviewed_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed By"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "reason",
          "id",
          "reporter_id",
          "status",
          "created_at"
        ],
        "title": "ContentReportPublic"
      },
      "ConversationCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/ConversationType",
            "default": "direct"
          },
          "is_encrypted": {
            "type": "boolean",
            "title": "Is Encrypted",
            "default": true
          },
          "allow_reactions": {
            "type": "boolean",
            "title": "Allow Reactions",
            "default": true
          },
          "allow_voice_messages": {
            "type": "boolean",
            "title": "Allow Voice Messages",
            "default": true
          },
          "allow_video_messages": {
            "type": "boolean",
            "title": "Allow Video Messages",
            "default": true
          },
          "allow_file_sharing": {
            "type": "boolean",
            "title": "Allow File Sharing",
            "default": true
          },
          "max_participants": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 2.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Participants"
          },
          "only_admins_can_add": {
            "type": "boolean",
            "title": "Only Admins Can Add",
            "default": false
          },
          "only_admins_can_send": {
            "type": "boolean",
            "title": "Only Admins Can Send",
            "default": false
          },
          "participant_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "minItems": 1,
            "title": "Participant Ids"
          }
        },
        "type": "object",
        "required": [
          "participant_ids"
        ],
        "title": "ConversationCreate",
        "description": "Schema for creating a new conversation"
      },
      "ConversationParticipantPublic": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ParticipantRole",
            "default": "member"
          },
          "can_send_messages": {
            "type": "boolean",
            "title": "Can Send Messages",
            "default": true
          },
          "can_add_participants": {
            "type": "boolean",
            "title": "Can Add Participants",
            "default": true
          },
          "can_remove_participants": {
            "type": "boolean",
            "title": "Can Remove Participants",
            "default": false
          },
          "can_change_settings": {
            "type": "boolean",
            "title": "Can Change Settings",
            "default": false
          },
          "can_delete_messages": {
            "type": "boolean",
            "title": "Can Delete Messages",
            "default": false
          },
          "notifications_enabled": {
            "type": "boolean",
            "title": "Notifications Enabled",
            "default": true
          },
          "notification_sound": {
            "type": "boolean",
            "title": "Notification Sound",
            "default": true
          },
          "notification_preview": {
            "type": "boolean",
            "title": "Notification Preview",
            "default": true
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "theme_preference": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme Preference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "conversation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Conversation Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/ParticipantStatus"
          },
          "last_seen_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Seen At"
          },
          "joined_at": {
            "type": "string",
            "format": "date-time",
            "title": "Joined At"
          },
          "left_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left At"
          },
          "unread_count": {
            "type": "integer",
            "title": "Unread Count"
          },
          "last_read_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Read Message Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "is_owner": {
            "type": "boolean",
            "title": "Is Owner"
          },
          "can_moderate": {
            "type": "boolean",
            "title": "Can Moderate"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "conversation_id",
          "user_id",
          "status",
          "last_seen_at",
          "joined_at",
          "left_at",
          "unread_count",
          "last_read_message_id",
          "created_at",
          "updated_at",
          "is_active",
          "is_admin",
          "is_owner",
          "can_moderate",
          "display_name"
        ],
        "title": "ConversationParticipantPublic",
        "description": "Public participant schema with additional fields"
      },
      "ConversationParticipantUpdate": {
        "properties": {
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParticipantRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "can_send_messages": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Send Messages"
          },
          "can_add_participants": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Add Participants"
          },
          "can_remove_participants": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Remove Participants"
          },
          "can_change_settings": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Change Settings"
          },
          "can_delete_messages": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Delete Messages"
          },
          "notifications_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notifications Enabled"
          },
          "notification_sound": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Sound"
          },
          "notification_preview": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Preview"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "theme_preference": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme Preference"
          }
        },
        "type": "object",
        "title": "ConversationParticipantUpdate",
        "description": "Schema for updating a participant"
      },
      "ConversationPublic": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "$ref": "#/components/schemas/ConversationType",
            "default": "direct"
          },
          "is_encrypted": {
            "type": "boolean",
            "title": "Is Encrypted",
            "default": true
          },
          "allow_reactions": {
            "type": "boolean",
            "title": "Allow Reactions",
            "default": true
          },
          "allow_voice_messages": {
            "type": "boolean",
            "title": "Allow Voice Messages",
            "default": true
          },
          "allow_video_messages": {
            "type": "boolean",
            "title": "Allow Video Messages",
            "default": true
          },
          "allow_file_sharing": {
            "type": "boolean",
            "title": "Allow File Sharing",
            "default": true
          },
          "max_participants": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 2.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Participants"
          },
          "only_admins_can_add": {
            "type": "boolean",
            "title": "Only Admins Can Add",
            "default": false
          },
          "only_admins_can_send": {
            "type": "boolean",
            "title": "Only Admins Can Send",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "creator_id": {
            "type": "string",
            "format": "uuid",
            "title": "Creator Id"
          },
          "status": {
            "$ref": "#/components/schemas/ConversationStatus"
          },
          "is_group": {
            "type": "boolean",
            "title": "Is Group"
          },
          "participant_count": {
            "type": "integer",
            "title": "Participant Count"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          },
          "last_message_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Message At"
          },
          "last_message_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Message Preview"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "creator_id",
          "status",
          "is_group",
          "participant_count",
          "message_count",
          "last_message_at",
          "last_message_preview",
          "created_at",
          "updated_at"
        ],
        "title": "ConversationPublic",
        "description": "Public conversation schema with additional fields"
      },
      "ConversationStatus": {
        "type": "string",
        "enum": [
          "active",
          "archived",
          "deleted"
        ],
        "title": "ConversationStatus",
        "description": "Conversation status"
      },
      "ConversationType": {
        "type": "string",
        "enum": [
          "direct",
          "group"
        ],
        "title": "ConversationType",
        "description": "Types of conversations"
      },
      "ConversationUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "allow_reactions": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Reactions"
          },
          "allow_voice_messages": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Voice Messages"
          },
          "allow_video_messages": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Video Messages"
          },
          "allow_file_sharing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow File Sharing"
          },
          "max_participants": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 2.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Participants"
          },
          "only_admins_can_add": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Only Admins Can Add"
          },
          "only_admins_can_send": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Only Admins Can Send"
          }
        },
        "type": "object",
        "title": "ConversationUpdate",
        "description": "Schema for updating a conversation"
      },
      "CreatorDashboard": {
        "properties": {
          "total_subscribers": {
            "type": "integer",
            "title": "Total Subscribers"
          },
          "monthly_revenue": {
            "type": "string",
            "title": "Monthly Revenue"
          },
          "total_earnings": {
            "type": "string",
            "title": "Total Earnings"
          },
          "pending_payouts": {
            "type": "string",
            "title": "Pending Payouts"
          },
          "active_campaigns": {
            "type": "integer",
            "title": "Active Campaigns"
          },
          "sponsored_posts": {
            "type": "integer",
            "title": "Sponsored Posts"
          }
        },
        "type": "object",
        "required": [
          "total_subscribers",
          "monthly_revenue",
          "total_earnings",
          "pending_payouts",
          "active_campaigns",
          "sponsored_posts"
        ],
        "title": "CreatorDashboard"
      },
      "CreatorEarningPublic": {
        "properties": {
          "source_type": {
            "type": "string",
            "title": "Source Type"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "title": "Currency",
            "default": "USD"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "creator_id": {
            "type": "string",
            "format": "uuid",
            "title": "Creator Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "payout_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payout Id"
          },
          "period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Period Start"
          },
          "period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Period End"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "source_type",
          "amount",
          "id",
          "creator_id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "CreatorEarningPublic"
      },
      "CreatorPayoutPublic": {
        "properties": {
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "title": "Currency",
            "default": "USD"
          },
          "payout_method": {
            "type": "string",
            "maxLength": 50,
            "title": "Payout Method"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "creator_id": {
            "type": "string",
            "format": "uuid",
            "title": "Creator Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "payout_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payout Id"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End"
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "payout_method",
          "id",
          "creator_id",
          "status",
          "period_start",
          "period_end",
          "created_at",
          "updated_at"
        ],
        "title": "CreatorPayoutPublic"
      },
      "DeviceCreate": {
        "properties": {
          "device_token": {
            "type": "string",
            "maxLength": 500,
            "title": "Device Token"
          },
          "device_type": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name"
          },
          "device_model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Model"
          },
          "os_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Os Version"
          },
          "app_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "App Version"
          },
          "status": {
            "$ref": "#/components/schemas/DeviceStatus",
            "default": "active"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "push_enabled": {
            "type": "boolean",
            "title": "Push Enabled",
            "default": true
          },
          "sound_enabled": {
            "type": "boolean",
            "title": "Sound Enabled",
            "default": true
          },
          "vibration_enabled": {
            "type": "boolean",
            "title": "Vibration Enabled",
            "default": true
          },
          "badge_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Badge Count",
            "default": 0
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "push_service": {
            "type": "string",
            "maxLength": 50,
            "title": "Push Service",
            "default": "fcm"
          },
          "push_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Service Id"
          },
          "is_sandbox": {
            "type": "boolean",
            "title": "Is Sandbox",
            "default": false
          },
          "metadata_": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "device_token",
          "device_type",
          "user_id"
        ],
        "title": "DeviceCreate",
        "description": "Schema for registering devices"
      },
      "DevicePublic": {
        "properties": {
          "device_token": {
            "type": "string",
            "maxLength": 500,
            "title": "Device Token"
          },
          "device_type": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name"
          },
          "device_model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Model"
          },
          "os_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Os Version"
          },
          "app_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "App Version"
          },
          "status": {
            "$ref": "#/components/schemas/DeviceStatus",
            "default": "active"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "push_enabled": {
            "type": "boolean",
            "title": "Push Enabled",
            "default": true
          },
          "sound_enabled": {
            "type": "boolean",
            "title": "Sound Enabled",
            "default": true
          },
          "vibration_enabled": {
            "type": "boolean",
            "title": "Vibration Enabled",
            "default": true
          },
          "badge_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Badge Count",
            "default": 0
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "last_active_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Active At"
          },
          "registered_at": {
            "type": "string",
            "format": "date-time",
            "title": "Registered At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "push_service": {
            "type": "string",
            "title": "Push Service"
          },
          "push_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Service Id"
          },
          "is_sandbox": {
            "type": "boolean",
            "title": "Is Sandbox"
          },
          "metadata_": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "device_token",
          "device_type",
          "id",
          "user_id",
          "last_active_at",
          "registered_at",
          "updated_at",
          "push_service",
          "is_sandbox"
        ],
        "title": "DevicePublic",
        "description": "Public device schema"
      },
      "DeviceStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "blocked"
        ],
        "title": "DeviceStatus",
        "description": "Device registration status"
      },
      "DeviceType": {
        "type": "string",
        "enum": [
          "ios",
          "android",
          "web",
          "desktop"
        ],
        "title": "DeviceType",
        "description": "Types of devices for push notifications"
      },
      "DeviceUpdate": {
        "properties": {
          "device_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Name"
          },
          "device_model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Model"
          },
          "os_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Os Version"
          },
          "app_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "App Version"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DeviceStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "push_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Enabled"
          },
          "sound_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sound Enabled"
          },
          "vibration_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vibration Enabled"
          },
          "push_service": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Service"
          },
          "push_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Service Id"
          },
          "is_sandbox": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Sandbox"
          },
          "metadata_": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "DeviceUpdate",
        "description": "Schema for updating devices"
      },
      "EffectCategory": {
        "type": "string",
        "enum": [
          "visual",
          "audio",
          "text",
          "transition"
        ],
        "title": "EffectCategory"
      },
      "EffectCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/EffectType"
          },
          "category": {
            "$ref": "#/components/schemas/EffectCategory"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          },
          "is_premium": {
            "type": "boolean",
            "title": "Is Premium",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "category"
        ],
        "title": "EffectCreate",
        "description": "Schema for creating new effect"
      },
      "EffectPublic": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/EffectType"
          },
          "category": {
            "$ref": "#/components/schemas/EffectCategory"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          },
          "is_premium": {
            "type": "boolean",
            "title": "Is Premium",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "use_count": {
            "type": "integer",
            "title": "Use Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_popular": {
            "type": "boolean",
            "title": "Is Popular"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "category",
          "id",
          "use_count",
          "created_at",
          "updated_at",
          "is_popular"
        ],
        "title": "EffectPublic",
        "description": "Public effect schema"
      },
      "EffectType": {
        "type": "string",
        "enum": [
          "filter",
          "transition",
          "text",
          "sticker",
          "green_screen",
          "speed",
          "audio"
        ],
        "title": "EffectType"
      },
      "EffectUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          },
          "is_premium": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Premium"
          }
        },
        "type": "object",
        "title": "EffectUpdate",
        "description": "Schema for updating effect"
      },
      "EngagementPredictionPublic": {
        "properties": {
          "content_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "predicted_views": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Views"
          },
          "predicted_likes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Likes"
          },
          "predicted_shares": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Shares"
          },
          "predicted_comments": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Predicted Comments"
          },
          "viral_probability": {
            "type": "string",
            "title": "Viral Probability"
          },
          "engagement_score": {
            "type": "string",
            "title": "Engagement Score"
          },
          "model_version": {
            "type": "string",
            "maxLength": 50,
            "title": "Model Version"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "prediction_accuracy": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prediction Accuracy"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "viral_probability",
          "engagement_score",
          "model_version",
          "id",
          "created_at"
        ],
        "title": "EngagementPredictionPublic"
      },
      "EngagementPredictionRequest": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "include_historical_data": {
            "type": "boolean",
            "title": "Include Historical Data",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id"
        ],
        "title": "EngagementPredictionRequest"
      },
      "EngagementPredictionResponse": {
        "properties": {
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "predictions": {
            "$ref": "#/components/schemas/EngagementPredictionPublic"
          },
          "confidence_intervals": {
            "anyOf": [
              {
                "additionalProperties": {
                  "additionalProperties": {
                    "type": "number"
                  },
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Intervals"
          }
        },
        "type": "object",
        "required": [
          "content_id",
          "predictions"
        ],
        "title": "EngagementPredictionResponse"
      },
      "ExternalNewsArticlePublic": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 500,
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "url": {
            "type": "string",
            "maxLength": 500,
            "title": "Url"
          },
          "external_id": {
            "type": "string",
            "maxLength": 255,
            "title": "External Id"
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "title": "Published At"
          },
          "author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "sentiment_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sentiment Score"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Id"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "imported_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imported At"
          },
          "is_imported": {
            "type": "boolean",
            "title": "Is Imported"
          }
        },
        "type": "object",
        "required": [
          "title",
          "url",
          "external_id",
          "published_at",
          "id",
          "source_id",
          "integration_id",
          "created_at",
          "is_imported"
        ],
        "title": "ExternalNewsArticlePublic"
      },
      "Gender": {
        "type": "string",
        "enum": [
          "male",
          "female",
          "other",
          "prefer_not_to_say"
        ],
        "title": "Gender"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageCropRequest": {
        "properties": {
          "x": {
            "type": "integer",
            "minimum": 0.0,
            "title": "X",
            "description": "X coordinate of crop start"
          },
          "y": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Y",
            "description": "Y coordinate of crop start"
          },
          "width": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Width",
            "description": "Crop width"
          },
          "height": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Height",
            "description": "Crop height"
          }
        },
        "type": "object",
        "required": [
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "ImageCropRequest"
      },
      "ImageResizeRequest": {
        "properties": {
          "width": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Width",
            "description": "Target width in pixels"
          },
          "height": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Height",
            "description": "Target height in pixels"
          },
          "maintain_aspect_ratio": {
            "type": "boolean",
            "title": "Maintain Aspect Ratio",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "width",
          "height"
        ],
        "title": "ImageResizeRequest"
      },
      "IntegrationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "integration_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Integration Type"
          },
          "provider": {
            "type": "string",
            "maxLength": 100,
            "title": "Provider"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "pending"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "credentials": {
            "additionalProperties": true,
            "type": "object",
            "title": "Credentials"
          },
          "rate_limits": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate Limits"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "integration_type",
          "provider"
        ],
        "title": "IntegrationCreate"
      },
      "IntegrationPublic": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "integration_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Integration Type"
          },
          "provider": {
            "type": "string",
            "maxLength": 100,
            "title": "Provider"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "pending"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "credentials": {
            "additionalProperties": true,
            "type": "object",
            "title": "Credentials"
          },
          "rate_limits": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate Limits"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "last_sync_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sync At"
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count"
          },
          "success_count": {
            "type": "integer",
            "title": "Success Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "integration_type",
          "provider",
          "id",
          "created_at",
          "updated_at",
          "error_count",
          "success_count"
        ],
        "title": "IntegrationPublic"
      },
      "IntegrationStatsResponse": {
        "properties": {
          "total_integrations": {
            "type": "integer",
            "title": "Total Integrations"
          },
          "active_integrations": {
            "type": "integer",
            "title": "Active Integrations"
          },
          "integrations_by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Integrations By Type"
          },
          "integrations_by_status": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Integrations By Status"
          },
          "recent_syncs": {
            "items": {
              "$ref": "#/components/schemas/IntegrationSyncLogPublic"
            },
            "type": "array",
            "title": "Recent Syncs"
          },
          "webhook_deliveries_today": {
            "type": "integer",
            "title": "Webhook Deliveries Today"
          },
          "api_requests_today": {
            "type": "integer",
            "title": "Api Requests Today"
          }
        },
        "type": "object",
        "required": [
          "total_integrations",
          "active_integrations",
          "integrations_by_type",
          "integrations_by_status",
          "recent_syncs",
          "webhook_deliveries_today",
          "api_requests_today"
        ],
        "title": "IntegrationStatsResponse"
      },
      "IntegrationSyncLogPublic": {
        "properties": {
          "operation": {
            "type": "string",
            "maxLength": 100,
            "title": "Operation"
          },
          "status": {
            "type": "string",
            "maxLength": 50,
            "title": "Status"
          },
          "records_processed": {
            "type": "integer",
            "title": "Records Processed",
            "default": 0
          },
          "records_failed": {
            "type": "integer",
            "title": "Records Failed",
            "default": 0
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "operation",
          "status",
          "id",
          "integration_id",
          "created_at"
        ],
        "title": "IntegrationSyncLogPublic"
      },
      "IntegrationSyncRequest": {
        "properties": {
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "operation": {
            "type": "string",
            "title": "Operation"
          },
          "parameters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": [
          "integration_id",
          "operation"
        ],
        "title": "IntegrationSyncRequest"
      },
      "IntegrationSyncResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "sync_log_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Log Id"
          },
          "records_processed": {
            "type": "integer",
            "title": "Records Processed",
            "default": 0
          },
          "records_failed": {
            "type": "integer",
            "title": "Records Failed",
            "default": 0
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "IntegrationSyncResponse"
      },
      "IntegrationTestRequest": {
        "properties": {
          "test_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Data"
          }
        },
        "type": "object",
        "title": "IntegrationTestRequest"
      },
      "IntegrationTestResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "response_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Data"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "IntegrationTestResponse"
      },
      "IntegrationUpdate": {
        "properties": {
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "credentials": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credentials"
          },
          "rate_limits": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate Limits"
          }
        },
        "type": "object",
        "title": "IntegrationUpdate"
      },
      "InteractionType": {
        "type": "string",
        "enum": [
          "poll_vote",
          "question_reply",
          "quiz_answer",
          "reaction"
        ],
        "title": "InteractionType"
      },
      "MediaFilePublic": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Generated filename"
          },
          "original_filename": {
            "type": "string",
            "title": "Original Filename",
            "description": "Original uploaded filename"
          },
          "file_path": {
            "type": "string",
            "title": "File Path",
            "description": "Storage path"
          },
          "file_url": {
            "type": "string",
            "title": "File Url",
            "description": "Public URL"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size",
            "description": "File size in bytes"
          },
          "media_type": {
            "type": "string",
            "title": "Media Type",
            "description": "Media type: image, video, audio, document"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "MIME type"
          },
          "file_format": {
            "type": "string",
            "title": "File Format",
            "description": "File format/extension"
          },
          "width": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width",
            "description": "Width for images/videos"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height",
            "description": "Height for images/videos"
          },
          "duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration",
            "description": "Duration for videos/audio"
          },
          "processing_status": {
            "type": "string",
            "title": "Processing Status",
            "description": "Processing status",
            "default": "pending"
          },
          "quality": {
            "type": "string",
            "title": "Quality",
            "description": "Quality level",
            "default": "original"
          },
          "compression_level": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compression Level",
            "description": "Compression level 0-100"
          },
          "thumbnail_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Path",
            "description": "Thumbnail storage path"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url",
            "description": "Thumbnail URL"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Owner user ID"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Public visibility",
            "default": true
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count",
            "description": "Usage count",
            "default": 0
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "variants": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variants"
          },
          "metadata_": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "original_filename",
          "file_path",
          "file_url",
          "file_size",
          "media_type",
          "mime_type",
          "file_format",
          "user_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "MediaFilePublic"
      },
      "MediaFileUpdate": {
        "properties": {
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "metadata_": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "MediaFileUpdate"
      },
      "MediaProcessingJobPublic": {
        "properties": {
          "media_file_id": {
            "type": "string",
            "title": "Media File Id",
            "description": "Associated media file ID"
          },
          "job_type": {
            "type": "string",
            "title": "Job Type",
            "description": "Job type: resize, compress, convert, thumbnail"
          },
          "job_status": {
            "type": "string",
            "title": "Job Status",
            "description": "Job status",
            "default": "queued"
          },
          "parameters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters",
            "description": "Job parameters"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "description": "Job priority 1-10",
            "default": 1
          },
          "queue_name": {
            "type": "string",
            "title": "Queue Name",
            "description": "Queue name",
            "default": "default"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "description": "Current retry count",
            "default": 0
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries",
            "description": "Maximum retry attempts",
            "default": 3
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "media_file_id",
          "job_type",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "MediaProcessingJobPublic"
      },
      "MediaStorageCreate": {
        "properties": {
          "storage_type": {
            "type": "string",
            "title": "Storage Type",
            "description": "Storage type: local, s3, cloudinary, cdn"
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name",
            "description": "Storage bucket/container name"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "Storage region"
          },
          "endpoint_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Url",
            "description": "Storage endpoint URL"
          },
          "total_files": {
            "type": "integer",
            "title": "Total Files",
            "description": "Total files stored",
            "default": 0
          },
          "total_size_bytes": {
            "type": "integer",
            "title": "Total Size Bytes",
            "description": "Total storage used in bytes",
            "default": 0
          },
          "monthly_usage_bytes": {
            "type": "integer",
            "title": "Monthly Usage Bytes",
            "description": "Monthly usage in bytes",
            "default": 0
          },
          "max_file_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max File Size Bytes",
            "description": "Maximum file size"
          },
          "max_total_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Total Size Bytes",
            "description": "Maximum total storage"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Storage is active",
            "default": true
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Default storage",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "storage_type"
        ],
        "title": "MediaStorageCreate"
      },
      "MediaStoragePublic": {
        "properties": {
          "storage_type": {
            "type": "string",
            "title": "Storage Type",
            "description": "Storage type: local, s3, cloudinary, cdn"
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name",
            "description": "Storage bucket/container name"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "Storage region"
          },
          "endpoint_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Url",
            "description": "Storage endpoint URL"
          },
          "total_files": {
            "type": "integer",
            "title": "Total Files",
            "description": "Total files stored",
            "default": 0
          },
          "total_size_bytes": {
            "type": "integer",
            "title": "Total Size Bytes",
            "description": "Total storage used in bytes",
            "default": 0
          },
          "monthly_usage_bytes": {
            "type": "integer",
            "title": "Monthly Usage Bytes",
            "description": "Monthly usage in bytes",
            "default": 0
          },
          "max_file_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max File Size Bytes",
            "description": "Maximum file size"
          },
          "max_total_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Total Size Bytes",
            "description": "Maximum total storage"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Storage is active",
            "default": true
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Default storage",
            "default": false
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "allowed_formats": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Formats"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "storage_type",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "MediaStoragePublic"
      },
      "MediaUploadResponse": {
        "properties": {
          "media_file": {
            "$ref": "#/components/schemas/MediaFilePublic"
          },
          "upload_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upload Url"
          },
          "processing_jobs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Processing Jobs"
          }
        },
        "type": "object",
        "required": [
          "media_file"
        ],
        "title": "MediaUploadResponse"
      },
      "Message": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "Message"
      },
      "MessageCreate": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MessageType",
            "default": "text"
          },
          "content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "media_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Url"
          },
          "media_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Type"
          },
          "media_size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Size"
          },
          "media_duration": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Duration"
          },
          "reply_to_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reply To Message Id"
          },
          "forwarded_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Forwarded From"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "conversation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Conversation Id"
          }
        },
        "type": "object",
        "required": [
          "conversation_id"
        ],
        "title": "MessageCreate",
        "description": "Schema for creating a new message"
      },
      "MessagePublic": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MessageType",
            "default": "text"
          },
          "content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "media_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Url"
          },
          "media_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Type"
          },
          "media_size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Size"
          },
          "media_duration": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Duration"
          },
          "reply_to_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reply To Message Id"
          },
          "forwarded_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Forwarded From"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "conversation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Conversation Id"
          },
          "sender_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sender Id"
          },
          "status": {
            "$ref": "#/components/schemas/MessageStatus"
          },
          "delivered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivered At"
          },
          "read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At"
          },
          "is_edited": {
            "type": "boolean",
            "title": "Is Edited"
          },
          "edited_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edited At"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "reactions": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Reactions"
          },
          "reaction_count": {
            "type": "integer",
            "title": "Reaction Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_media_message": {
            "type": "boolean",
            "title": "Is Media Message"
          },
          "is_system_message": {
            "type": "boolean",
            "title": "Is System Message"
          },
          "is_expired": {
            "type": "boolean",
            "title": "Is Expired"
          },
          "is_scheduled": {
            "type": "boolean",
            "title": "Is Scheduled"
          },
          "delivery_status": {
            "type": "string",
            "title": "Delivery Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "conversation_id",
          "sender_id",
          "status",
          "delivered_at",
          "read_at",
          "is_edited",
          "edited_at",
          "is_deleted",
          "reactions",
          "reaction_count",
          "created_at",
          "updated_at",
          "is_media_message",
          "is_system_message",
          "is_expired",
          "is_scheduled",
          "delivery_status"
        ],
        "title": "MessagePublic",
        "description": "Public message schema with additional fields"
      },
      "MessageStatus": {
        "type": "string",
        "enum": [
          "sending",
          "sent",
          "delivered",
          "read",
          "failed"
        ],
        "title": "MessageStatus",
        "description": "Message delivery status"
      },
      "MessageType": {
        "type": "string",
        "enum": [
          "text",
          "image",
          "video",
          "audio",
          "file",
          "voice",
          "location",
          "contact",
          "system"
        ],
        "title": "MessageType",
        "description": "Types of messages"
      },
      "MessageUpdate": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "title": "MessageUpdate",
        "description": "Schema for updating a message"
      },
      "ModerationActionCreate": {
        "properties": {
          "content_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "action_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Action Type"
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "title": "Reason"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "default": "medium"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Hours"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "action_type",
          "reason"
        ],
        "title": "ModerationActionCreate"
      },
      "ModerationActionPublic": {
        "properties": {
          "content_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "action_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Action Type"
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "title": "Reason"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "default": "medium"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Hours"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "moderator_id": {
            "type": "string",
            "format": "uuid",
            "title": "Moderator Id"
          },
          "appeal_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Appeal Deadline"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "action_type",
          "reason",
          "id",
          "moderator_id",
          "created_at"
        ],
        "title": "ModerationActionPublic"
      },
      "ModerationAppealCreate": {
        "properties": {
          "action_id": {
            "type": "string",
            "format": "uuid",
            "title": "Action Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 1000,
            "title": "Reason"
          },
          "evidence": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Evidence"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "action_id",
          "reason"
        ],
        "title": "ModerationAppealCreate"
      },
      "ModerationAppealPublic": {
        "properties": {
          "action_id": {
            "type": "string",
            "format": "uuid",
            "title": "Action Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 1000,
            "title": "Reason"
          },
          "evidence": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Evidence"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "appellant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Appellant Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "reviewed_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed By"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "action_id",
          "reason",
          "id",
          "appellant_id",
          "status",
          "created_at"
        ],
        "title": "ModerationAppealPublic"
      },
      "ModerationLogPublic": {
        "properties": {
          "action_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Action Type"
          },
          "target_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Target Type"
          },
          "target_id": {
            "type": "string",
            "format": "uuid",
            "title": "Target Id"
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "title": "Description"
          },
          "old_value": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Value"
          },
          "new_value": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "New Value"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 45
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "moderator_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moderator Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "action_type",
          "target_type",
          "target_id",
          "description",
          "id",
          "created_at"
        ],
        "title": "ModerationLogPublic"
      },
      "ModerationRuleCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "title": "Category"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "default": "medium"
          },
          "auto_action": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Action"
          },
          "requires_review": {
            "type": "boolean",
            "title": "Requires Review",
            "default": true
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "title",
          "description",
          "category"
        ],
        "title": "ModerationRuleCreate"
      },
      "ModerationRulePublic": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "title": "Category"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "default": "medium"
          },
          "auto_action": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Action"
          },
          "requires_review": {
            "type": "boolean",
            "title": "Requires Review",
            "default": true
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "description",
          "category",
          "id",
          "is_active",
          "created_at"
        ],
        "title": "ModerationRulePublic"
      },
      "ModerationStats": {
        "properties": {
          "total_reports": {
            "type": "integer",
            "title": "Total Reports"
          },
          "pending_reports": {
            "type": "integer",
            "title": "Pending Reports"
          },
          "resolved_reports": {
            "type": "integer",
            "title": "Resolved Reports"
          },
          "total_actions": {
            "type": "integer",
            "title": "Total Actions"
          },
          "active_bans": {
            "type": "integer",
            "title": "Active Bans"
          },
          "total_strikes": {
            "type": "integer",
            "title": "Total Strikes"
          },
          "appeals_pending": {
            "type": "integer",
            "title": "Appeals Pending"
          }
        },
        "type": "object",
        "required": [
          "total_reports",
          "pending_reports",
          "resolved_reports",
          "total_actions",
          "active_bans",
          "total_strikes",
          "appeals_pending"
        ],
        "title": "ModerationStats"
      },
      "ModeratorActivity": {
        "properties": {
          "moderator_id": {
            "type": "string",
            "format": "uuid",
            "title": "Moderator Id"
          },
          "moderator_name": {
            "type": "string",
            "title": "Moderator Name"
          },
          "actions_taken": {
            "type": "integer",
            "title": "Actions Taken"
          },
          "reports_reviewed": {
            "type": "integer",
            "title": "Reports Reviewed"
          },
          "appeals_handled": {
            "type": "integer",
            "title": "Appeals Handled"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time",
            "title": "Last Activity"
          }
        },
        "type": "object",
        "required": [
          "moderator_id",
          "moderator_name",
          "actions_taken",
          "reports_reviewed",
          "appeals_handled",
          "last_activity"
        ],
        "title": "ModeratorActivity"
      },
      "MusicCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "artist": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Artist"
          },
          "album": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Album"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "audio_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Audio Url"
          },
          "duration": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Duration"
          },
          "file_size": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "File Size"
          },
          "is_licensed": {
            "type": "boolean",
            "title": "Is Licensed",
            "default": true
          },
          "license_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type"
          },
          "attribution_required": {
            "type": "boolean",
            "title": "Attribution Required",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "title",
          "artist",
          "audio_url",
          "duration",
          "file_size"
        ],
        "title": "MusicCreate",
        "description": "Schema for creating new music"
      },
      "MusicPublic": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "artist": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Artist"
          },
          "album": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Album"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "audio_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Audio Url"
          },
          "duration": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Duration"
          },
          "file_size": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "File Size"
          },
          "is_licensed": {
            "type": "boolean",
            "title": "Is Licensed",
            "default": true
          },
          "license_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type"
          },
          "attribution_required": {
            "type": "boolean",
            "title": "Attribution Required",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "use_count": {
            "type": "integer",
            "title": "Use Count"
          },
          "trending_score": {
            "type": "number",
            "title": "Trending Score"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_trending": {
            "type": "boolean",
            "title": "Is Trending"
          },
          "formatted_duration": {
            "type": "string",
            "title": "Formatted Duration"
          }
        },
        "type": "object",
        "required": [
          "title",
          "artist",
          "audio_url",
          "duration",
          "file_size",
          "id",
          "use_count",
          "trending_score",
          "created_at",
          "updated_at",
          "is_trending",
          "formatted_duration"
        ],
        "title": "MusicPublic",
        "description": "Public music schema"
      },
      "MusicUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "artist": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Artist"
          },
          "album": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Album"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "is_licensed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Licensed"
          },
          "license_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type"
          },
          "attribution_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attribution Required"
          }
        },
        "type": "object",
        "title": "MusicUpdate",
        "description": "Schema for updating music"
      },
      "NewPassword": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "NewPassword"
      },
      "NewsByLocationResponse": {
        "properties": {
          "location": {
            "type": "string",
            "title": "Location"
          },
          "news": {
            "items": {
              "$ref": "#/components/schemas/NewsResponse"
            },
            "type": "array",
            "title": "News"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "coordinates": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coordinates"
          }
        },
        "type": "object",
        "required": [
          "location",
          "news",
          "total"
        ],
        "title": "NewsByLocationResponse",
        "description": "News by location response"
      },
      "NewsCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "title": "Content"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "excerpt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Excerpt"
          },
          "featured_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Featured Image Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "gallery_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gallery Images",
            "default": []
          },
          "headline": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Headline"
          },
          "subheadline": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Subheadline"
          },
          "lead_text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Lead Text"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "state": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "is_breaking_news": {
            "type": "boolean",
            "title": "Is Breaking News",
            "default": false
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured",
            "default": false
          },
          "is_trending": {
            "type": "boolean",
            "title": "Is Trending",
            "default": false
          },
          "priority": {
            "$ref": "#/components/schemas/NewsPriority",
            "default": "medium"
          },
          "original_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Url"
          },
          "author_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Name"
          },
          "author_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Email"
          },
          "publication_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publication Date"
          },
          "fact_check_status": {
            "type": "string",
            "maxLength": 50,
            "title": "Fact Check Status",
            "default": "pending"
          },
          "fact_check_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fact Check Summary"
          },
          "credibility_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Credibility Score"
          },
          "meta_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Title"
          },
          "meta_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Description"
          },
          "meta_keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Keywords",
            "default": []
          },
          "canonical_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Canonical Url"
          },
          "status": {
            "$ref": "#/components/schemas/NewsStatus",
            "default": "draft"
          },
          "visibility": {
            "type": "string",
            "maxLength": 50,
            "title": "Visibility",
            "default": "public"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content",
          "user_id"
        ],
        "title": "NewsCreate",
        "description": "Create news schema"
      },
      "NewsFetchRequest": {
        "properties": {
          "source_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Ids"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          },
          "limit": {
            "type": "integer",
            "maximum": 200.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 50
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          }
        },
        "type": "object",
        "title": "NewsFetchRequest"
      },
      "NewsFetchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "articles_fetched": {
            "type": "integer",
            "title": "Articles Fetched"
          },
          "sources_updated": {
            "type": "integer",
            "title": "Sources Updated"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "articles": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExternalNewsArticlePublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Articles"
          }
        },
        "type": "object",
        "required": [
          "success",
          "articles_fetched",
          "sources_updated",
          "message"
        ],
        "title": "NewsFetchResponse"
      },
      "NewsListResponse": {
        "properties": {
          "news": {
            "items": {
              "$ref": "#/components/schemas/NewsResponse"
            },
            "type": "array",
            "title": "News"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "news",
          "total",
          "page",
          "per_page",
          "has_next",
          "has_prev"
        ],
        "title": "NewsListResponse",
        "description": "News list response"
      },
      "NewsPriority": {
        "type": "string",
        "enum": [
          "low",
          "medium",
          "high",
          "urgent",
          "breaking"
        ],
        "title": "NewsPriority"
      },
      "NewsPublishResponse": {
        "properties": {
          "news_id": {
            "type": "string",
            "format": "uuid",
            "title": "News Id"
          },
          "status": {
            "$ref": "#/components/schemas/NewsStatus"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "news_id",
          "status",
          "published_at",
          "message"
        ],
        "title": "NewsPublishResponse",
        "description": "News publish response"
      },
      "NewsResponse": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "title": "Content"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "excerpt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Excerpt"
          },
          "featured_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Featured Image Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "gallery_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gallery Images",
            "default": []
          },
          "headline": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Headline"
          },
          "subheadline": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Subheadline"
          },
          "lead_text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Lead Text"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "state": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "is_breaking_news": {
            "type": "boolean",
            "title": "Is Breaking News",
            "default": false
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured",
            "default": false
          },
          "is_trending": {
            "type": "boolean",
            "title": "Is Trending",
            "default": false
          },
          "priority": {
            "$ref": "#/components/schemas/NewsPriority",
            "default": "medium"
          },
          "original_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Url"
          },
          "author_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Name"
          },
          "author_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Email"
          },
          "publication_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publication Date"
          },
          "fact_check_status": {
            "type": "string",
            "maxLength": 50,
            "title": "Fact Check Status",
            "default": "pending"
          },
          "fact_check_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fact Check Summary"
          },
          "credibility_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Credibility Score"
          },
          "meta_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Title"
          },
          "meta_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Description"
          },
          "meta_keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Keywords",
            "default": []
          },
          "canonical_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Canonical Url"
          },
          "status": {
            "$ref": "#/components/schemas/NewsStatus",
            "default": "draft"
          },
          "visibility": {
            "type": "string",
            "maxLength": 50,
            "title": "Visibility",
            "default": "public"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "view_count": {
            "type": "integer",
            "title": "View Count",
            "default": 0
          },
          "like_count": {
            "type": "integer",
            "title": "Like Count",
            "default": 0
          },
          "comment_count": {
            "type": "integer",
            "title": "Comment Count",
            "default": 0
          },
          "share_count": {
            "type": "integer",
            "title": "Share Count",
            "default": 0
          },
          "bookmark_count": {
            "type": "integer",
            "title": "Bookmark Count",
            "default": 0
          },
          "facebook_shares": {
            "type": "integer",
            "title": "Facebook Shares",
            "default": 0
          },
          "twitter_shares": {
            "type": "integer",
            "title": "Twitter Shares",
            "default": 0
          },
          "linkedin_shares": {
            "type": "integer",
            "title": "Linkedin Shares",
            "default": 0
          },
          "whatsapp_shares": {
            "type": "integer",
            "title": "Whatsapp Shares",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "last_interaction_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Interaction At"
          },
          "reading_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reading Time"
          },
          "share_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Url"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content",
          "id",
          "user_id",
          "category_id",
          "source_id",
          "created_at",
          "updated_at",
          "published_at",
          "last_interaction_at"
        ],
        "title": "NewsResponse",
        "description": "News response schema"
      },
      "NewsScheduleRequest": {
        "properties": {
          "news_id": {
            "type": "string",
            "format": "uuid",
            "title": "News Id"
          },
          "scheduled_at": {
            "type": "string",
            "format": "date-time",
            "title": "Scheduled At"
          }
        },
        "type": "object",
        "required": [
          "news_id",
          "scheduled_at"
        ],
        "title": "NewsScheduleRequest",
        "description": "News schedule request"
      },
      "NewsSearchResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/NewsResponse"
            },
            "type": "array",
            "title": "Results"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "suggestions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Suggestions",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "results",
          "total",
          "query"
        ],
        "title": "NewsSearchResponse",
        "description": "News search response"
      },
      "NewsSourcePublic": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name"
          },
          "external_id": {
            "type": "string",
            "maxLength": 255,
            "title": "External Id"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "language": {
            "type": "string",
            "maxLength": 10,
            "title": "Language",
            "default": "en"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "credibility_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credibility Score"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "last_fetched_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Fetched At"
          },
          "article_count": {
            "type": "integer",
            "title": "Article Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "external_id",
          "id",
          "integration_id",
          "created_at",
          "updated_at",
          "article_count"
        ],
        "title": "NewsSourcePublic"
      },
      "NewsStats": {
        "properties": {
          "total_news": {
            "type": "integer",
            "title": "Total News"
          },
          "published_news": {
            "type": "integer",
            "title": "Published News"
          },
          "draft_news": {
            "type": "integer",
            "title": "Draft News"
          },
          "scheduled_news": {
            "type": "integer",
            "title": "Scheduled News"
          },
          "breaking_news": {
            "type": "integer",
            "title": "Breaking News"
          },
          "featured_news": {
            "type": "integer",
            "title": "Featured News"
          },
          "trending_news": {
            "type": "integer",
            "title": "Trending News"
          }
        },
        "type": "object",
        "required": [
          "total_news",
          "published_news",
          "draft_news",
          "scheduled_news",
          "breaking_news",
          "featured_news",
          "trending_news"
        ],
        "title": "NewsStats",
        "description": "News statistics"
      },
      "NewsStatus": {
        "type": "string",
        "enum": [
          "draft",
          "published",
          "archived",
          "scheduled"
        ],
        "title": "NewsStatus"
      },
      "NewsUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "content": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "excerpt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Excerpt"
          },
          "featured_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Featured Image Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "gallery_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gallery Images"
          },
          "headline": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Headline"
          },
          "subheadline": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Subheadline"
          },
          "lead_text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Lead Text"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "state": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "is_breaking_news": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Breaking News"
          },
          "is_featured": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Featured"
          },
          "is_trending": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Trending"
          },
          "priority": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NewsPriority"
              },
              {
                "type": "null"
              }
            ]
          },
          "original_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Url"
          },
          "author_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Name"
          },
          "author_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Email"
          },
          "publication_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publication Date"
          },
          "fact_check_status": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Fact Check Status"
          },
          "fact_check_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fact Check Summary"
          },
          "credibility_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Credibility Score"
          },
          "meta_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Title"
          },
          "meta_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Description"
          },
          "meta_keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Keywords"
          },
          "canonical_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Canonical Url"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NewsStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          }
        },
        "type": "object",
        "title": "NewsUpdate",
        "description": "Update news schema"
      },
      "NotificationPreferencePublic": {
        "properties": {
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "default": true
          },
          "push_notifications": {
            "type": "boolean",
            "title": "Push Notifications",
            "default": true
          },
          "sms_notifications": {
            "type": "boolean",
            "title": "Sms Notifications",
            "default": false
          },
          "like_notifications": {
            "type": "boolean",
            "title": "Like Notifications",
            "default": true
          },
          "comment_notifications": {
            "type": "boolean",
            "title": "Comment Notifications",
            "default": true
          },
          "follow_notifications": {
            "type": "boolean",
            "title": "Follow Notifications",
            "default": true
          },
          "mention_notifications": {
            "type": "boolean",
            "title": "Mention Notifications",
            "default": true
          },
          "share_notifications": {
            "type": "boolean",
            "title": "Share Notifications",
            "default": true
          },
          "message_notifications": {
            "type": "boolean",
            "title": "Message Notifications",
            "default": true
          },
          "news_notifications": {
            "type": "boolean",
            "title": "News Notifications",
            "default": true
          },
          "story_notifications": {
            "type": "boolean",
            "title": "Story Notifications",
            "default": true
          },
          "reel_notifications": {
            "type": "boolean",
            "title": "Reel Notifications",
            "default": true
          },
          "live_stream_notifications": {
            "type": "boolean",
            "title": "Live Stream Notifications",
            "default": true
          },
          "digest_frequency": {
            "type": "string",
            "maxLength": 20,
            "title": "Digest Frequency",
            "default": "immediate"
          },
          "quiet_hours_start": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours Start"
          },
          "quiet_hours_end": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours End"
          },
          "priority_threshold": {
            "type": "string",
            "maxLength": 20,
            "title": "Priority Threshold",
            "default": "medium"
          },
          "group_similar": {
            "type": "boolean",
            "title": "Group Similar",
            "default": true
          },
          "show_preview": {
            "type": "boolean",
            "title": "Show Preview",
            "default": true
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "custom_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Preferences"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "NotificationPreferencePublic",
        "description": "Public notification preference schema"
      },
      "NotificationPreferenceUpdate": {
        "properties": {
          "email_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Notifications"
          },
          "push_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Notifications"
          },
          "sms_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Notifications"
          },
          "like_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Like Notifications"
          },
          "comment_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment Notifications"
          },
          "follow_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Follow Notifications"
          },
          "mention_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mention Notifications"
          },
          "share_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Notifications"
          },
          "message_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message Notifications"
          },
          "news_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "News Notifications"
          },
          "story_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Story Notifications"
          },
          "reel_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reel Notifications"
          },
          "live_stream_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Live Stream Notifications"
          },
          "digest_frequency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Digest Frequency"
          },
          "quiet_hours_start": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours Start"
          },
          "quiet_hours_end": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours End"
          },
          "priority_threshold": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority Threshold"
          },
          "group_similar": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Similar"
          },
          "show_preview": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Preview"
          },
          "custom_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Preferences"
          }
        },
        "type": "object",
        "title": "NotificationPreferenceUpdate",
        "description": "Schema for updating notification preferences"
      },
      "NotificationPriority": {
        "type": "string",
        "enum": [
          "low",
          "medium",
          "high",
          "urgent"
        ],
        "title": "NotificationPriority",
        "description": "Notification priority levels"
      },
      "NotificationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "sent",
          "delivered",
          "read",
          "failed"
        ],
        "title": "NotificationStatus",
        "description": "Notification delivery status"
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "like",
          "comment",
          "follow",
          "mention",
          "share",
          "message",
          "news_published",
          "story_added",
          "reel_published",
          "live_stream_started",
          "system"
        ],
        "title": "NotificationType",
        "description": "Types of notifications"
      },
      "NotificationWithSender": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "title": "Title"
          },
          "message": {
            "type": "string",
            "maxLength": 1000,
            "title": "Message"
          },
          "type": {
            "$ref": "#/components/schemas/NotificationType"
          },
          "priority": {
            "$ref": "#/components/schemas/NotificationPriority",
            "default": "medium"
          },
          "status": {
            "$ref": "#/components/schemas/NotificationStatus",
            "default": "pending"
          },
          "entity_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type"
          },
          "entity_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Id"
          },
          "action_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Url"
          },
          "push_sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Sent At"
          },
          "push_error": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Error"
          },
          "email_sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Sent At"
          },
          "email_error": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Error"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "recipient_id": {
            "type": "string",
            "title": "Recipient Id"
          },
          "sender_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Id"
          },
          "read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At"
          },
          "clicked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clicked At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "metadata_": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "sender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserPublic"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "title",
          "message",
          "type",
          "id",
          "recipient_id",
          "created_at",
          "updated_at"
        ],
        "title": "NotificationWithSender",
        "description": "Notification with sender information"
      },
      "ParticipantRole": {
        "type": "string",
        "enum": [
          "member",
          "admin",
          "owner"
        ],
        "title": "ParticipantRole",
        "description": "Participant roles in conversations"
      },
      "ParticipantStatus": {
        "type": "string",
        "enum": [
          "active",
          "muted",
          "banned",
          "left"
        ],
        "title": "ParticipantStatus",
        "description": "Participant status"
      },
      "PaymentPublic": {
        "properties": {
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "title": "Currency",
            "default": "USD"
          },
          "payment_method": {
            "type": "string",
            "maxLength": 50,
            "title": "Payment Method"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "subscription_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscription Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "payment_id": {
            "type": "string",
            "title": "Payment Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "payment_method",
          "id",
          "user_id",
          "status",
          "payment_id",
          "created_at",
          "updated_at"
        ],
        "title": "PaymentPublic"
      },
      "PersonalizedFeedCreate": {
        "properties": {
          "feed_algorithm": {
            "type": "string",
            "maxLength": 50,
            "title": "Feed Algorithm",
            "default": "collaborative_filtering"
          },
          "content_categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Content Categories"
          },
          "preferred_sources": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Preferred Sources"
          },
          "excluded_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Excluded Topics"
          },
          "language_preferences": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Language Preferences"
          },
          "time_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Preferences"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "PersonalizedFeedCreate"
      },
      "PersonalizedFeedPublic": {
        "properties": {
          "feed_algorithm": {
            "type": "string",
            "maxLength": 50,
            "title": "Feed Algorithm",
            "default": "collaborative_filtering"
          },
          "content_categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Content Categories"
          },
          "preferred_sources": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Preferred Sources"
          },
          "excluded_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Excluded Topics"
          },
          "language_preferences": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Language Preferences"
          },
          "time_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Preferences"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "is_active",
          "last_updated",
          "created_at"
        ],
        "title": "PersonalizedFeedPublic"
      },
      "PlatformAnalyticsList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PlatformAnalyticsPublic"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total"
        ],
        "title": "PlatformAnalyticsList"
      },
      "PlatformAnalyticsPublic": {
        "properties": {
          "total_users": {
            "type": "integer",
            "title": "Total Users",
            "description": "Total registered users",
            "default": 0
          },
          "active_users_daily": {
            "type": "integer",
            "title": "Active Users Daily",
            "description": "Daily active users",
            "default": 0
          },
          "active_users_weekly": {
            "type": "integer",
            "title": "Active Users Weekly",
            "description": "Weekly active users",
            "default": 0
          },
          "active_users_monthly": {
            "type": "integer",
            "title": "Active Users Monthly",
            "description": "Monthly active users",
            "default": 0
          },
          "total_posts": {
            "type": "integer",
            "title": "Total Posts",
            "description": "Total posts created",
            "default": 0
          },
          "total_stories": {
            "type": "integer",
            "title": "Total Stories",
            "description": "Total stories created",
            "default": 0
          },
          "total_reels": {
            "type": "integer",
            "title": "Total Reels",
            "description": "Total reels created",
            "default": 0
          },
          "total_news_articles": {
            "type": "integer",
            "title": "Total News Articles",
            "description": "Total news articles",
            "default": 0
          },
          "total_live_streams": {
            "type": "integer",
            "title": "Total Live Streams",
            "description": "Total live streams",
            "default": 0
          },
          "total_likes": {
            "type": "integer",
            "title": "Total Likes",
            "description": "Total likes across platform",
            "default": 0
          },
          "total_comments": {
            "type": "integer",
            "title": "Total Comments",
            "description": "Total comments across platform",
            "default": 0
          },
          "total_shares": {
            "type": "integer",
            "title": "Total Shares",
            "description": "Total shares across platform",
            "default": 0
          },
          "total_bookmarks": {
            "type": "integer",
            "title": "Total Bookmarks",
            "description": "Total bookmarks across platform",
            "default": 0
          },
          "total_revenue": {
            "type": "number",
            "title": "Total Revenue",
            "description": "Total platform revenue",
            "default": 0.0
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "date_recorded": {
            "type": "string",
            "format": "date-time",
            "title": "Date Recorded"
          },
          "week_start": {
            "type": "string",
            "format": "date-time",
            "title": "Week Start"
          },
          "month_start": {
            "type": "string",
            "format": "date-time",
            "title": "Month Start"
          },
          "top_countries": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top Countries"
          },
          "top_cities": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top Cities"
          },
          "device_breakdown": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Breakdown"
          },
          "platform_breakdown": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform Breakdown"
          },
          "subscription_revenue": {
            "type": "number",
            "title": "Subscription Revenue",
            "default": 0.0
          },
          "ad_revenue": {
            "type": "number",
            "title": "Ad Revenue",
            "default": 0.0
          }
        },
        "type": "object",
        "required": [
          "id",
          "date_recorded",
          "week_start",
          "month_start"
        ],
        "title": "PlatformAnalyticsPublic"
      },
      "PollVoteCreate": {
        "properties": {
          "story_id": {
            "type": "string",
            "format": "uuid",
            "title": "Story Id"
          },
          "option_selected": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Option Selected"
          }
        },
        "type": "object",
        "required": [
          "story_id",
          "option_selected"
        ],
        "title": "PollVoteCreate",
        "description": "Schema for creating a poll vote"
      },
      "PostCreate": {
        "properties": {
          "caption": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2200
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "post_type": {
            "$ref": "#/components/schemas/PostType",
            "default": "regular"
          },
          "visibility": {
            "$ref": "#/components/schemas/PostVisibility",
            "default": "public"
          },
          "media_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Urls",
            "default": []
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "is_sensitive": {
            "type": "boolean",
            "title": "Is Sensitive",
            "default": false
          },
          "is_highlighted": {
            "type": "boolean",
            "title": "Is Highlighted",
            "default": false
          },
          "is_pinned": {
            "type": "boolean",
            "title": "Is Pinned",
            "default": false
          },
          "is_breaking_news": {
            "type": "boolean",
            "title": "Is Breaking News",
            "default": false
          },
          "fact_check_status": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Fact Check Status",
            "default": "pending"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "PostCreate",
        "description": "Create post schema"
      },
      "PostListResponse": {
        "properties": {
          "posts": {
            "items": {
              "$ref": "#/components/schemas/PostResponse"
            },
            "type": "array",
            "title": "Posts"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "posts",
          "total",
          "page",
          "per_page",
          "has_next",
          "has_prev"
        ],
        "title": "PostListResponse",
        "description": "Post list response"
      },
      "PostResponse": {
        "properties": {
          "caption": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2200
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "post_type": {
            "$ref": "#/components/schemas/PostType",
            "default": "regular"
          },
          "visibility": {
            "$ref": "#/components/schemas/PostVisibility",
            "default": "public"
          },
          "media_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Urls",
            "default": []
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "is_sensitive": {
            "type": "boolean",
            "title": "Is Sensitive",
            "default": false
          },
          "is_highlighted": {
            "type": "boolean",
            "title": "Is Highlighted",
            "default": false
          },
          "is_pinned": {
            "type": "boolean",
            "title": "Is Pinned",
            "default": false
          },
          "is_breaking_news": {
            "type": "boolean",
            "title": "Is Breaking News",
            "default": false
          },
          "fact_check_status": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Fact Check Status",
            "default": "pending"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/PostStatus"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "like_count": {
            "type": "integer",
            "title": "Like Count",
            "default": 0
          },
          "comment_count": {
            "type": "integer",
            "title": "Comment Count",
            "default": 0
          },
          "share_count": {
            "type": "integer",
            "title": "Share Count",
            "default": 0
          },
          "bookmark_count": {
            "type": "integer",
            "title": "Bookmark Count",
            "default": 0
          },
          "view_count": {
            "type": "integer",
            "title": "View Count",
            "default": 0
          },
          "facebook_shares": {
            "type": "integer",
            "title": "Facebook Shares",
            "default": 0
          },
          "twitter_shares": {
            "type": "integer",
            "title": "Twitter Shares",
            "default": 0
          },
          "linkedin_shares": {
            "type": "integer",
            "title": "Linkedin Shares",
            "default": 0
          },
          "whatsapp_shares": {
            "type": "integer",
            "title": "Whatsapp Shares",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "last_interaction_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Interaction At"
          },
          "share_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Url"
          },
          "is_published": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Published"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "status",
          "published_at",
          "created_at",
          "updated_at",
          "last_interaction_at"
        ],
        "title": "PostResponse",
        "description": "Post response schema"
      },
      "PostStatus": {
        "type": "string",
        "enum": [
          "draft",
          "published",
          "archived",
          "scheduled"
        ],
        "title": "PostStatus"
      },
      "PostType": {
        "type": "string",
        "enum": [
          "regular",
          "story",
          "reel",
          "live",
          "article"
        ],
        "title": "PostType"
      },
      "PostUpdate": {
        "properties": {
          "caption": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2200
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "media_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Urls"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "is_sensitive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Sensitive"
          },
          "is_highlighted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Highlighted"
          },
          "is_pinned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Pinned"
          },
          "is_breaking_news": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Breaking News"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PostStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "visibility": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PostVisibility"
              },
              {
                "type": "null"
              }
            ]
          },
          "fact_check_status": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Fact Check Status"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          }
        },
        "type": "object",
        "title": "PostUpdate",
        "description": "Update post schema"
      },
      "PostVisibility": {
        "type": "string",
        "enum": [
          "public",
          "followers_only",
          "close_friends"
        ],
        "title": "PostVisibility"
      },
      "PremiumFeatureCreate": {
        "properties": {
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "title": "Currency",
            "default": "USD"
          },
          "feature_type": {
            "type": "string",
            "title": "Feature Type"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "price",
          "feature_type"
        ],
        "title": "PremiumFeatureCreate"
      },
      "PremiumFeaturePublic": {
        "properties": {
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "price": {
            "type": "string",
            "title": "Price"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "title": "Currency",
            "default": "USD"
          },
          "feature_type": {
            "type": "string",
            "title": "Feature Type"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "price",
          "feature_type",
          "id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "PremiumFeaturePublic"
      },
      "PremiumFeaturePurchasePublic": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "feature_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feature Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "usage_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage Limit"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "feature": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PremiumFeaturePublic"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "feature_id",
          "status",
          "usage_count",
          "created_at",
          "updated_at"
        ],
        "title": "PremiumFeaturePurchasePublic"
      },
      "PremiumFeatureUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "feature_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Type"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "PremiumFeatureUpdate"
      },
      "ProcessingJobCreate": {
        "properties": {
          "media_file_id": {
            "type": "string",
            "title": "Media File Id"
          },
          "job_type": {
            "type": "string",
            "title": "Job Type"
          },
          "parameters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "media_file_id",
          "job_type"
        ],
        "title": "ProcessingJobCreate"
      },
      "ProcessingJobUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          },
          "result_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Data"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "title": "ProcessingJobUpdate"
      },
      "ProfileAnalytics": {
        "properties": {
          "profile_stats": {
            "$ref": "#/components/schemas/ProfileViewStats"
          },
          "engagement_rate": {
            "type": "number",
            "title": "Engagement Rate"
          },
          "follower_growth": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Follower Growth"
          },
          "content_performance": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Content Performance"
          }
        },
        "type": "object",
        "required": [
          "profile_stats",
          "engagement_rate",
          "follower_growth",
          "content_performance"
        ],
        "title": "ProfileAnalytics",
        "description": "Complete profile analytics"
      },
      "ProfileCreate": {
        "properties": {
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "occupation": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Occupation"
          },
          "company": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Company"
          },
          "education": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Education"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email"
          },
          "twitter_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Url"
          },
          "facebook_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Facebook Url"
          },
          "instagram_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Url"
          },
          "linkedin_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Linkedin Url"
          },
          "youtube_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Url"
          },
          "portfolio_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Url"
          },
          "professional_website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Professional Website"
          },
          "is_profile_public": {
            "type": "boolean",
            "title": "Is Profile Public",
            "default": true
          },
          "show_email": {
            "type": "boolean",
            "title": "Show Email",
            "default": false
          },
          "show_phone": {
            "type": "boolean",
            "title": "Show Phone",
            "default": false
          },
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "default": true
          },
          "push_notifications": {
            "type": "boolean",
            "title": "Push Notifications",
            "default": true
          }
        },
        "type": "object",
        "title": "ProfileCreate",
        "description": "Schema for creating a new profile"
      },
      "ProfilePrivate": {
        "properties": {
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "occupation": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Occupation"
          },
          "company": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Company"
          },
          "education": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Education"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email"
          },
          "twitter_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Url"
          },
          "facebook_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Facebook Url"
          },
          "instagram_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Url"
          },
          "linkedin_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Linkedin Url"
          },
          "youtube_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Url"
          },
          "portfolio_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Url"
          },
          "professional_website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Professional Website"
          },
          "is_profile_public": {
            "type": "boolean",
            "title": "Is Profile Public",
            "default": true
          },
          "show_email": {
            "type": "boolean",
            "title": "Show Email",
            "default": false
          },
          "show_phone": {
            "type": "boolean",
            "title": "Show Phone",
            "default": false
          },
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "default": true
          },
          "push_notifications": {
            "type": "boolean",
            "title": "Push Notifications",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "created_at"
        ],
        "title": "ProfilePrivate",
        "description": "Schema for user's own profile (includes private fields)"
      },
      "ProfilePublic": {
        "properties": {
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "occupation": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Occupation"
          },
          "company": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Company"
          },
          "education": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Education"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email"
          },
          "twitter_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Url"
          },
          "facebook_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Facebook Url"
          },
          "instagram_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Url"
          },
          "linkedin_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Linkedin Url"
          },
          "youtube_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Url"
          },
          "portfolio_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Url"
          },
          "professional_website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Professional Website"
          },
          "is_profile_public": {
            "type": "boolean",
            "title": "Is Profile Public",
            "default": true
          },
          "show_email": {
            "type": "boolean",
            "title": "Show Email",
            "default": false
          },
          "show_phone": {
            "type": "boolean",
            "title": "Show Phone",
            "default": false
          },
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "default": true
          },
          "push_notifications": {
            "type": "boolean",
            "title": "Push Notifications",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "created_at"
        ],
        "title": "ProfilePublic",
        "description": "Schema for public profile information"
      },
      "ProfileUpdate": {
        "properties": {
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "occupation": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Occupation"
          },
          "company": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Company"
          },
          "education": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Education"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email"
          },
          "twitter_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Url"
          },
          "facebook_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Facebook Url"
          },
          "instagram_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Url"
          },
          "linkedin_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Linkedin Url"
          },
          "youtube_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Url"
          },
          "portfolio_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Url"
          },
          "professional_website": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Professional Website"
          },
          "is_profile_public": {
            "type": "boolean",
            "title": "Is Profile Public",
            "default": true
          },
          "show_email": {
            "type": "boolean",
            "title": "Show Email",
            "default": false
          },
          "show_phone": {
            "type": "boolean",
            "title": "Show Phone",
            "default": false
          },
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "default": true
          },
          "push_notifications": {
            "type": "boolean",
            "title": "Push Notifications",
            "default": true
          }
        },
        "type": "object",
        "title": "ProfileUpdate",
        "description": "Schema for updating profile information"
      },
      "ProfileViewStats": {
        "properties": {
          "total_views": {
            "type": "integer",
            "title": "Total Views"
          },
          "unique_viewers": {
            "type": "integer",
            "title": "Unique Viewers"
          },
          "views_today": {
            "type": "integer",
            "title": "Views Today"
          },
          "views_this_week": {
            "type": "integer",
            "title": "Views This Week"
          },
          "views_this_month": {
            "type": "integer",
            "title": "Views This Month"
          },
          "top_viewer_locations": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Viewer Locations"
          }
        },
        "type": "object",
        "required": [
          "total_views",
          "unique_viewers",
          "views_today",
          "views_this_week",
          "views_this_month",
          "top_viewer_locations"
        ],
        "title": "ProfileViewStats",
        "description": "Profile view statistics"
      },
      "PublicVerificationInfo": {
        "properties": {
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "verification_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Type"
          },
          "badge_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Badge Name"
          },
          "verified_since": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified Since"
          },
          "badge_expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Badge Expires At"
          }
        },
        "type": "object",
        "required": [
          "is_verified"
        ],
        "title": "PublicVerificationInfo",
        "description": "Public verification information for user profiles"
      },
      "QuestionReplyCreate": {
        "properties": {
          "story_id": {
            "type": "string",
            "format": "uuid",
            "title": "Story Id"
          },
          "content": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "story_id",
          "content"
        ],
        "title": "QuestionReplyCreate",
        "description": "Schema for creating a question reply"
      },
      "QuizAnswerCreate": {
        "properties": {
          "story_id": {
            "type": "string",
            "format": "uuid",
            "title": "Story Id"
          },
          "option_selected": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Option Selected"
          }
        },
        "type": "object",
        "required": [
          "story_id",
          "option_selected"
        ],
        "title": "QuizAnswerCreate",
        "description": "Schema for submitting a quiz answer"
      },
      "QuizResult": {
        "properties": {
          "is_correct": {
            "type": "boolean",
            "title": "Is Correct"
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation"
          },
          "correct_option": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correct Option"
          }
        },
        "type": "object",
        "required": [
          "is_correct"
        ],
        "title": "QuizResult",
        "description": "Schema for quiz result"
      },
      "RecommendationRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "content_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Content Types"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 20
          },
          "exclude_viewed": {
            "type": "boolean",
            "title": "Exclude Viewed",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "RecommendationRequest"
      },
      "ReelCreate": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ReelType",
            "default": "original"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "visibility": {
            "$ref": "#/components/schemas/ReelVisibility",
            "default": "public"
          },
          "video_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Video Url"
          },
          "thumbnail_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Thumbnail Url"
          },
          "duration": {
            "type": "integer",
            "maximum": 90.0,
            "minimum": 15.0,
            "title": "Duration"
          },
          "width": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Width"
          },
          "height": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Height"
          },
          "file_size": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "File Size"
          },
          "music_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Id"
          },
          "audio_start_time": {
            "type": "number",
            "minimum": 0.0,
            "title": "Audio Start Time",
            "default": 0.0
          },
          "audio_volume": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.0,
            "title": "Audio Volume",
            "default": 1.0
          },
          "is_muted": {
            "type": "boolean",
            "title": "Is Muted",
            "default": false
          },
          "effects": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Effects"
          },
          "text_overlays": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Text Overlays"
          },
          "speed_multiplier": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.5,
            "title": "Speed Multiplier",
            "default": 1.0
          },
          "hashtags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Hashtags"
          },
          "mentions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Mentions"
          }
        },
        "type": "object",
        "required": [
          "video_url",
          "thumbnail_url",
          "duration",
          "width",
          "height",
          "file_size"
        ],
        "title": "ReelCreate",
        "description": "Schema for creating a new reel"
      },
      "ReelDuetCreate": {
        "properties": {
          "original_reel_id": {
            "type": "string",
            "format": "uuid",
            "title": "Original Reel Id"
          },
          "video_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Video Url"
          },
          "thumbnail_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Thumbnail Url"
          },
          "duration": {
            "type": "integer",
            "maximum": 90.0,
            "minimum": 15.0,
            "title": "Duration"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "original_reel_id",
          "video_url",
          "thumbnail_url",
          "duration"
        ],
        "title": "ReelDuetCreate",
        "description": "Schema for creating a duet reel"
      },
      "ReelPublic": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ReelType",
            "default": "original"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "visibility": {
            "$ref": "#/components/schemas/ReelVisibility",
            "default": "public"
          },
          "video_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Video Url"
          },
          "thumbnail_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Thumbnail Url"
          },
          "duration": {
            "type": "integer",
            "maximum": 90.0,
            "minimum": 15.0,
            "title": "Duration"
          },
          "width": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Width"
          },
          "height": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Height"
          },
          "file_size": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "File Size"
          },
          "music_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Id"
          },
          "audio_start_time": {
            "type": "number",
            "minimum": 0.0,
            "title": "Audio Start Time",
            "default": 0.0
          },
          "audio_volume": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.0,
            "title": "Audio Volume",
            "default": 1.0
          },
          "is_muted": {
            "type": "boolean",
            "title": "Is Muted",
            "default": false
          },
          "effects": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Effects"
          },
          "text_overlays": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Text Overlays"
          },
          "speed_multiplier": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.5,
            "title": "Speed Multiplier",
            "default": 1.0
          },
          "hashtags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Hashtags"
          },
          "mentions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Mentions"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/ReelStatus"
          },
          "processing_progress": {
            "type": "number",
            "title": "Processing Progress"
          },
          "view_count": {
            "type": "integer",
            "title": "View Count"
          },
          "like_count": {
            "type": "integer",
            "title": "Like Count"
          },
          "comment_count": {
            "type": "integer",
            "title": "Comment Count"
          },
          "share_count": {
            "type": "integer",
            "title": "Share Count"
          },
          "save_count": {
            "type": "integer",
            "title": "Save Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "is_processing": {
            "type": "boolean",
            "title": "Is Processing"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published"
          },
          "engagement_score": {
            "type": "integer",
            "title": "Engagement Score"
          }
        },
        "type": "object",
        "required": [
          "video_url",
          "thumbnail_url",
          "duration",
          "width",
          "height",
          "file_size",
          "id",
          "user_id",
          "status",
          "processing_progress",
          "view_count",
          "like_count",
          "comment_count",
          "share_count",
          "save_count",
          "created_at",
          "updated_at",
          "published_at",
          "is_processing",
          "is_published",
          "engagement_score"
        ],
        "title": "ReelPublic",
        "description": "Public reel schema with additional fields"
      },
      "ReelStatus": {
        "type": "string",
        "enum": [
          "processing",
          "published",
          "failed",
          "deleted"
        ],
        "title": "ReelStatus"
      },
      "ReelStitchCreate": {
        "properties": {
          "original_reel_id": {
            "type": "string",
            "format": "uuid",
            "title": "Original Reel Id"
          },
          "start_time": {
            "type": "number",
            "minimum": 0.0,
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "End Time"
          },
          "video_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Video Url"
          },
          "thumbnail_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Thumbnail Url"
          },
          "duration": {
            "type": "integer",
            "maximum": 90.0,
            "minimum": 15.0,
            "title": "Duration"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "original_reel_id",
          "start_time",
          "end_time",
          "video_url",
          "thumbnail_url",
          "duration"
        ],
        "title": "ReelStitchCreate",
        "description": "Schema for creating a stitch reel"
      },
      "ReelType": {
        "type": "string",
        "enum": [
          "original",
          "duet",
          "stitch",
          "remix"
        ],
        "title": "ReelType"
      },
      "ReelUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "visibility": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReelVisibility"
              },
              {
                "type": "null"
              }
            ]
          },
          "hashtags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hashtags"
          },
          "mentions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mentions"
          }
        },
        "type": "object",
        "title": "ReelUpdate",
        "description": "Schema for updating a reel"
      },
      "ReelVisibility": {
        "type": "string",
        "enum": [
          "public",
          "friends",
          "private"
        ],
        "title": "ReelVisibility"
      },
      "RevenueAnalytics": {
        "properties": {
          "total_earnings": {
            "type": "string",
            "title": "Total Earnings"
          },
          "monthly_earnings": {
            "type": "string",
            "title": "Monthly Earnings"
          },
          "subscription_revenue": {
            "type": "string",
            "title": "Subscription Revenue"
          },
          "ad_revenue": {
            "type": "string",
            "title": "Ad Revenue"
          },
          "sponsored_revenue": {
            "type": "string",
            "title": "Sponsored Revenue"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End"
          }
        },
        "type": "object",
        "required": [
          "total_earnings",
          "monthly_earnings",
          "subscription_revenue",
          "ad_revenue",
          "sponsored_revenue",
          "period_start",
          "period_end"
        ],
        "title": "RevenueAnalytics"
      },
      "SearchHistoryCreate": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 500,
            "title": "Query",
            "description": "The search query"
          },
          "search_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Search Type",
            "description": "Type of search performed"
          },
          "result_count": {
            "type": "integer",
            "title": "Result Count",
            "description": "Number of results returned",
            "default": 0
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "Filters used in the search"
          },
          "clicked_result_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clicked Result Id",
            "description": "ID of the result that was clicked"
          }
        },
        "type": "object",
        "required": [
          "query",
          "search_type"
        ],
        "title": "SearchHistoryCreate"
      },
      "SearchHistoryPublic": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 500,
            "title": "Query",
            "description": "The search query"
          },
          "search_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Search Type",
            "description": "Type of search performed"
          },
          "result_count": {
            "type": "integer",
            "title": "Result Count",
            "description": "Number of results returned",
            "default": 0
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "Filters used in the search"
          },
          "clicked_result_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clicked Result Id",
            "description": "ID of the result that was clicked"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "query",
          "search_type",
          "id",
          "user_id",
          "created_at"
        ],
        "title": "SearchHistoryPublic"
      },
      "SearchHistoryStats": {
        "properties": {
          "total_searches": {
            "type": "integer",
            "title": "Total Searches"
          },
          "unique_queries": {
            "type": "integer",
            "title": "Unique Queries"
          },
          "most_searched_type": {
            "type": "string",
            "title": "Most Searched Type"
          },
          "average_results_per_search": {
            "type": "number",
            "title": "Average Results Per Search"
          }
        },
        "type": "object",
        "required": [
          "total_searches",
          "unique_queries",
          "most_searched_type",
          "average_results_per_search"
        ],
        "title": "SearchHistoryStats"
      },
      "SearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 500,
            "title": "Query",
            "description": "Search query text"
          },
          "search_type": {
            "$ref": "#/components/schemas/SearchType",
            "description": "Type of search to perform"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "Additional filters"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Location filter"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum number of results",
            "default": 20
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "description": "Pagination offset",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "query",
          "search_type"
        ],
        "title": "SearchRequest"
      },
      "SearchResponse": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "search_type": {
            "$ref": "#/components/schemas/SearchType"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results"
          },
          "results": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Results"
          },
          "trending_topics": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/app__modules__search__schema__search__TrendingTopicPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trending Topics"
          },
          "search_time_ms": {
            "type": "number",
            "title": "Search Time Ms"
          }
        },
        "type": "object",
        "required": [
          "query",
          "search_type",
          "total_results",
          "results",
          "search_time_ms"
        ],
        "title": "SearchResponse"
      },
      "SearchSuggestionsResponse": {
        "properties": {
          "suggestions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Suggestions"
          },
          "query": {
            "type": "string",
            "title": "Query"
          }
        },
        "type": "object",
        "required": [
          "suggestions",
          "query"
        ],
        "title": "SearchSuggestionsResponse"
      },
      "SearchType": {
        "type": "string",
        "enum": [
          "post",
          "news",
          "user",
          "hashtag",
          "location",
          "story",
          "reel",
          "live_stream"
        ],
        "title": "SearchType",
        "description": "Types of searchable content"
      },
      "SocialMediaPostPublic": {
        "properties": {
          "platform": {
            "type": "string",
            "maxLength": 50,
            "title": "Platform"
          },
          "external_id": {
            "type": "string",
            "maxLength": 255,
            "title": "External Id"
          },
          "content_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "post_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Post Url"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "pending"
          },
          "posted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posted At"
          },
          "engagement_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Engagement Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "platform",
          "external_id",
          "content_type",
          "content_id",
          "id",
          "integration_id",
          "created_at",
          "updated_at"
        ],
        "title": "SocialMediaPostPublic"
      },
      "SocialMediaPostRequest": {
        "properties": {
          "platform": {
            "type": "string",
            "title": "Platform"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "media_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Urls"
          }
        },
        "type": "object",
        "required": [
          "platform",
          "content_type",
          "content_id"
        ],
        "title": "SocialMediaPostRequest"
      },
      "SocialMediaPostResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "post_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Post Id"
          },
          "post_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Post Url"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "SocialMediaPostResponse"
      },
      "SponsoredContentCreate": {
        "properties": {
          "brand_id": {
            "type": "string",
            "format": "uuid",
            "title": "Brand Id"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "compensation": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Compensation"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "title": "Currency",
            "default": "USD"
          },
          "contract_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract Details"
          },
          "requirements": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements"
          }
        },
        "type": "object",
        "required": [
          "brand_id",
          "content_id",
          "content_type",
          "compensation"
        ],
        "title": "SponsoredContentCreate"
      },
      "SponsoredContentPublic": {
        "properties": {
          "brand_id": {
            "type": "string",
            "format": "uuid",
            "title": "Brand Id"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "compensation": {
            "type": "string",
            "title": "Compensation"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "title": "Currency",
            "default": "USD"
          },
          "contract_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract Details"
          },
          "requirements": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "creator_id": {
            "type": "string",
            "format": "uuid",
            "title": "Creator Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "brand_id",
          "content_id",
          "content_type",
          "compensation",
          "id",
          "creator_id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "SponsoredContentPublic"
      },
      "SportsDataPublic": {
        "properties": {
          "league": {
            "type": "string",
            "maxLength": 100,
            "title": "League"
          },
          "sport": {
            "type": "string",
            "maxLength": 50,
            "title": "Sport"
          },
          "event_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Event Type"
          },
          "event_name": {
            "type": "string",
            "maxLength": 200,
            "title": "Event Name"
          },
          "external_id": {
            "type": "string",
            "maxLength": 255,
            "title": "External Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "status": {
            "type": "string",
            "maxLength": 50,
            "title": "Status"
          },
          "venue": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Venue"
          },
          "participants": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Participants"
          },
          "scores": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scores"
          },
          "live_stats": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Live Stats"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "fetched_at": {
            "type": "string",
            "format": "date-time",
            "title": "Fetched At"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "league",
          "sport",
          "event_type",
          "event_name",
          "external_id",
          "start_time",
          "status",
          "id",
          "integration_id",
          "fetched_at",
          "expires_at"
        ],
        "title": "SportsDataPublic"
      },
      "SportsRequest": {
        "properties": {
          "sport": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sport"
          },
          "league": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "League"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "limit": {
            "type": "integer",
            "maximum": 200.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 50
          }
        },
        "type": "object",
        "title": "SportsRequest"
      },
      "SportsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SportsDataPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "SportsResponse"
      },
      "StockDataPublic": {
        "properties": {
          "symbol": {
            "type": "string",
            "maxLength": 20,
            "title": "Symbol"
          },
          "company_name": {
            "type": "string",
            "maxLength": 200,
            "title": "Company Name"
          },
          "current_price": {
            "type": "string",
            "title": "Current Price"
          },
          "change_amount": {
            "type": "string",
            "title": "Change Amount"
          },
          "change_percent": {
            "type": "string",
            "title": "Change Percent"
          },
          "volume": {
            "type": "integer",
            "title": "Volume"
          },
          "market_cap": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Cap"
          },
          "pe_ratio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pe Ratio"
          },
          "historical_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Historical Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "fetched_at": {
            "type": "string",
            "format": "date-time",
            "title": "Fetched At"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "company_name",
          "current_price",
          "change_amount",
          "change_percent",
          "volume",
          "id",
          "integration_id",
          "fetched_at",
          "expires_at"
        ],
        "title": "StockDataPublic"
      },
      "StockRequest": {
        "properties": {
          "symbols": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Symbols"
          },
          "include_history": {
            "type": "boolean",
            "title": "Include History",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "symbols"
        ],
        "title": "StockRequest"
      },
      "StockResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StockDataPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "StockResponse"
      },
      "StoryCreate": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StoryType",
            "default": "photo"
          },
          "media_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Media Url"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "text_position_x": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Position X"
          },
          "text_position_y": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Position Y"
          },
          "text_color": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Color",
            "default": "#FFFFFF"
          },
          "text_font_size": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 72.0,
                "minimum": 12.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Font Size",
            "default": 24
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 15.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration",
            "default": 5
          },
          "width": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Width"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size"
          },
          "interactive_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interactive Type"
          },
          "interactive_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interactive Data"
          },
          "music_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Id"
          },
          "music_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Title"
          },
          "music_artist": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Artist"
          },
          "music_duration": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Duration"
          },
          "filter_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter Name"
          },
          "effect_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effect Data"
          },
          "visibility": {
            "$ref": "#/components/schemas/StoryVisibility",
            "default": "public"
          },
          "allow_replies": {
            "type": "boolean",
            "title": "Allow Replies",
            "default": true
          },
          "show_viewers": {
            "type": "boolean",
            "title": "Show Viewers",
            "default": true
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          }
        },
        "type": "object",
        "required": [
          "media_url"
        ],
        "title": "StoryCreate",
        "description": "Schema for creating a new story"
      },
      "StoryHighlightCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Title"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "default": false
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived",
            "default": false
          },
          "story_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Story Ids"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "StoryHighlightCreate",
        "description": "Schema for creating a new story highlight"
      },
      "StoryHighlightPublic": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Title"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "default": false
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "story_count": {
            "type": "integer",
            "title": "Story Count"
          }
        },
        "type": "object",
        "required": [
          "title",
          "id",
          "user_id",
          "created_at",
          "updated_at",
          "story_count"
        ],
        "title": "StoryHighlightPublic",
        "description": "Public story highlight schema"
      },
      "StoryHighlightUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_private": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Private"
          },
          "is_archived": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Archived"
          },
          "story_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Story Ids"
          }
        },
        "type": "object",
        "title": "StoryHighlightUpdate",
        "description": "Schema for updating an existing story highlight"
      },
      "StoryInteractionCreate": {
        "properties": {
          "interaction_type": {
            "$ref": "#/components/schemas/InteractionType"
          },
          "content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "option_selected": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Option Selected"
          },
          "is_correct": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Correct"
          },
          "interaction_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interaction Metadata"
          },
          "story_id": {
            "type": "string",
            "format": "uuid",
            "title": "Story Id"
          }
        },
        "type": "object",
        "required": [
          "interaction_type",
          "story_id"
        ],
        "title": "StoryInteractionCreate",
        "description": "Schema for creating a new story interaction"
      },
      "StoryInteractionPublic": {
        "properties": {
          "interaction_type": {
            "$ref": "#/components/schemas/InteractionType"
          },
          "content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "option_selected": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Option Selected"
          },
          "is_correct": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Correct"
          },
          "interaction_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interaction Metadata"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "story_id": {
            "type": "string",
            "format": "uuid",
            "title": "Story Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "interaction_type",
          "id",
          "story_id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "StoryInteractionPublic",
        "description": "Public story interaction schema"
      },
      "StoryInteractionUpdate": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "option_selected": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Option Selected"
          },
          "interaction_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interaction Metadata"
          }
        },
        "type": "object",
        "title": "StoryInteractionUpdate",
        "description": "Schema for updating an existing story interaction"
      },
      "StoryPublic": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StoryType",
            "default": "photo"
          },
          "media_url": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Media Url"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "text_position_x": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Position X"
          },
          "text_position_y": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Position Y"
          },
          "text_color": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Color",
            "default": "#FFFFFF"
          },
          "text_font_size": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 72.0,
                "minimum": 12.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Font Size",
            "default": 24
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 15.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration",
            "default": 5
          },
          "width": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Width"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size"
          },
          "interactive_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interactive Type"
          },
          "interactive_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interactive Data"
          },
          "music_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Id"
          },
          "music_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Title"
          },
          "music_artist": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Artist"
          },
          "music_duration": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Duration"
          },
          "filter_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter Name"
          },
          "effect_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effect Data"
          },
          "visibility": {
            "$ref": "#/components/schemas/StoryVisibility",
            "default": "public"
          },
          "allow_replies": {
            "type": "boolean",
            "title": "Allow Replies",
            "default": true
          },
          "show_viewers": {
            "type": "boolean",
            "title": "Show Viewers",
            "default": true
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/StoryStatus"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_expired": {
            "type": "boolean",
            "title": "Is Expired"
          },
          "time_remaining": {
            "type": "integer",
            "title": "Time Remaining"
          },
          "viewer_count": {
            "type": "integer",
            "title": "Viewer Count"
          }
        },
        "type": "object",
        "required": [
          "media_url",
          "id",
          "user_id",
          "status",
          "expires_at",
          "created_at",
          "updated_at",
          "is_expired",
          "time_remaining",
          "viewer_count"
        ],
        "title": "StoryPublic",
        "description": "Public story schema with additional computed fields"
      },
      "StoryStatus": {
        "type": "string",
        "enum": [
          "active",
          "expired",
          "deleted"
        ],
        "title": "StoryStatus"
      },
      "StoryType": {
        "type": "string",
        "enum": [
          "photo",
          "video",
          "text"
        ],
        "title": "StoryType"
      },
      "StoryUpdate": {
        "properties": {
          "text_content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          },
          "text_position_x": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Position X"
          },
          "text_position_y": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Position Y"
          },
          "text_color": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Color"
          },
          "text_font_size": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 72.0,
                "minimum": 12.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Font Size"
          },
          "interactive_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interactive Type"
          },
          "interactive_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interactive Data"
          },
          "music_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Id"
          },
          "music_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Title"
          },
          "music_artist": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Artist"
          },
          "music_duration": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Duration"
          },
          "filter_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter Name"
          },
          "effect_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effect Data"
          },
          "visibility": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StoryVisibility"
              },
              {
                "type": "null"
              }
            ]
          },
          "allow_replies": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Replies"
          },
          "show_viewers": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Viewers"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          }
        },
        "type": "object",
        "title": "StoryUpdate",
        "description": "Schema for updating an existing story"
      },
      "StoryViewerPublic": {
        "properties": {
          "view_duration": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "View Duration"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "story_id": {
            "type": "string",
            "format": "uuid",
            "title": "Story Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "viewed_at": {
            "type": "string",
            "format": "date-time",
            "title": "Viewed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "story_id",
          "user_id",
          "viewed_at"
        ],
        "title": "StoryViewerPublic",
        "description": "Public story viewer schema"
      },
      "StoryVisibility": {
        "type": "string",
        "enum": [
          "public",
          "close_friends",
          "private"
        ],
        "title": "StoryVisibility"
      },
      "StreamAnalytics": {
        "properties": {
          "stream_id": {
            "type": "string",
            "format": "uuid",
            "title": "Stream Id"
          },
          "total_viewers": {
            "type": "integer",
            "title": "Total Viewers"
          },
          "peak_viewers": {
            "type": "integer",
            "title": "Peak Viewers"
          },
          "average_viewers": {
            "type": "number",
            "title": "Average Viewers"
          },
          "total_duration": {
            "type": "integer",
            "title": "Total Duration"
          },
          "total_comments": {
            "type": "integer",
            "title": "Total Comments"
          },
          "total_reactions": {
            "type": "integer",
            "title": "Total Reactions"
          },
          "total_badges": {
            "type": "integer",
            "title": "Total Badges"
          },
          "total_donations": {
            "type": "number",
            "title": "Total Donations"
          },
          "viewer_retention": {
            "additionalProperties": true,
            "type": "object",
            "title": "Viewer Retention"
          },
          "geographic_data": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Geographic Data"
          }
        },
        "type": "object",
        "required": [
          "stream_id",
          "total_viewers",
          "peak_viewers",
          "average_viewers",
          "total_duration",
          "total_comments",
          "total_reactions",
          "total_badges",
          "total_donations",
          "viewer_retention",
          "geographic_data"
        ],
        "title": "StreamAnalytics",
        "description": "Schema for stream analytics"
      },
      "StreamBadgeList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/StreamBadgePublic"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "page",
          "size",
          "has_next",
          "has_prev"
        ],
        "title": "StreamBadgeList",
        "description": "Schema for badge list response"
      },
      "StreamBadgePublic": {
        "properties": {
          "badge_type": {
            "$ref": "#/components/schemas/BadgeType"
          },
          "amount": {
            "type": "number",
            "minimum": 0.0,
            "title": "Amount"
          },
          "message": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "animation_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Animation Type"
          },
          "sound_effect": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Sound Effect"
          },
          "display_duration": {
            "type": "integer",
            "maximum": 30000.0,
            "minimum": 1000.0,
            "title": "Display Duration",
            "default": 5000
          },
          "sent_at": {
            "type": "string",
            "format": "date-time",
            "title": "Sent At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "stream_id": {
            "type": "string",
            "format": "uuid",
            "title": "Stream Id"
          },
          "sender_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sender Id"
          },
          "is_donation": {
            "type": "boolean",
            "title": "Is Donation"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "badge_type",
          "amount",
          "sent_at",
          "id",
          "stream_id",
          "sender_id",
          "is_donation",
          "created_at",
          "updated_at"
        ],
        "title": "StreamBadgePublic",
        "description": "Public stream badge schema"
      },
      "StreamBadgeStats": {
        "properties": {
          "stream_id": {
            "type": "string",
            "format": "uuid",
            "title": "Stream Id"
          },
          "total_badges": {
            "type": "integer",
            "title": "Total Badges"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "average_amount": {
            "type": "number",
            "title": "Average Amount"
          },
          "top_badge_type": {
            "$ref": "#/components/schemas/BadgeType"
          },
          "badge_type_breakdown": {
            "additionalProperties": true,
            "type": "object",
            "title": "Badge Type Breakdown"
          },
          "hourly_distribution": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Hourly Distribution"
          }
        },
        "type": "object",
        "required": [
          "stream_id",
          "total_badges",
          "total_amount",
          "average_amount",
          "top_badge_type",
          "badge_type_breakdown",
          "hourly_distribution"
        ],
        "title": "StreamBadgeStats",
        "description": "Schema for stream badge statistics"
      },
      "StreamCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "visibility": {
            "$ref": "#/components/schemas/StreamVisibility",
            "default": "public"
          },
          "quality": {
            "$ref": "#/components/schemas/StreamQuality",
            "default": "1080p"
          },
          "is_recorded": {
            "type": "boolean",
            "title": "Is Recorded",
            "default": true
          },
          "is_moderated": {
            "type": "boolean",
            "title": "Is Moderated",
            "default": true
          },
          "allow_comments": {
            "type": "boolean",
            "title": "Allow Comments",
            "default": true
          },
          "allow_reactions": {
            "type": "boolean",
            "title": "Allow Reactions",
            "default": true
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "is_monetized": {
            "type": "boolean",
            "title": "Is Monetized",
            "default": false
          },
          "donation_goal": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Donation Goal"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "StreamCreate",
        "description": "Schema for creating a new stream"
      },
      "StreamEnd": {
        "properties": {
          "save_recording": {
            "type": "boolean",
            "title": "Save Recording",
            "default": true
          }
        },
        "type": "object",
        "title": "StreamEnd",
        "description": "Schema for ending a stream"
      },
      "StreamList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/StreamPublic"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "page",
          "size",
          "has_next",
          "has_prev"
        ],
        "title": "StreamList",
        "description": "Schema for stream list response"
      },
      "StreamPublic": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "visibility": {
            "$ref": "#/components/schemas/StreamVisibility",
            "default": "public"
          },
          "quality": {
            "$ref": "#/components/schemas/StreamQuality",
            "default": "1080p"
          },
          "is_recorded": {
            "type": "boolean",
            "title": "Is Recorded",
            "default": true
          },
          "is_moderated": {
            "type": "boolean",
            "title": "Is Moderated",
            "default": true
          },
          "allow_comments": {
            "type": "boolean",
            "title": "Allow Comments",
            "default": true
          },
          "allow_reactions": {
            "type": "boolean",
            "title": "Allow Reactions",
            "default": true
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "is_monetized": {
            "type": "boolean",
            "title": "Is Monetized",
            "default": false
          },
          "donation_goal": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Donation Goal"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/StreamStatus"
          },
          "stream_key": {
            "type": "string",
            "title": "Stream Key"
          },
          "playback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Playback Url"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "ended_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ended At"
          },
          "peak_viewers": {
            "type": "integer",
            "title": "Peak Viewers"
          },
          "total_viewers": {
            "type": "integer",
            "title": "Total Viewers"
          },
          "total_comments": {
            "type": "integer",
            "title": "Total Comments"
          },
          "total_reactions": {
            "type": "integer",
            "title": "Total Reactions"
          },
          "total_badges": {
            "type": "integer",
            "title": "Total Badges"
          },
          "current_viewers": {
            "type": "integer",
            "title": "Current Viewers"
          },
          "total_donations": {
            "type": "number",
            "title": "Total Donations"
          },
          "recording_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recording Url"
          },
          "recording_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recording Duration"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_live": {
            "type": "boolean",
            "title": "Is Live"
          },
          "is_scheduled": {
            "type": "boolean",
            "title": "Is Scheduled"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          }
        },
        "type": "object",
        "required": [
          "title",
          "id",
          "user_id",
          "status",
          "stream_key",
          "playback_url",
          "thumbnail_url",
          "started_at",
          "ended_at",
          "peak_viewers",
          "total_viewers",
          "total_comments",
          "total_reactions",
          "total_badges",
          "current_viewers",
          "total_donations",
          "recording_url",
          "recording_duration",
          "created_at",
          "updated_at",
          "is_live",
          "is_scheduled",
          "duration"
        ],
        "title": "StreamPublic",
        "description": "Public stream schema with additional fields"
      },
      "StreamQuality": {
        "type": "string",
        "enum": [
          "480p",
          "720p",
          "1080p",
          "4k"
        ],
        "title": "StreamQuality"
      },
      "StreamStatus": {
        "type": "string",
        "enum": [
          "scheduled",
          "live",
          "ended",
          "cancelled",
          "processing"
        ],
        "title": "StreamStatus"
      },
      "StreamUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "visibility": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StreamVisibility"
              },
              {
                "type": "null"
              }
            ]
          },
          "quality": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StreamQuality"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_recorded": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Recorded"
          },
          "is_moderated": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Moderated"
          },
          "allow_comments": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Comments"
          },
          "allow_reactions": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Reactions"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "is_monetized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Monetized"
          },
          "donation_goal": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Donation Goal"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          }
        },
        "type": "object",
        "title": "StreamUpdate",
        "description": "Schema for updating a stream"
      },
      "StreamViewerList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/StreamViewerPublic"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "page",
          "size",
          "has_next",
          "has_prev"
        ],
        "title": "StreamViewerList",
        "description": "Schema for viewer list response"
      },
      "StreamViewerPublic": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ViewerRole",
            "default": "viewer"
          },
          "is_muted": {
            "type": "boolean",
            "title": "Is Muted",
            "default": false
          },
          "is_banned": {
            "type": "boolean",
            "title": "Is Banned",
            "default": false
          },
          "comments_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Comments Count",
            "default": 0
          },
          "reactions_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Reactions Count",
            "default": 0
          },
          "badges_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Badges Count",
            "default": 0
          },
          "joined_at": {
            "type": "string",
            "format": "date-time",
            "title": "Joined At"
          },
          "left_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left At"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "browser": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "stream_id": {
            "type": "string",
            "format": "uuid",
            "title": "Stream Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "session_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Duration"
          },
          "total_engagement": {
            "type": "integer",
            "title": "Total Engagement"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "joined_at",
          "id",
          "stream_id",
          "user_id",
          "session_duration",
          "total_engagement",
          "created_at",
          "updated_at"
        ],
        "title": "StreamViewerPublic",
        "description": "Public stream viewer schema"
      },
      "StreamViewerStats": {
        "properties": {
          "stream_id": {
            "type": "string",
            "format": "uuid",
            "title": "Stream Id"
          },
          "total_viewers": {
            "type": "integer",
            "title": "Total Viewers"
          },
          "unique_viewers": {
            "type": "integer",
            "title": "Unique Viewers"
          },
          "average_session_duration": {
            "type": "number",
            "title": "Average Session Duration"
          },
          "peak_concurrent_viewers": {
            "type": "integer",
            "title": "Peak Concurrent Viewers"
          },
          "viewer_retention_rate": {
            "type": "number",
            "title": "Viewer Retention Rate"
          },
          "top_countries": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Countries"
          },
          "device_breakdown": {
            "additionalProperties": true,
            "type": "object",
            "title": "Device Breakdown"
          }
        },
        "type": "object",
        "required": [
          "stream_id",
          "total_viewers",
          "unique_viewers",
          "average_session_duration",
          "peak_concurrent_viewers",
          "viewer_retention_rate",
          "top_countries",
          "device_breakdown"
        ],
        "title": "StreamViewerStats",
        "description": "Schema for stream viewer statistics"
      },
      "StreamVisibility": {
        "type": "string",
        "enum": [
          "public",
          "private",
          "unlisted"
        ],
        "title": "StreamVisibility"
      },
      "SubscriptionCheckout": {
        "properties": {
          "tier_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tier Id"
          },
          "payment_method": {
            "type": "string",
            "maxLength": 50,
            "title": "Payment Method"
          },
          "billing_cycle": {
            "type": "string",
            "title": "Billing Cycle",
            "default": "monthly"
          }
        },
        "type": "object",
        "required": [
          "tier_id",
          "payment_method"
        ],
        "title": "SubscriptionCheckout"
      },
      "SubscriptionTierCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price_monthly": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Price Monthly"
          },
          "price_yearly": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Yearly"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Features"
          },
          "max_subscribers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Subscribers"
          }
        },
        "type": "object",
        "required": [
          "name",
          "price_monthly"
        ],
        "title": "SubscriptionTierCreate"
      },
      "SubscriptionTierPublic": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price_monthly": {
            "type": "string",
            "title": "Price Monthly"
          },
          "price_yearly": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Yearly"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Features"
          },
          "max_subscribers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Subscribers"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "creator_id": {
            "type": "string",
            "format": "uuid",
            "title": "Creator Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "price_monthly",
          "id",
          "creator_id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "SubscriptionTierPublic"
      },
      "SubscriptionTierUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price_monthly": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Monthly"
          },
          "price_yearly": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Yearly"
          },
          "features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features"
          },
          "max_subscribers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Subscribers"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "SubscriptionTierUpdate"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "Token"
      },
      "TranslationRequest": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "source_language": {
            "type": "string",
            "title": "Source Language"
          },
          "target_language": {
            "type": "string",
            "title": "Target Language"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "content_id",
          "source_language",
          "target_language",
          "text"
        ],
        "title": "TranslationRequest"
      },
      "TranslationResponse": {
        "properties": {
          "content_id": {
            "type": "string",
            "format": "uuid",
            "title": "Content Id"
          },
          "translated_text": {
            "type": "string",
            "title": "Translated Text"
          },
          "source_language": {
            "type": "string",
            "title": "Source Language"
          },
          "target_language": {
            "type": "string",
            "title": "Target Language"
          },
          "quality_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Score"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "content_id",
          "translated_text",
          "source_language",
          "target_language"
        ],
        "title": "TranslationResponse"
      },
      "TrendAnalysisPublic": {
        "properties": {
          "trend_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Trend Type"
          },
          "trend_value": {
            "type": "string",
            "maxLength": 200,
            "title": "Trend Value"
          },
          "trend_score": {
            "type": "string",
            "title": "Trend Score"
          },
          "growth_rate": {
            "type": "string",
            "title": "Growth Rate"
          },
          "prediction_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prediction Score"
          },
          "time_window": {
            "type": "string",
            "maxLength": 20,
            "title": "Time Window"
          },
          "region": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "is_viral": {
            "type": "boolean",
            "title": "Is Viral"
          },
          "peak_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Peak Time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "trend_type",
          "trend_value",
          "trend_score",
          "growth_rate",
          "time_window",
          "id",
          "is_viral",
          "created_at"
        ],
        "title": "TrendAnalysisPublic"
      },
      "TrendAnalysisResponse": {
        "properties": {
          "trends": {
            "items": {
              "$ref": "#/components/schemas/TrendAnalysisPublic"
            },
            "type": "array",
            "title": "Trends"
          },
          "time_window": {
            "type": "string",
            "title": "Time Window"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "total_trends": {
            "type": "integer",
            "title": "Total Trends"
          }
        },
        "type": "object",
        "required": [
          "trends",
          "time_window",
          "total_trends"
        ],
        "title": "TrendAnalysisResponse"
      },
      "TrendingNewsResponse": {
        "properties": {
          "trending_news": {
            "items": {
              "$ref": "#/components/schemas/NewsResponse"
            },
            "type": "array",
            "title": "Trending News"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "time_period": {
            "type": "string",
            "title": "Time Period"
          }
        },
        "type": "object",
        "required": [
          "trending_news",
          "total",
          "time_period"
        ],
        "title": "TrendingNewsResponse",
        "description": "Trending news response"
      },
      "TrendingTopicCreate": {
        "properties": {
          "topic": {
            "type": "string",
            "maxLength": 200,
            "title": "Topic",
            "description": "The trending topic or hashtag"
          },
          "topic_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Topic Type",
            "description": "Type of topic (hashtag, keyword, etc.)"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Category (news, sports, etc.)"
          },
          "search_count": {
            "type": "integer",
            "title": "Search Count",
            "description": "Number of searches for this topic",
            "default": 0
          },
          "post_count": {
            "type": "integer",
            "title": "Post Count",
            "description": "Number of posts containing this topic",
            "default": 0
          },
          "user_count": {
            "type": "integer",
            "title": "User Count",
            "description": "Number of users mentioning this topic",
            "default": 0
          },
          "engagement_score": {
            "type": "number",
            "title": "Engagement Score",
            "description": "Overall engagement score",
            "default": 0.0
          },
          "rank": {
            "type": "integer",
            "title": "Rank",
            "description": "Current ranking position",
            "default": 0
          },
          "velocity": {
            "type": "number",
            "title": "Velocity",
            "description": "Rate of growth",
            "default": 0.0
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code",
            "description": "Country code"
          },
          "region": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "Geographic region"
          }
        },
        "type": "object",
        "required": [
          "topic",
          "topic_type"
        ],
        "title": "TrendingTopicCreate"
      },
      "TrendingTopicsList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/app__modules__search__schema__trending__TrendingTopicPublic"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "default": "en"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total"
        ],
        "title": "TrendingTopicsList"
      },
      "TrendingTopicsResponse": {
        "properties": {
          "topics": {
            "items": {
              "$ref": "#/components/schemas/app__modules__search__schema__search__TrendingTopicPublic"
            },
            "type": "array",
            "title": "Topics"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "default": "en"
          }
        },
        "type": "object",
        "required": [
          "topics",
          "total"
        ],
        "title": "TrendingTopicsResponse"
      },
      "UpdatePassword": {
        "properties": {
          "current_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "UpdatePassword",
        "description": "Schema for password updates"
      },
      "User": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 100,
            "title": "Email"
          },
          "username": {
            "type": "string",
            "maxLength": 50,
            "title": "Username"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "account_type": {
            "$ref": "#/components/schemas/AccountType",
            "default": "personal"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "default": false
          },
          "is_professional_account": {
            "type": "boolean",
            "title": "Is Professional Account",
            "default": false
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_journalist": {
            "type": "boolean",
            "title": "Is Journalist",
            "default": false
          },
          "is_organization": {
            "type": "boolean",
            "title": "Is Organization",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "hashed_password": {
            "type": "string",
            "title": "Hashed Password"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "follower_count": {
            "type": "integer",
            "title": "Follower Count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "default": 0
          },
          "post_count": {
            "type": "integer",
            "title": "Post Count",
            "default": 0
          },
          "last_active": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "hashed_password"
        ],
        "title": "User"
      },
      "UserAnalyticsList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserAnalyticsPublic"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "user_id"
        ],
        "title": "UserAnalyticsList"
      },
      "UserAnalyticsPublic": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID for analytics"
          },
          "profile_views": {
            "type": "integer",
            "title": "Profile Views",
            "description": "Number of profile views",
            "default": 0
          },
          "follower_count": {
            "type": "integer",
            "title": "Follower Count",
            "description": "Current follower count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "description": "Current following count",
            "default": 0
          },
          "total_posts": {
            "type": "integer",
            "title": "Total Posts",
            "description": "Total posts created",
            "default": 0
          },
          "total_likes_received": {
            "type": "integer",
            "title": "Total Likes Received",
            "description": "Total likes received on posts",
            "default": 0
          },
          "total_comments_received": {
            "type": "integer",
            "title": "Total Comments Received",
            "description": "Total comments received on posts",
            "default": 0
          },
          "total_shares_received": {
            "type": "integer",
            "title": "Total Shares Received",
            "description": "Total shares received on posts",
            "default": 0
          },
          "total_bookmarks_received": {
            "type": "integer",
            "title": "Total Bookmarks Received",
            "description": "Total bookmarks received on posts",
            "default": 0
          },
          "avg_engagement_rate": {
            "type": "number",
            "title": "Avg Engagement Rate",
            "description": "Average engagement rate",
            "default": 0.0
          },
          "login_count": {
            "type": "integer",
            "title": "Login Count",
            "description": "Number of logins",
            "default": 0
          },
          "session_duration_avg": {
            "type": "integer",
            "title": "Session Duration Avg",
            "description": "Average session duration in seconds",
            "default": 0
          },
          "total_earnings": {
            "type": "number",
            "title": "Total Earnings",
            "description": "Total earnings from monetization",
            "default": 0.0
          },
          "subscription_count": {
            "type": "integer",
            "title": "Subscription Count",
            "description": "Number of subscribers",
            "default": 0
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "date_recorded": {
            "type": "string",
            "format": "date-time",
            "title": "Date Recorded"
          },
          "week_start": {
            "type": "string",
            "format": "date-time",
            "title": "Week Start"
          },
          "month_start": {
            "type": "string",
            "format": "date-time",
            "title": "Month Start"
          },
          "audience_locations": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience Locations"
          },
          "audience_age_groups": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience Age Groups"
          },
          "audience_genders": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience Genders"
          },
          "top_performing_post_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top Performing Post Id"
          },
          "top_performing_score": {
            "type": "number",
            "title": "Top Performing Score",
            "default": 0.0
          },
          "last_login_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "id",
          "date_recorded",
          "week_start",
          "month_start"
        ],
        "title": "UserAnalyticsPublic"
      },
      "UserBanCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "title": "Reason"
          },
          "ban_type": {
            "type": "string",
            "title": "Ban Type",
            "default": "temporary"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Hours"
          },
          "appeal_allowed": {
            "type": "boolean",
            "title": "Appeal Allowed",
            "default": true
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reason"
        ],
        "title": "UserBanCreate"
      },
      "UserBanPublic": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "title": "Reason"
          },
          "ban_type": {
            "type": "string",
            "title": "Ban Type",
            "default": "temporary"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Hours"
          },
          "appeal_allowed": {
            "type": "boolean",
            "title": "Appeal Allowed",
            "default": true
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "banned_by": {
            "type": "string",
            "format": "uuid",
            "title": "Banned By"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reason",
          "id",
          "banned_by",
          "is_active",
          "created_at"
        ],
        "title": "UserBanPublic"
      },
      "UserBlockResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "blocker_id": {
            "type": "string",
            "format": "uuid",
            "title": "Blocker Id"
          },
          "blocked_id": {
            "type": "string",
            "format": "uuid",
            "title": "Blocked Id"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "blocked_at": {
            "type": "string",
            "format": "date-time",
            "title": "Blocked At"
          },
          "blocked_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked Username"
          },
          "blocked_full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked Full Name"
          },
          "blocked_profile_image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked Profile Image"
          }
        },
        "type": "object",
        "required": [
          "id",
          "blocker_id",
          "blocked_id",
          "blocked_at"
        ],
        "title": "UserBlockResponse",
        "description": "Schema for user block response"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 100,
            "format": "email",
            "title": "Email",
            "index": true,
            "unique": true
          },
          "username": {
            "type": "string",
            "maxLength": 50,
            "title": "Username",
            "index": true,
            "unique": true
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "account_type": {
            "$ref": "#/components/schemas/AccountType",
            "default": "personal"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "default": false
          },
          "is_professional_account": {
            "type": "boolean",
            "title": "Is Professional Account",
            "default": false
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_journalist": {
            "type": "boolean",
            "title": "Is Journalist",
            "default": false
          },
          "is_organization": {
            "type": "boolean",
            "title": "Is Organization",
            "default": false
          },
          "password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Password"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "password"
        ],
        "title": "UserCreate",
        "description": "Schema for creating a new user"
      },
      "UserPrivate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "maxLength": 50,
            "title": "Username",
            "index": true,
            "unique": true
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "account_type": {
            "$ref": "#/components/schemas/AccountType",
            "default": "personal"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "default": false
          },
          "is_professional_account": {
            "type": "boolean",
            "title": "Is Professional Account",
            "default": false
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_journalist": {
            "type": "boolean",
            "title": "Is Journalist"
          },
          "is_organization": {
            "type": "boolean",
            "title": "Is Organization"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "follower_count": {
            "type": "integer",
            "title": "Follower Count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "default": 0
          },
          "post_count": {
            "type": "integer",
            "title": "Post Count",
            "default": 0
          },
          "last_active": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "is_journalist",
          "is_organization",
          "id",
          "created_at"
        ],
        "title": "UserPrivate",
        "description": "Schema for user's own profile (includes private fields)"
      },
      "UserProfilePublic": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 100,
            "format": "email",
            "title": "Email",
            "index": true,
            "unique": true
          },
          "username": {
            "type": "string",
            "maxLength": 50,
            "title": "Username",
            "index": true,
            "unique": true
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "account_type": {
            "$ref": "#/components/schemas/AccountType",
            "default": "personal"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "default": false
          },
          "is_professional_account": {
            "type": "boolean",
            "title": "Is Professional Account",
            "default": false
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_journalist": {
            "type": "boolean",
            "title": "Is Journalist",
            "default": false
          },
          "is_organization": {
            "type": "boolean",
            "title": "Is Organization",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "follower_count": {
            "type": "integer",
            "title": "Follower Count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "default": 0
          },
          "post_count": {
            "type": "integer",
            "title": "Post Count",
            "default": 0
          },
          "last_active": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "is_following": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Following"
          },
          "mutual_followers_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mutual Followers Count"
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "id",
          "created_at"
        ],
        "title": "UserProfilePublic",
        "description": "Extended schema for user profile page"
      },
      "UserPublic": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 100,
            "format": "email",
            "title": "Email",
            "index": true,
            "unique": true
          },
          "username": {
            "type": "string",
            "maxLength": 50,
            "title": "Username",
            "index": true,
            "unique": true
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "account_type": {
            "$ref": "#/components/schemas/AccountType",
            "default": "personal"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "default": false
          },
          "is_professional_account": {
            "type": "boolean",
            "title": "Is Professional Account",
            "default": false
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_journalist": {
            "type": "boolean",
            "title": "Is Journalist",
            "default": false
          },
          "is_organization": {
            "type": "boolean",
            "title": "Is Organization",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "follower_count": {
            "type": "integer",
            "title": "Follower Count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "default": 0
          },
          "post_count": {
            "type": "integer",
            "title": "Post Count",
            "default": 0
          },
          "last_active": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "id",
          "created_at"
        ],
        "title": "UserPublic",
        "description": "Schema for public user information"
      },
      "UserRegister": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 100,
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "maxLength": 50,
            "title": "Username"
          },
          "password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Password"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "password"
        ],
        "title": "UserRegister",
        "description": "Schema for user registration (simplified)"
      },
      "UserStats": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "follower_count": {
            "type": "integer",
            "title": "Follower Count"
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count"
          },
          "post_count": {
            "type": "integer",
            "title": "Post Count"
          },
          "story_count": {
            "type": "integer",
            "title": "Story Count"
          },
          "reel_count": {
            "type": "integer",
            "title": "Reel Count"
          },
          "total_likes_received": {
            "type": "integer",
            "title": "Total Likes Received"
          },
          "total_comments_received": {
            "type": "integer",
            "title": "Total Comments Received"
          },
          "engagement_rate": {
            "type": "number",
            "title": "Engagement Rate"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "follower_count",
          "following_count",
          "post_count",
          "story_count",
          "reel_count",
          "total_likes_received",
          "total_comments_received",
          "engagement_rate"
        ],
        "title": "UserStats",
        "description": "Schema for user statistics"
      },
      "UserStrikeCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "title": "Reason"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "default": "medium"
          },
          "strike_count": {
            "type": "integer",
            "title": "Strike Count",
            "default": 1
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reason"
        ],
        "title": "UserStrikeCreate"
      },
      "UserStrikePublic": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "title": "Reason"
          },
          "severity": {
            "type": "string",
            "title": "Severity",
            "default": "medium"
          },
          "strike_count": {
            "type": "integer",
            "title": "Strike Count",
            "default": 1
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "issued_by": {
            "type": "string",
            "format": "uuid",
            "title": "Issued By"
          },
          "total_strikes": {
            "type": "integer",
            "title": "Total Strikes"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reason",
          "id",
          "issued_by",
          "total_strikes",
          "is_active",
          "created_at"
        ],
        "title": "UserStrikePublic"
      },
      "UserSubscriptionPublic": {
        "properties": {
          "tier_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tier Id"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "active"
          },
          "cancel_at_period_end": {
            "type": "boolean",
            "title": "Cancel At Period End",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "current_period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Current Period Start"
          },
          "current_period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Current Period End"
          },
          "cancelled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancelled At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubscriptionTierPublic"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "tier_id",
          "id",
          "user_id",
          "current_period_start",
          "current_period_end",
          "created_at",
          "updated_at"
        ],
        "title": "UserSubscriptionPublic"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "account_type": {
            "$ref": "#/components/schemas/AccountType",
            "default": "personal"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "default": false
          },
          "is_professional_account": {
            "type": "boolean",
            "title": "Is Professional Account",
            "default": false
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_journalist": {
            "type": "boolean",
            "title": "Is Journalist",
            "default": false
          },
          "is_organization": {
            "type": "boolean",
            "title": "Is Organization",
            "default": false
          },
          "password": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "Schema for updating user information"
      },
      "UserUpdateMe": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Url"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "account_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_private": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Private"
          },
          "is_professional_account": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Professional Account"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          }
        },
        "type": "object",
        "title": "UserUpdateMe",
        "description": "Schema for users to update their own profile"
      },
      "UsersPublic": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserPublic"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "UsersPublic",
        "description": "Schema for public users list response"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerificationAppealRequest": {
        "properties": {
          "appeal_reason": {
            "type": "string",
            "maxLength": 1000,
            "title": "Appeal Reason",
            "description": "Reason for appealing the rejection"
          },
          "additional_documents": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Additional Documents",
            "description": "Additional documents to support appeal",
            "default": []
          },
          "updated_information": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated Information",
            "description": "Updated information for the request"
          }
        },
        "type": "object",
        "required": [
          "appeal_reason"
        ],
        "title": "VerificationAppealRequest",
        "description": "Schema for appealing a rejected verification"
      },
      "VerificationBadgeResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "verification_request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Verification Request Id"
          },
          "badge_type": {
            "type": "string",
            "title": "Badge Type"
          },
          "badge_name": {
            "type": "string",
            "title": "Badge Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "issued_at": {
            "type": "string",
            "format": "date-time",
            "title": "Issued At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "verification_request_id",
          "badge_type",
          "badge_name",
          "issued_at",
          "is_active"
        ],
        "title": "VerificationBadgeResponse",
        "description": "Schema for verification badge response"
      },
      "VerificationBadgesList": {
        "properties": {
          "badges": {
            "items": {
              "$ref": "#/components/schemas/VerificationBadgeResponse"
            },
            "type": "array",
            "title": "Badges"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "badges",
          "total"
        ],
        "title": "VerificationBadgesList",
        "description": "Schema for verification badges list"
      },
      "VerificationRequest": {
        "properties": {
          "full_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Full Name"
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "title": "Category"
          },
          "identification_document_url": {
            "type": "string",
            "maxLength": 500,
            "title": "Identification Document Url"
          },
          "articles_of_incorporation_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Articles Of Incorporation Url"
          },
          "official_website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Official Website Url"
          },
          "social_media_links": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Social Media Links"
          }
        },
        "type": "object",
        "required": [
          "full_name",
          "category",
          "identification_document_url"
        ],
        "title": "VerificationRequest",
        "description": "Schema for account verification requests"
      },
      "VerificationRequestCreate": {
        "properties": {
          "verification_type": {
            "type": "string",
            "title": "Verification Type",
            "description": "Type of verification: journalist, organization, business"
          },
          "full_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Full Name"
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "title": "Category",
            "description": "Category like Politics, Technology, Sports"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "contact_email": {
            "type": "string",
            "maxLength": 100,
            "title": "Contact Email"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "identification_document_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Identification Document Url"
          },
          "articles_of_incorporation_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Articles Of Incorporation Url"
          },
          "official_website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Official Website Url"
          },
          "social_media_links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Social Media Links",
            "default": []
          },
          "additional_documents": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Additional Documents",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "verification_type",
          "full_name",
          "category",
          "contact_email"
        ],
        "title": "VerificationRequestCreate",
        "description": "Schema for creating a verification request"
      },
      "VerificationRequestResponse": {
        "properties": {
          "verification_type": {
            "type": "string",
            "title": "Verification Type",
            "description": "Type of verification: journalist, organization, business"
          },
          "full_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Full Name"
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "title": "Category",
            "description": "Category like Politics, Technology, Sports"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "contact_email": {
            "type": "string",
            "maxLength": 100,
            "title": "Contact Email"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "identification_document_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Identification Document Url"
          },
          "articles_of_incorporation_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Articles Of Incorporation Url"
          },
          "official_website_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Official Website Url"
          },
          "social_media_links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Social Media Links",
            "default": []
          },
          "additional_documents": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Additional Documents",
            "default": []
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Submitted At"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          },
          "reviewed_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed By"
          },
          "review_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Notes"
          },
          "rejection_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rejection Reason"
          },
          "badge_issued_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Badge Issued At"
          },
          "badge_expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Badge Expires At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "verification_type",
          "full_name",
          "category",
          "contact_email",
          "id",
          "user_id",
          "status",
          "submitted_at",
          "created_at"
        ],
        "title": "VerificationRequestResponse",
        "description": "Schema for verification request response"
      },
      "VerificationRequestsList": {
        "properties": {
          "requests": {
            "items": {
              "$ref": "#/components/schemas/VerificationRequestResponse"
            },
            "type": "array",
            "title": "Requests"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "requests",
          "total",
          "page",
          "per_page",
          "has_next",
          "has_prev"
        ],
        "title": "VerificationRequestsList",
        "description": "Schema for verification requests list"
      },
      "VerificationReviewRequest": {
        "properties": {
          "action": {
            "type": "string",
            "title": "Action",
            "description": "Action: approve, reject"
          },
          "review_notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Notes"
          },
          "rejection_reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Rejection Reason",
            "description": "Required if action is reject"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "VerificationReviewRequest",
        "description": "Schema for admin to review verification requests"
      },
      "VideoCompressRequest": {
        "properties": {
          "target_bitrate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Bitrate",
            "description": "Target bitrate (e.g., '2M', '5M')"
          },
          "target_resolution": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Resolution",
            "description": "Target resolution (e.g., '1920x1080', '1280x720')"
          },
          "preset": {
            "type": "string",
            "title": "Preset",
            "description": "Compression preset: ultrafast, fast, medium, slow, veryslow",
            "default": "medium"
          }
        },
        "type": "object",
        "title": "VideoCompressRequest"
      },
      "VideoTrimRequest": {
        "properties": {
          "start_time": {
            "type": "number",
            "minimum": 0.0,
            "title": "Start Time",
            "description": "Start time in seconds"
          },
          "end_time": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "End Time",
            "description": "End time in seconds"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "VideoTrimRequest"
      },
      "ViewerRole": {
        "type": "string",
        "enum": [
          "viewer",
          "moderator",
          "host"
        ],
        "title": "ViewerRole"
      },
      "WeatherDataPublic": {
        "properties": {
          "location": {
            "type": "string",
            "maxLength": 200,
            "title": "Location"
          },
          "temperature_celsius": {
            "type": "string",
            "title": "Temperature Celsius"
          },
          "temperature_fahrenheit": {
            "type": "string",
            "title": "Temperature Fahrenheit"
          },
          "humidity_percent": {
            "type": "integer",
            "title": "Humidity Percent"
          },
          "wind_speed_kmh": {
            "type": "string",
            "title": "Wind Speed Kmh"
          },
          "wind_speed_mph": {
            "type": "string",
            "title": "Wind Speed Mph"
          },
          "condition": {
            "type": "string",
            "maxLength": 100,
            "title": "Condition"
          },
          "icon_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Url"
          },
          "forecast_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Forecast Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "fetched_at": {
            "type": "string",
            "format": "date-time",
            "title": "Fetched At"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "location",
          "temperature_celsius",
          "temperature_fahrenheit",
          "humidity_percent",
          "wind_speed_kmh",
          "wind_speed_mph",
          "condition",
          "id",
          "integration_id",
          "fetched_at",
          "expires_at"
        ],
        "title": "WeatherDataPublic"
      },
      "WeatherRequest": {
        "properties": {
          "location": {
            "type": "string",
            "title": "Location"
          },
          "include_forecast": {
            "type": "boolean",
            "title": "Include Forecast",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "location"
        ],
        "title": "WeatherRequest"
      },
      "WeatherResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WeatherDataPublic"
              },
              {
                "type": "null"
              }
            ]
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "WeatherResponse"
      },
      "WebhookCreate": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 500,
            "title": "Url"
          },
          "events": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Events"
          },
          "secret": {
            "type": "string",
            "maxLength": 255,
            "title": "Secret"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "default": 3
          },
          "timeout_seconds": {
            "type": "integer",
            "title": "Timeout Seconds",
            "default": 30
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          }
        },
        "type": "object",
        "required": [
          "url",
          "secret",
          "integration_id"
        ],
        "title": "WebhookCreate"
      },
      "WebhookDeliveryPublic": {
        "properties": {
          "event": {
            "type": "string",
            "maxLength": 100,
            "title": "Event"
          },
          "payload": {
            "additionalProperties": true,
            "type": "object",
            "title": "Payload"
          },
          "response_status": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Status"
          },
          "response_body": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Body"
          },
          "attempt_count": {
            "type": "integer",
            "title": "Attempt Count",
            "default": 1
          },
          "delivered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivered At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "webhook_id": {
            "type": "string",
            "format": "uuid",
            "title": "Webhook Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "event",
          "id",
          "webhook_id",
          "created_at"
        ],
        "title": "WebhookDeliveryPublic"
      },
      "WebhookPublic": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 500,
            "title": "Url"
          },
          "events": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Events"
          },
          "secret": {
            "type": "string",
            "maxLength": 255,
            "title": "Secret"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "default": 3
          },
          "timeout_seconds": {
            "type": "integer",
            "title": "Timeout Seconds",
            "default": 30
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "last_triggered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Triggered At"
          },
          "failure_count": {
            "type": "integer",
            "title": "Failure Count"
          },
          "success_count": {
            "type": "integer",
            "title": "Success Count"
          }
        },
        "type": "object",
        "required": [
          "url",
          "secret",
          "id",
          "integration_id",
          "created_at",
          "updated_at",
          "failure_count",
          "success_count"
        ],
        "title": "WebhookPublic"
      },
      "WebhookStatsResponse": {
        "properties": {
          "total_webhooks": {
            "type": "integer",
            "title": "Total Webhooks"
          },
          "active_webhooks": {
            "type": "integer",
            "title": "Active Webhooks"
          },
          "total_deliveries": {
            "type": "integer",
            "title": "Total Deliveries"
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate"
          },
          "recent_deliveries": {
            "items": {
              "$ref": "#/components/schemas/WebhookDeliveryPublic"
            },
            "type": "array",
            "title": "Recent Deliveries"
          }
        },
        "type": "object",
        "required": [
          "total_webhooks",
          "active_webhooks",
          "total_deliveries",
          "success_rate",
          "recent_deliveries"
        ],
        "title": "WebhookStatsResponse"
      },
      "WebhookTriggerRequest": {
        "properties": {
          "event": {
            "type": "string",
            "title": "Event"
          },
          "payload": {
            "additionalProperties": true,
            "type": "object",
            "title": "Payload"
          }
        },
        "type": "object",
        "required": [
          "event",
          "payload"
        ],
        "title": "WebhookTriggerRequest"
      },
      "WebhookTriggerResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "webhook_id": {
            "type": "string",
            "format": "uuid",
            "title": "Webhook Id"
          },
          "delivery_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "webhook_id",
          "message"
        ],
        "title": "WebhookTriggerResponse"
      },
      "WebhookUpdate": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "secret": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "retry_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retry Count"
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          }
        },
        "type": "object",
        "title": "WebhookUpdate"
      },
      "app__modules__search__schema__search__TrendingTopicPublic": {
        "properties": {
          "topic": {
            "type": "string",
            "maxLength": 100,
            "title": "Topic",
            "description": "The trending topic or hashtag"
          },
          "topic_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Topic Type",
            "description": "Type of topic (hashtag, keyword, etc.)"
          },
          "search_count": {
            "type": "integer",
            "title": "Search Count",
            "description": "Number of searches for this topic",
            "default": 0
          },
          "post_count": {
            "type": "integer",
            "title": "Post Count",
            "description": "Number of posts containing this topic",
            "default": 0
          },
          "score": {
            "type": "number",
            "title": "Score",
            "description": "Trending score based on recency and volume",
            "default": 0.0
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Location",
            "description": "Geographic location if location-specific"
          },
          "language": {
            "type": "string",
            "maxLength": 10,
            "title": "Language",
            "description": "Language of the topic",
            "default": "en"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "last_calculated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Calculated"
          }
        },
        "type": "object",
        "required": [
          "topic",
          "topic_type",
          "id",
          "created_at",
          "updated_at",
          "last_calculated"
        ],
        "title": "TrendingTopicPublic"
      },
      "app__modules__search__schema__trending__TrendingTopicPublic": {
        "properties": {
          "topic": {
            "type": "string",
            "maxLength": 200,
            "title": "Topic",
            "description": "The trending topic or hashtag"
          },
          "topic_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Topic Type",
            "description": "Type of topic (hashtag, keyword, etc.)"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Category (news, sports, etc.)"
          },
          "search_count": {
            "type": "integer",
            "title": "Search Count",
            "description": "Number of searches for this topic",
            "default": 0
          },
          "post_count": {
            "type": "integer",
            "title": "Post Count",
            "description": "Number of posts containing this topic",
            "default": 0
          },
          "user_count": {
            "type": "integer",
            "title": "User Count",
            "description": "Number of users mentioning this topic",
            "default": 0
          },
          "engagement_score": {
            "type": "number",
            "title": "Engagement Score",
            "description": "Overall engagement score",
            "default": 0.0
          },
          "rank": {
            "type": "integer",
            "title": "Rank",
            "description": "Current ranking position",
            "default": 0
          },
          "velocity": {
            "type": "number",
            "title": "Velocity",
            "description": "Rate of growth",
            "default": 0.0
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code",
            "description": "Country code"
          },
          "region": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "Geographic region"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "first_seen": {
            "type": "string",
            "format": "date-time",
            "title": "First Seen"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "topic",
          "topic_type",
          "id",
          "first_seen",
          "last_updated",
          "expires_at"
        ],
        "title": "TrendingTopicPublic"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/login/access-token"
          }
        }
      }
    }
  }
}