"""initial

Revision ID: d9b2e3b5bc3e
Revises: 
Create Date: 2025-09-26 14:58:37.174400

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'd9b2e3b5bc3e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aimodelmetrics',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('model_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('model_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('metric_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('metric_value', sa.Numeric(precision=8, scale=6), nullable=False),
    sa.Column('dataset_size', sa.Integer(), nullable=True),
    sa.Column('evaluation_date', sa.DateTime(), nullable=False),
    sa.Column('is_baseline', sa.Boolean(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('anomalydetection',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('target_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('target_id', sa.Uuid(), nullable=False),
    sa.Column('anomaly_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('anomaly_score', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('threshold_breached', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('detection_method', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('is_investigated', sa.Boolean(), nullable=False),
    sa.Column('investigation_result', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('false_positive', sa.Boolean(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_anomalydetection_target_id'), 'anomalydetection', ['target_id'], unique=False)
    op.create_table('category',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('color_hex', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=True),
    sa.Column('icon_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('parent_id', sa.Uuid(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('meta_title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('meta_description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('news_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=False)
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=True)
    op.create_index(op.f('ix_category_slug'), 'category', ['slug'], unique=True)
    op.create_table('contentanalysis',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('analysis_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('analysis_result', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('model_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contentanalysis_content_id'), 'contentanalysis', ['content_id'], unique=False)
    op.create_table('contentanalytics',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('views', sa.Integer(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('comments', sa.Integer(), nullable=False),
    sa.Column('shares', sa.Integer(), nullable=False),
    sa.Column('bookmarks', sa.Integer(), nullable=False),
    sa.Column('engagement_rate', sa.Float(), nullable=False),
    sa.Column('click_through_rate', sa.Float(), nullable=False),
    sa.Column('average_view_duration', sa.Integer(), nullable=False),
    sa.Column('video_completion_rate', sa.Float(), nullable=True),
    sa.Column('story_completion_rate', sa.Float(), nullable=True),
    sa.Column('live_viewer_peak', sa.Integer(), nullable=True),
    sa.Column('live_duration', sa.Integer(), nullable=True),
    sa.Column('viewer_locations', sa.JSON(), nullable=True),
    sa.Column('device_types', sa.JSON(), nullable=True),
    sa.Column('platforms', sa.JSON(), nullable=True),
    sa.Column('hourly_views', sa.JSON(), nullable=True),
    sa.Column('daily_views', sa.JSON(), nullable=True),
    sa.Column('performance_score', sa.Float(), nullable=False),
    sa.Column('date_recorded', sa.DateTime(), nullable=False),
    sa.Column('content_created_at', sa.DateTime(), nullable=False),
    sa.Column('metadata_', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contentanalytics_author_id'), 'contentanalytics', ['author_id'], unique=False)
    op.create_index(op.f('ix_contentanalytics_content_created_at'), 'contentanalytics', ['content_created_at'], unique=False)
    op.create_index(op.f('ix_contentanalytics_content_id'), 'contentanalytics', ['content_id'], unique=False)
    op.create_index(op.f('ix_contentanalytics_content_type'), 'contentanalytics', ['content_type'], unique=False)
    op.create_index(op.f('ix_contentanalytics_date_recorded'), 'contentanalytics', ['date_recorded'], unique=False)
    op.create_index(op.f('ix_contentanalytics_id'), 'contentanalytics', ['id'], unique=False)
    op.create_table('contentclassification',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('subcategory', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('confidence_score', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('sentiment_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('toxicity_score', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('model_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contentclassification_content_id'), 'contentclassification', ['content_id'], unique=False)
    op.create_table('effect',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('type', sa.Enum('filter', 'transition', 'text', 'sticker', 'green_screen', 'speed', 'audio', name='effecttype'), nullable=False),
    sa.Column('category', sa.Enum('visual', 'audio', 'text', 'transition', name='effectcategory'), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('preview_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('use_count', sa.Integer(), nullable=False),
    sa.Column('is_premium', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_effect_id'), 'effect', ['id'], unique=False)
    op.create_index(op.f('ix_effect_name'), 'effect', ['name'], unique=False)
    op.create_table('engagementprediction',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('predicted_views', sa.Integer(), nullable=True),
    sa.Column('predicted_likes', sa.Integer(), nullable=True),
    sa.Column('predicted_shares', sa.Integer(), nullable=True),
    sa.Column('predicted_comments', sa.Integer(), nullable=True),
    sa.Column('viral_probability', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('engagement_score', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('model_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('prediction_accuracy', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_engagementprediction_content_id'), 'engagementprediction', ['content_id'], unique=False)
    op.create_table('integration',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('integration_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('provider', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('credentials', sa.JSON(), nullable=True),
    sa.Column('rate_limits', sa.JSON(), nullable=True),
    sa.Column('integration_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mediafile',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('original_filename', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('file_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('media_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('file_format', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('processing_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('quality', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('compression_level', sa.Integer(), nullable=True),
    sa.Column('thumbnail_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('variants', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('metadata_', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mediafile_created_at'), 'mediafile', ['created_at'], unique=False)
    op.create_index(op.f('ix_mediafile_filename'), 'mediafile', ['filename'], unique=False)
    op.create_index(op.f('ix_mediafile_id'), 'mediafile', ['id'], unique=False)
    op.create_index(op.f('ix_mediafile_media_type'), 'mediafile', ['media_type'], unique=False)
    op.create_index(op.f('ix_mediafile_user_id'), 'mediafile', ['user_id'], unique=False)
    op.create_table('mediastorage',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('storage_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('bucket_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('region', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('endpoint_url', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('total_files', sa.Integer(), nullable=False),
    sa.Column('total_size_bytes', sa.Integer(), nullable=False),
    sa.Column('monthly_usage_bytes', sa.Integer(), nullable=False),
    sa.Column('max_file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('max_total_size_bytes', sa.Integer(), nullable=True),
    sa.Column('allowed_formats', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mediastorage_id'), 'mediastorage', ['id'], unique=False)
    op.create_table('moderationrule',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('severity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('auto_action', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('requires_review', sa.Boolean(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('music',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('artist', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('album', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('genre', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('audio_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('use_count', sa.Integer(), nullable=False),
    sa.Column('trending_score', sa.Float(), nullable=False),
    sa.Column('is_licensed', sa.Boolean(), nullable=False),
    sa.Column('license_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('attribution_required', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_music_artist'), 'music', ['artist'], unique=False)
    op.create_index(op.f('ix_music_id'), 'music', ['id'], unique=False)
    op.create_index(op.f('ix_music_title'), 'music', ['title'], unique=False)
    op.create_table('platformanalytics',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('total_users', sa.Integer(), nullable=False),
    sa.Column('active_users_daily', sa.Integer(), nullable=False),
    sa.Column('active_users_weekly', sa.Integer(), nullable=False),
    sa.Column('active_users_monthly', sa.Integer(), nullable=False),
    sa.Column('total_posts', sa.Integer(), nullable=False),
    sa.Column('total_stories', sa.Integer(), nullable=False),
    sa.Column('total_reels', sa.Integer(), nullable=False),
    sa.Column('total_news_articles', sa.Integer(), nullable=False),
    sa.Column('total_live_streams', sa.Integer(), nullable=False),
    sa.Column('total_likes', sa.Integer(), nullable=False),
    sa.Column('total_comments', sa.Integer(), nullable=False),
    sa.Column('total_shares', sa.Integer(), nullable=False),
    sa.Column('total_bookmarks', sa.Integer(), nullable=False),
    sa.Column('top_countries', sa.JSON(), nullable=True),
    sa.Column('top_cities', sa.JSON(), nullable=True),
    sa.Column('device_breakdown', sa.JSON(), nullable=True),
    sa.Column('platform_breakdown', sa.JSON(), nullable=True),
    sa.Column('total_revenue', sa.Float(), nullable=False),
    sa.Column('subscription_revenue', sa.Float(), nullable=False),
    sa.Column('ad_revenue', sa.Float(), nullable=False),
    sa.Column('date_recorded', sa.DateTime(), nullable=False),
    sa.Column('week_start', sa.DateTime(), nullable=False),
    sa.Column('month_start', sa.DateTime(), nullable=False),
    sa.Column('metadata_', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_platformanalytics_date_recorded'), 'platformanalytics', ['date_recorded'], unique=False)
    op.create_index(op.f('ix_platformanalytics_id'), 'platformanalytics', ['id'], unique=False)
    op.create_index(op.f('ix_platformanalytics_month_start'), 'platformanalytics', ['month_start'], unique=False)
    op.create_index(op.f('ix_platformanalytics_week_start'), 'platformanalytics', ['week_start'], unique=False)
    op.create_table('premiumfeature',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sa.Numeric(precision=8, scale=2), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('feature_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('translationcache',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('source_language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('target_language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('translated_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('translation_quality', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('translation_service', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_translationcache_content_id'), 'translationcache', ['content_id'], unique=False)
    op.create_table('trendanalysis',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('trend_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('trend_value', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('trend_score', sa.Numeric(precision=8, scale=4), nullable=False),
    sa.Column('growth_rate', sa.Numeric(precision=6, scale=4), nullable=False),
    sa.Column('prediction_score', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('time_window', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('region', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('is_viral', sa.Boolean(), nullable=False),
    sa.Column('peak_time', sa.DateTime(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trendingtopic',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('topic', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('topic_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('search_count', sa.Integer(), nullable=False),
    sa.Column('post_count', sa.Integer(), nullable=False),
    sa.Column('user_count', sa.Integer(), nullable=False),
    sa.Column('engagement_score', sa.Float(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('velocity', sa.Float(), nullable=False),
    sa.Column('peak_time', sa.DateTime(), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('region', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('metadata_', sa.JSON(), nullable=True),
    sa.Column('first_seen', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trendingtopic_id'), 'trendingtopic', ['id'], unique=False)
    op.create_index(op.f('ix_trendingtopic_last_updated'), 'trendingtopic', ['last_updated'], unique=False)
    op.create_index(op.f('ix_trendingtopic_topic'), 'trendingtopic', ['topic'], unique=True)
    op.create_table('user',
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('profile_image_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('website_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('account_type', sa.Enum('personal', 'business', 'journalist', 'organization', name='accounttype'), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('is_professional_account', sa.Boolean(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('is_journalist', sa.Boolean(), nullable=False),
    sa.Column('is_organization', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'other', 'prefer_not_to_say', name='gender'), nullable=True),
    sa.Column('follower_count', sa.Integer(), nullable=False),
    sa.Column('following_count', sa.Integer(), nullable=False),
    sa.Column('post_count', sa.Integer(), nullable=False),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('useranalytics',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('profile_views', sa.Integer(), nullable=False),
    sa.Column('follower_count', sa.Integer(), nullable=False),
    sa.Column('following_count', sa.Integer(), nullable=False),
    sa.Column('total_posts', sa.Integer(), nullable=False),
    sa.Column('total_likes_received', sa.Integer(), nullable=False),
    sa.Column('total_comments_received', sa.Integer(), nullable=False),
    sa.Column('total_shares_received', sa.Integer(), nullable=False),
    sa.Column('total_bookmarks_received', sa.Integer(), nullable=False),
    sa.Column('avg_engagement_rate', sa.Float(), nullable=False),
    sa.Column('top_performing_post_id', sa.Uuid(), nullable=True),
    sa.Column('top_performing_score', sa.Float(), nullable=False),
    sa.Column('login_count', sa.Integer(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('session_duration_avg', sa.Integer(), nullable=False),
    sa.Column('audience_locations', sa.JSON(), nullable=True),
    sa.Column('audience_age_groups', sa.JSON(), nullable=True),
    sa.Column('audience_genders', sa.JSON(), nullable=True),
    sa.Column('total_earnings', sa.Float(), nullable=False),
    sa.Column('subscription_count', sa.Integer(), nullable=False),
    sa.Column('date_recorded', sa.DateTime(), nullable=False),
    sa.Column('week_start', sa.DateTime(), nullable=False),
    sa.Column('month_start', sa.DateTime(), nullable=False),
    sa.Column('metadata_', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_useranalytics_date_recorded'), 'useranalytics', ['date_recorded'], unique=False)
    op.create_index(op.f('ix_useranalytics_id'), 'useranalytics', ['id'], unique=False)
    op.create_index(op.f('ix_useranalytics_month_start'), 'useranalytics', ['month_start'], unique=False)
    op.create_index(op.f('ix_useranalytics_user_id'), 'useranalytics', ['user_id'], unique=False)
    op.create_index(op.f('ix_useranalytics_week_start'), 'useranalytics', ['week_start'], unique=False)
    op.create_table('adcampaign',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('advertiser_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('budget', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('spent', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_audience', sa.JSON(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('conversions', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['advertiser_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_adcampaign_advertiser_id'), 'adcampaign', ['advertiser_id'], unique=False)
    op.create_table('apikey',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('key_hash', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('rate_limit', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key_hash')
    )
    op.create_table('categoryfollow',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'category_id')
    )
    op.create_table('churnprediction',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('churn_probability', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('churn_risk_level', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('predicted_churn_date', sa.DateTime(), nullable=True),
    sa.Column('retention_recommendations', sa.JSON(), nullable=True),
    sa.Column('model_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('is_action_taken', sa.Boolean(), nullable=False),
    sa.Column('action_result', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_churnprediction_user_id'), 'churnprediction', ['user_id'], unique=False)
    op.create_table('contentflag',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('flag_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('confidence_score', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('detected_text', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('flagged_by', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resolved_by', sa.Uuid(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['resolved_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contentflag_content_id'), 'contentflag', ['content_id'], unique=False)
    op.create_table('contentrecommendation',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('recommendation_score', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('recommendation_reason', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('algorithm_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('is_viewed', sa.Boolean(), nullable=False),
    sa.Column('is_clicked', sa.Boolean(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contentrecommendation_content_id'), 'contentrecommendation', ['content_id'], unique=False)
    op.create_index(op.f('ix_contentrecommendation_user_id'), 'contentrecommendation', ['user_id'], unique=False)
    op.create_table('contentreport',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('reporter_id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('severity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reviewed_by', sa.Uuid(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('resolution', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reporter_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contentreport_content_id'), 'contentreport', ['content_id'], unique=False)
    op.create_index(op.f('ix_contentreport_reporter_id'), 'contentreport', ['reporter_id'], unique=False)
    op.create_table('conversation',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('creator_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('type', sa.Enum('direct', 'group', 'channel', name='conversationtype'), nullable=False),
    sa.Column('is_group', sa.Boolean(), nullable=False),
    sa.Column('is_encrypted', sa.Boolean(), nullable=False),
    sa.Column('allow_reactions', sa.Boolean(), nullable=False),
    sa.Column('allow_voice_messages', sa.Boolean(), nullable=False),
    sa.Column('allow_video_messages', sa.Boolean(), nullable=False),
    sa.Column('allow_file_sharing', sa.Boolean(), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('only_admins_can_add', sa.Boolean(), nullable=False),
    sa.Column('only_admins_can_send', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('active', 'archived', 'deleted', name='conversationstatus'), nullable=False),
    sa.Column('last_message_at', sa.DateTime(), nullable=True),
    sa.Column('last_message_preview', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('message_count', sa.Integer(), nullable=False),
    sa.Column('participant_count', sa.Integer(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_creator_id'), 'conversation', ['creator_id'], unique=False)
    op.create_index(op.f('ix_conversation_id'), 'conversation', ['id'], unique=False)
    op.create_index(op.f('ix_conversation_last_message_at'), 'conversation', ['last_message_at'], unique=False)
    op.create_index(op.f('ix_conversation_title'), 'conversation', ['title'], unique=False)
    op.create_table('creatorpayout',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('creator_id', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payout_method', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('payout_id', sa.Uuid(), nullable=False),
    sa.Column('fee', sa.Numeric(precision=8, scale=2), nullable=False),
    sa.Column('net_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_creatorpayout_creator_id'), 'creatorpayout', ['creator_id'], unique=False)
    op.create_index(op.f('ix_creatorpayout_payout_id'), 'creatorpayout', ['payout_id'], unique=True)
    op.create_table('device',
    sa.Column('device_token', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('device_type', sa.Enum('ios', 'android', 'web', 'desktop', name='devicetype'), nullable=True),
    sa.Column('device_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('device_model', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('os_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('app_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'blocked', name='devicestatus'), nullable=True),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('push_enabled', sa.Boolean(), nullable=False),
    sa.Column('sound_enabled', sa.Boolean(), nullable=False),
    sa.Column('vibration_enabled', sa.Boolean(), nullable=False),
    sa.Column('badge_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('metadata_', sa.JSON(), nullable=True),
    sa.Column('last_active_at', sa.DateTime(), nullable=False),
    sa.Column('registered_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('push_service', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('push_service_id', sa.Uuid(), nullable=True),
    sa.Column('is_sandbox', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_device_token'), 'device', ['device_token'], unique=True)
    op.create_index(op.f('ix_device_registered_at'), 'device', ['registered_at'], unique=False)
    op.create_index(op.f('ix_device_user_id'), 'device', ['user_id'], unique=False)
    op.create_table('integrationnewssource',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('external_id', sa.Uuid(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('credibility_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.Column('article_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('integrationsynclog',
    sa.Column('operation', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('records_processed', sa.Integer(), nullable=False),
    sa.Column('records_failed', sa.Integer(), nullable=False),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('sync_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mediaanalytics',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('media_file_id', sa.Uuid(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('load_time_avg', sa.Float(), nullable=False),
    sa.Column('bandwidth_used', sa.Integer(), nullable=False),
    sa.Column('viewer_locations', sa.JSON(), nullable=True),
    sa.Column('device_types', sa.JSON(), nullable=True),
    sa.Column('platforms', sa.JSON(), nullable=True),
    sa.Column('date_recorded', sa.DateTime(), nullable=False),
    sa.Column('week_start', sa.DateTime(), nullable=False),
    sa.Column('month_start', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['media_file_id'], ['mediafile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mediaanalytics_date_recorded'), 'mediaanalytics', ['date_recorded'], unique=False)
    op.create_index(op.f('ix_mediaanalytics_id'), 'mediaanalytics', ['id'], unique=False)
    op.create_index(op.f('ix_mediaanalytics_media_file_id'), 'mediaanalytics', ['media_file_id'], unique=False)
    op.create_index(op.f('ix_mediaanalytics_month_start'), 'mediaanalytics', ['month_start'], unique=False)
    op.create_index(op.f('ix_mediaanalytics_week_start'), 'mediaanalytics', ['week_start'], unique=False)
    op.create_table('mediaprocessingjob',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('media_file_id', sa.Uuid(), nullable=False),
    sa.Column('job_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('job_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('queue_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['media_file_id'], ['mediafile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mediaprocessingjob_created_at'), 'mediaprocessingjob', ['created_at'], unique=False)
    op.create_index(op.f('ix_mediaprocessingjob_id'), 'mediaprocessingjob', ['id'], unique=False)
    op.create_index(op.f('ix_mediaprocessingjob_media_file_id'), 'mediaprocessingjob', ['media_file_id'], unique=False)
    op.create_table('moderationaction',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('moderator_id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('action_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('severity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration_hours', sa.Integer(), nullable=True),
    sa.Column('appeal_deadline', sa.DateTime(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['moderator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_moderationaction_content_id'), 'moderationaction', ['content_id'], unique=False)
    op.create_index(op.f('ix_moderationaction_moderator_id'), 'moderationaction', ['moderator_id'], unique=False)
    op.create_table('moderationlog',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('moderator_id', sa.Uuid(), nullable=True),
    sa.Column('action_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('target_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('target_id', sa.Uuid(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('old_value', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('new_value', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['moderator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_moderationlog_moderator_id'), 'moderationlog', ['moderator_id'], unique=False)
    op.create_index(op.f('ix_moderationlog_target_id'), 'moderationlog', ['target_id'], unique=False)
    op.create_table('newssource',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('website_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('rss_feed_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('contact_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('contact_phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('headquarters', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('logo_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('favicon_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('credibility_score', sa.Float(), nullable=True),
    sa.Column('reliability_score', sa.Float(), nullable=True),
    sa.Column('fact_checking_score', sa.Float(), nullable=True),
    sa.Column('political_leaning', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('bias_rating', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('factual_reporting', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('media_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_method', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('verified_by', sa.Uuid(), nullable=True),
    sa.Column('content_policies', sa.TEXT(), nullable=True),
    sa.Column('editorial_standards', sa.TEXT(), nullable=True),
    sa.Column('monthly_visitors', sa.Integer(), nullable=True),
    sa.Column('social_media_followers', sa.Integer(), nullable=True),
    sa.Column('api_endpoint', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('api_key_required', sa.Boolean(), nullable=False),
    sa.Column('api_rate_limit', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_publisher', sa.Boolean(), nullable=False),
    sa.Column('is_aggregator', sa.Boolean(), nullable=False),
    sa.Column('news_count', sa.Integer(), nullable=False),
    sa.Column('fact_check_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_scraped_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['verified_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_newssource_id'), 'newssource', ['id'], unique=False)
    op.create_index(op.f('ix_newssource_name'), 'newssource', ['name'], unique=False)
    op.create_index(op.f('ix_newssource_slug'), 'newssource', ['slug'], unique=True)
    op.create_table('notification',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('type', sa.Enum('like', 'comment', 'follow', 'mention', 'share', 'message', 'news_published', 'story_added', 'reel_published', 'live_stream_started', 'system', name='notificationtype'), nullable=True),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'urgent', name='notificationpriority'), nullable=True),
    sa.Column('status', sa.Enum('pending', 'sent', 'delivered', 'read', 'failed', name='notificationstatus'), nullable=True),
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('entity_id', sa.Uuid(), nullable=True),
    sa.Column('action_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('push_sent_at', sa.DateTime(), nullable=True),
    sa.Column('push_error', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('email_sent_at', sa.DateTime(), nullable=True),
    sa.Column('email_error', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('recipient_id', sa.Uuid(), nullable=False),
    sa.Column('sender_id', sa.Uuid(), nullable=True),
    sa.Column('metadata_', sa.JSON(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('clicked_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_created_at'), 'notification', ['created_at'], unique=False)
    op.create_index(op.f('ix_notification_id'), 'notification', ['id'], unique=False)
    op.create_index(op.f('ix_notification_recipient_id'), 'notification', ['recipient_id'], unique=False)
    op.create_index(op.f('ix_notification_sender_id'), 'notification', ['sender_id'], unique=False)
    op.create_table('notificationpreference',
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('push_notifications', sa.Boolean(), nullable=False),
    sa.Column('sms_notifications', sa.Boolean(), nullable=False),
    sa.Column('like_notifications', sa.Boolean(), nullable=False),
    sa.Column('comment_notifications', sa.Boolean(), nullable=False),
    sa.Column('follow_notifications', sa.Boolean(), nullable=False),
    sa.Column('mention_notifications', sa.Boolean(), nullable=False),
    sa.Column('share_notifications', sa.Boolean(), nullable=False),
    sa.Column('message_notifications', sa.Boolean(), nullable=False),
    sa.Column('news_notifications', sa.Boolean(), nullable=False),
    sa.Column('story_notifications', sa.Boolean(), nullable=False),
    sa.Column('reel_notifications', sa.Boolean(), nullable=False),
    sa.Column('live_stream_notifications', sa.Boolean(), nullable=False),
    sa.Column('digest_frequency', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('quiet_hours_start', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=True),
    sa.Column('quiet_hours_end', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=True),
    sa.Column('priority_threshold', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('group_similar', sa.Boolean(), nullable=False),
    sa.Column('show_preview', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('custom_preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notificationpreference_id'), 'notificationpreference', ['id'], unique=False)
    op.create_index(op.f('ix_notificationpreference_user_id'), 'notificationpreference', ['user_id'], unique=True)
    op.create_table('personalizedfeed',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('feed_algorithm', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_categories', sa.JSON(), nullable=True),
    sa.Column('preferred_sources', sa.JSON(), nullable=True),
    sa.Column('excluded_topics', sa.JSON(), nullable=True),
    sa.Column('language_preferences', sa.JSON(), nullable=True),
    sa.Column('time_preferences', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_personalizedfeed_user_id'), 'personalizedfeed', ['user_id'], unique=True)
    op.create_table('post',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('caption', sqlmodel.sql.sqltypes.AutoString(length=2200), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('post_type', sa.Enum('regular', 'story', 'reel', 'live', 'article', name='posttype'), nullable=False),
    sa.Column('status', sa.Enum('draft', 'published', 'archived', 'scheduled', name='poststatus'), nullable=False),
    sa.Column('visibility', sa.Enum('public', 'followers_only', 'close_friends', name='postvisibility'), nullable=False),
    sa.Column('media_urls', sa.JSON(), nullable=True),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('cover_image_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('location_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('comment_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('bookmark_count', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('facebook_shares', sa.Integer(), nullable=False),
    sa.Column('twitter_shares', sa.Integer(), nullable=False),
    sa.Column('linkedin_shares', sa.Integer(), nullable=False),
    sa.Column('whatsapp_shares', sa.Integer(), nullable=False),
    sa.Column('is_sensitive', sa.Boolean(), nullable=False),
    sa.Column('is_highlighted', sa.Boolean(), nullable=False),
    sa.Column('is_pinned', sa.Boolean(), nullable=False),
    sa.Column('is_breaking_news', sa.Boolean(), nullable=False),
    sa.Column('fact_check_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('last_interaction_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_created_at'), 'post', ['created_at'], unique=False)
    op.create_index(op.f('ix_post_id'), 'post', ['id'], unique=False)
    op.create_index(op.f('ix_post_last_interaction_at'), 'post', ['last_interaction_at'], unique=False)
    op.create_index(op.f('ix_post_post_type'), 'post', ['post_type'], unique=False)
    op.create_index(op.f('ix_post_published_at'), 'post', ['published_at'], unique=False)
    op.create_index(op.f('ix_post_scheduled_at'), 'post', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_post_status'), 'post', ['status'], unique=False)
    op.create_index(op.f('ix_post_user_id'), 'post', ['user_id'], unique=False)
    op.create_table('reel',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('music_id', sa.Uuid(), nullable=True),
    sa.Column('duet_reel_id', sa.Uuid(), nullable=True),
    sa.Column('stitch_reel_id', sa.Uuid(), nullable=True),
    sa.Column('type', sa.Enum('original', 'duet', 'stitch', 'remix', name='reeltype'), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('visibility', sa.Enum('public', 'friends', 'private', name='reelvisibility'), nullable=False),
    sa.Column('video_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('audio_start_time', sa.Float(), nullable=False),
    sa.Column('audio_volume', sa.Float(), nullable=False),
    sa.Column('is_muted', sa.Boolean(), nullable=False),
    sa.Column('effects', sa.JSON(), nullable=True),
    sa.Column('text_overlays', sa.JSON(), nullable=True),
    sa.Column('speed_multiplier', sa.Float(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('comment_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('save_count', sa.Integer(), nullable=False),
    sa.Column('hashtags', sa.JSON(), nullable=True),
    sa.Column('mentions', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('processing', 'published', 'failed', 'deleted', name='reelstatus'), nullable=False),
    sa.Column('processing_progress', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['duet_reel_id'], ['reel.id'], ),
    sa.ForeignKeyConstraint(['music_id'], ['music.id'], ),
    sa.ForeignKeyConstraint(['stitch_reel_id'], ['reel.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reel_id'), 'reel', ['id'], unique=False)
    op.create_index(op.f('ix_reel_user_id'), 'reel', ['user_id'], unique=False)
    op.create_table('searchhistory',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('query', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('search_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('result_count', sa.Integer(), nullable=False),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('searched_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_searchhistory_id'), 'searchhistory', ['id'], unique=False)
    op.create_index(op.f('ix_searchhistory_query'), 'searchhistory', ['query'], unique=False)
    op.create_index(op.f('ix_searchhistory_searched_at'), 'searchhistory', ['searched_at'], unique=False)
    op.create_index(op.f('ix_searchhistory_user_id'), 'searchhistory', ['user_id'], unique=False)
    op.create_table('searchquery',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('query', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('search_type', sa.Enum('post', 'news', 'user', 'hashtag', 'location', 'story', 'reel', 'live_stream', name='searchtype'), nullable=True),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('result_count', sa.Integer(), nullable=False),
    sa.Column('search_duration', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('radius', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_searchquery_created_at'), 'searchquery', ['created_at'], unique=False)
    op.create_index(op.f('ix_searchquery_id'), 'searchquery', ['id'], unique=False)
    op.create_index(op.f('ix_searchquery_query'), 'searchquery', ['query'], unique=False)
    op.create_index(op.f('ix_searchquery_user_id'), 'searchquery', ['user_id'], unique=False)
    op.create_table('socialmediapost',
    sa.Column('platform', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('external_id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('post_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('posted_at', sa.DateTime(), nullable=True),
    sa.Column('engagement_data', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sponsoredcontent',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('creator_id', sa.Uuid(), nullable=False),
    sa.Column('brand_id', sa.Uuid(), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('compensation', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contract_details', sa.JSON(), nullable=True),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sponsoredcontent_brand_id'), 'sponsoredcontent', ['brand_id'], unique=False)
    op.create_index(op.f('ix_sponsoredcontent_content_id'), 'sponsoredcontent', ['content_id'], unique=False)
    op.create_index(op.f('ix_sponsoredcontent_creator_id'), 'sponsoredcontent', ['creator_id'], unique=False)
    op.create_table('sportsdata',
    sa.Column('league', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('sport', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('event_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('event_name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('external_id', sa.Uuid(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('venue', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('participants', sa.JSON(), nullable=True),
    sa.Column('scores', sa.JSON(), nullable=True),
    sa.Column('live_stats', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stockdata',
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('company_name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('current_price', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('change_amount', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('change_percent', sa.Numeric(precision=7, scale=4), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=False),
    sa.Column('market_cap', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('pe_ratio', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('historical_data', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('story',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('type', sa.Enum('photo', 'video', 'text', name='storytype'), nullable=False),
    sa.Column('media_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('text_content', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('text_position_x', sa.Float(), nullable=True),
    sa.Column('text_position_y', sa.Float(), nullable=True),
    sa.Column('text_color', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=True),
    sa.Column('text_font_size', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('interactive_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('interactive_data', sa.JSON(), nullable=True),
    sa.Column('music_id', sa.Uuid(), nullable=True),
    sa.Column('music_title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('music_artist', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('music_duration', sa.Integer(), nullable=True),
    sa.Column('filter_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('effect_data', sa.JSON(), nullable=True),
    sa.Column('visibility', sa.Enum('public', 'close_friends', 'private', name='storyvisibility'), nullable=False),
    sa.Column('allow_replies', sa.Boolean(), nullable=False),
    sa.Column('show_viewers', sa.Boolean(), nullable=False),
    sa.Column('location_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('active', 'expired', 'deleted', name='storystatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_story_id'), 'story', ['id'], unique=False)
    op.create_index(op.f('ix_story_user_id'), 'story', ['user_id'], unique=False)
    op.create_table('storyhighlight',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('cover_image_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_storyhighlight_id'), 'storyhighlight', ['id'], unique=False)
    op.create_index(op.f('ix_storyhighlight_user_id'), 'storyhighlight', ['user_id'], unique=False)
    op.create_table('stream',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('visibility', sa.Enum('public', 'private', 'unlisted', name='streamvisibility'), nullable=False),
    sa.Column('stream_key', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('playback_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('quality', sa.Enum('low', 'medium', 'high', 'ultra', name='streamquality'), nullable=False),
    sa.Column('is_recorded', sa.Boolean(), nullable=False),
    sa.Column('is_moderated', sa.Boolean(), nullable=False),
    sa.Column('allow_comments', sa.Boolean(), nullable=False),
    sa.Column('allow_reactions', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('scheduled', 'live', 'ended', 'cancelled', name='streamstatus'), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('peak_viewers', sa.Integer(), nullable=False),
    sa.Column('current_viewers', sa.Integer(), nullable=False),
    sa.Column('total_viewers', sa.Integer(), nullable=False),
    sa.Column('total_comments', sa.Integer(), nullable=False),
    sa.Column('total_reactions', sa.Integer(), nullable=False),
    sa.Column('total_badges', sa.Integer(), nullable=False),
    sa.Column('is_monetized', sa.Boolean(), nullable=False),
    sa.Column('donation_goal', sa.Float(), nullable=True),
    sa.Column('total_donations', sa.Float(), nullable=False),
    sa.Column('recording_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('recording_duration', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stream_id'), 'stream', ['id'], unique=False)
    op.create_index(op.f('ix_stream_stream_key'), 'stream', ['stream_key'], unique=True)
    op.create_index(op.f('ix_stream_title'), 'stream', ['title'], unique=False)
    op.create_index(op.f('ix_stream_user_id'), 'stream', ['user_id'], unique=False)
    op.create_table('subscriptiontier',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('creator_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price_monthly', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('price_yearly', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('max_subscribers', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptiontier_creator_id'), 'subscriptiontier', ['creator_id'], unique=False)
    op.create_table('userban',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('banned_by', sa.Uuid(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('ban_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration_hours', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('appeal_allowed', sa.Boolean(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['banned_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userban_banned_by'), 'userban', ['banned_by'], unique=False)
    op.create_index(op.f('ix_userban_user_id'), 'userban', ['user_id'], unique=False)
    op.create_table('userbehavior',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('action_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('target_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('target_id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=True),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('location_info', sa.JSON(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userbehavior_target_id'), 'userbehavior', ['target_id'], unique=False)
    op.create_index(op.f('ix_userbehavior_user_id'), 'userbehavior', ['user_id'], unique=False)
    op.create_table('userstrike',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('issued_by', sa.Uuid(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('severity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('strike_count', sa.Integer(), nullable=False),
    sa.Column('total_strikes', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['issued_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userstrike_issued_by'), 'userstrike', ['issued_by'], unique=False)
    op.create_index(op.f('ix_userstrike_user_id'), 'userstrike', ['user_id'], unique=False)
    op.create_table('weatherdata',
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('temperature_celsius', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('temperature_fahrenheit', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('humidity_percent', sa.Integer(), nullable=False),
    sa.Column('wind_speed_kmh', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('wind_speed_mph', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('condition', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('icon_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('forecast_data', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('webhook',
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('events', sa.JSON(), nullable=True),
    sa.Column('secret', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('timeout_seconds', sa.Integer(), nullable=False),
    sa.Column('headers', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_triggered_at', sa.DateTime(), nullable=True),
    sa.Column('failure_count', sa.Integer(), nullable=False),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('adimpression',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('campaign_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('impression_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=8, scale=4), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['adcampaign.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_adimpression_campaign_id'), 'adimpression', ['campaign_id'], unique=False)
    op.create_index(op.f('ix_adimpression_user_id'), 'adimpression', ['user_id'], unique=False)
    op.create_table('apirequestlog',
    sa.Column('method', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('endpoint', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('response_status', sa.Integer(), nullable=False),
    sa.Column('response_time_ms', sa.Integer(), nullable=False),
    sa.Column('request_size_bytes', sa.Integer(), nullable=True),
    sa.Column('response_size_bytes', sa.Integer(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('api_key_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['api_key_id'], ['apikey.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('banappeal',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('ban_id', sa.Uuid(), nullable=False),
    sa.Column('appellant_id', sa.Uuid(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('evidence', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reviewed_by', sa.Uuid(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('review_notes', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['appellant_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['ban_id'], ['userban.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_banappeal_appellant_id'), 'banappeal', ['appellant_id'], unique=False)
    op.create_index(op.f('ix_banappeal_ban_id'), 'banappeal', ['ban_id'], unique=False)
    op.create_table('creatorearning',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('creator_id', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('source_id', sa.Uuid(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payout_id', sa.Uuid(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['payout_id'], ['creatorpayout.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_creatorearning_creator_id'), 'creatorearning', ['creator_id'], unique=False)
    op.create_table('externalnewsarticle',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('external_id', sa.Uuid(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('sentiment_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('source_id', sa.Uuid(), nullable=False),
    sa.Column('integration_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('imported_at', sa.DateTime(), nullable=True),
    sa.Column('is_imported', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['newssource.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('message',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('conversation_id', sa.Uuid(), nullable=False),
    sa.Column('sender_id', sa.Uuid(), nullable=False),
    sa.Column('type', sa.Enum('text', 'image', 'video', 'audio', 'file', 'voice', 'location', 'contact', 'system', name='messagetype'), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=True),
    sa.Column('media_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('media_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('media_size', sa.Integer(), nullable=True),
    sa.Column('media_duration', sa.Integer(), nullable=True),
    sa.Column('reply_to_message_id', sa.Uuid(), nullable=True),
    sa.Column('forwarded_from', sa.Uuid(), nullable=True),
    sa.Column('status', sa.Enum('sending', 'sent', 'delivered', 'read', 'failed', name='messagestatus'), nullable=False),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('reactions', sa.JSON(), nullable=True),
    sa.Column('reaction_count', sa.Integer(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['forwarded_from'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reply_to_message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_conversation_id'), 'message', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_message_created_at'), 'message', ['created_at'], unique=False)
    op.create_index(op.f('ix_message_id'), 'message', ['id'], unique=False)
    op.create_index(op.f('ix_message_sender_id'), 'message', ['sender_id'], unique=False)
    op.create_table('moderationappeal',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('action_id', sa.Uuid(), nullable=False),
    sa.Column('appellant_id', sa.Uuid(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('evidence', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reviewed_by', sa.Uuid(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('review_notes', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['action_id'], ['moderationaction.id'], ),
    sa.ForeignKeyConstraint(['appellant_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_moderationappeal_action_id'), 'moderationappeal', ['action_id'], unique=False)
    op.create_index(op.f('ix_moderationappeal_appellant_id'), 'moderationappeal', ['appellant_id'], unique=False)
    op.create_table('news',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=True),
    sa.Column('source_id', sa.Uuid(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('excerpt', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('featured_image_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('video_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('gallery_images', sa.JSON(), nullable=True),
    sa.Column('headline', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('subheadline', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('lead_text', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('location_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('is_breaking_news', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_trending', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'breaking', name='newspriority'), nullable=False),
    sa.Column('original_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('author_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('author_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('publication_date', sa.DateTime(), nullable=True),
    sa.Column('fact_check_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('fact_check_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('credibility_score', sa.Float(), nullable=True),
    sa.Column('meta_title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('meta_description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('meta_keywords', sa.JSON(), nullable=True),
    sa.Column('canonical_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('status', sa.Enum('draft', 'published', 'archived', 'scheduled', name='newsstatus'), nullable=False),
    sa.Column('visibility', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('comment_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('bookmark_count', sa.Integer(), nullable=False),
    sa.Column('facebook_shares', sa.Integer(), nullable=False),
    sa.Column('twitter_shares', sa.Integer(), nullable=False),
    sa.Column('linkedin_shares', sa.Integer(), nullable=False),
    sa.Column('whatsapp_shares', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_interaction_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['newssource.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_news_category_id'), 'news', ['category_id'], unique=False)
    op.create_index(op.f('ix_news_created_at'), 'news', ['created_at'], unique=False)
    op.create_index(op.f('ix_news_fact_check_status'), 'news', ['fact_check_status'], unique=False)
    op.create_index(op.f('ix_news_id'), 'news', ['id'], unique=False)
    op.create_index(op.f('ix_news_is_breaking_news'), 'news', ['is_breaking_news'], unique=False)
    op.create_index(op.f('ix_news_is_featured'), 'news', ['is_featured'], unique=False)
    op.create_index(op.f('ix_news_is_trending'), 'news', ['is_trending'], unique=False)
    op.create_index(op.f('ix_news_last_interaction_at'), 'news', ['last_interaction_at'], unique=False)
    op.create_index(op.f('ix_news_priority'), 'news', ['priority'], unique=False)
    op.create_index(op.f('ix_news_published_at'), 'news', ['published_at'], unique=False)
    op.create_index(op.f('ix_news_scheduled_at'), 'news', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_news_slug'), 'news', ['slug'], unique=True)
    op.create_index(op.f('ix_news_source_id'), 'news', ['source_id'], unique=False)
    op.create_index(op.f('ix_news_status'), 'news', ['status'], unique=False)
    op.create_index(op.f('ix_news_title'), 'news', ['title'], unique=False)
    op.create_index(op.f('ix_news_user_id'), 'news', ['user_id'], unique=False)
    op.create_table('newssourcefollow',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('source_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['source_id'], ['newssource.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'source_id')
    )
    op.create_table('postmedia',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('media_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('media_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('processing_error', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('alt_text', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('caption', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_postmedia_id'), 'postmedia', ['id'], unique=False)
    op.create_index(op.f('ix_postmedia_post_id'), 'postmedia', ['post_id'], unique=False)
    op.create_table('searchresult',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('query_id', sa.Uuid(), nullable=False),
    sa.Column('result_type', sa.Enum('content', 'user', 'hashtag', 'location', 'trending', name='searchresulttype'), nullable=True),
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('entity_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('metadata_', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['query_id'], ['searchquery.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_searchresult_id'), 'searchresult', ['id'], unique=False)
    op.create_index(op.f('ix_searchresult_query_id'), 'searchresult', ['query_id'], unique=False)
    op.create_table('storyinteraction',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('story_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('interaction_type', sa.Enum('poll_vote', 'question_reply', 'quiz_answer', 'reaction', name='interactiontype'), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('option_selected', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('interaction_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_storyinteraction_id'), 'storyinteraction', ['id'], unique=False)
    op.create_index(op.f('ix_storyinteraction_interaction_type'), 'storyinteraction', ['interaction_type'], unique=False)
    op.create_index(op.f('ix_storyinteraction_story_id'), 'storyinteraction', ['story_id'], unique=False)
    op.create_index(op.f('ix_storyinteraction_user_id'), 'storyinteraction', ['user_id'], unique=False)
    op.create_table('storyviewer',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('story_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('viewed_at', sa.DateTime(), nullable=False),
    sa.Column('view_duration', sa.Integer(), nullable=True),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_storyviewer_id'), 'storyviewer', ['id'], unique=False)
    op.create_index(op.f('ix_storyviewer_story_id'), 'storyviewer', ['story_id'], unique=False)
    op.create_index(op.f('ix_storyviewer_user_id'), 'storyviewer', ['user_id'], unique=False)
    op.create_table('streambadge',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('stream_id', sa.Uuid(), nullable=False),
    sa.Column('sender_id', sa.Uuid(), nullable=False),
    sa.Column('recipient_id', sa.Uuid(), nullable=True),
    sa.Column('badge_type', sa.Enum('heart', 'star', 'diamond', 'fire', 'rocket', 'crown', name='badgetype'), server_default='heart', nullable=False),
    sa.Column('badge_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('animation_url', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('sound_effect', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['stream_id'], ['stream.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_streambadge_id'), 'streambadge', ['id'], unique=False)
    op.create_index(op.f('ix_streambadge_sender_id'), 'streambadge', ['sender_id'], unique=False)
    op.create_index(op.f('ix_streambadge_stream_id'), 'streambadge', ['stream_id'], unique=False)
    op.create_table('streamviewer',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('stream_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role', sa.Enum('viewer', 'moderator', 'host', name='viewerrole'), nullable=False),
    sa.Column('is_muted', sa.Boolean(), nullable=False),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('left_at', sa.DateTime(), nullable=True),
    sa.Column('comments_count', sa.Integer(), nullable=False),
    sa.Column('reactions_count', sa.Integer(), nullable=False),
    sa.Column('badges_sent', sa.Integer(), nullable=False),
    sa.Column('donations_amount', sa.Float(), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.ForeignKeyConstraint(['stream_id'], ['stream.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_streamviewer_id'), 'streamviewer', ['id'], unique=False)
    op.create_index(op.f('ix_streamviewer_stream_id'), 'streamviewer', ['stream_id'], unique=False)
    op.create_index(op.f('ix_streamviewer_user_id'), 'streamviewer', ['user_id'], unique=False)
    op.create_table('usersubscription',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('tier_id', sa.Uuid(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('current_period_start', sa.DateTime(), nullable=False),
    sa.Column('current_period_end', sa.DateTime(), nullable=False),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=False),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tier_id'], ['subscriptiontier.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usersubscription_tier_id'), 'usersubscription', ['tier_id'], unique=False)
    op.create_index(op.f('ix_usersubscription_user_id'), 'usersubscription', ['user_id'], unique=False)
    op.create_table('webhookdelivery',
    sa.Column('event', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('response_status', sa.Integer(), nullable=True),
    sa.Column('response_body', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=True),
    sa.Column('attempt_count', sa.Integer(), nullable=False),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('webhook_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['webhook_id'], ['webhook.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversationparticipant',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('conversation_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role', sa.Enum('member', 'admin', 'owner', name='participantrole'), nullable=False),
    sa.Column('status', sa.Enum('active', 'muted', 'banned', 'left', name='participantstatus'), nullable=False),
    sa.Column('can_send_messages', sa.Boolean(), nullable=False),
    sa.Column('can_add_participants', sa.Boolean(), nullable=False),
    sa.Column('can_remove_participants', sa.Boolean(), nullable=False),
    sa.Column('can_change_settings', sa.Boolean(), nullable=False),
    sa.Column('can_delete_messages', sa.Boolean(), nullable=False),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('notification_sound', sa.Boolean(), nullable=False),
    sa.Column('notification_preview', sa.Boolean(), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('left_at', sa.DateTime(), nullable=True),
    sa.Column('unread_count', sa.Integer(), nullable=False),
    sa.Column('last_read_message_id', sa.Uuid(), nullable=True),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('theme_preference', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['last_read_message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversationparticipant_conversation_id'), 'conversationparticipant', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_conversationparticipant_id'), 'conversationparticipant', ['id'], unique=False)
    op.create_index(op.f('ix_conversationparticipant_user_id'), 'conversationparticipant', ['user_id'], unique=False)
    op.create_table('factcheck',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('news_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'verified', 'false', 'misleading', 'partially_true', 'unverifiable', name='factcheckstatus'), nullable=False),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'urgent', name='factcheckpriority'), nullable=False),
    sa.Column('claim_summary', sa.TEXT(), nullable=True),
    sa.Column('claim_text', sa.TEXT(), nullable=True),
    sa.Column('claim_context', sa.TEXT(), nullable=True),
    sa.Column('verdict', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('verdict_summary', sa.TEXT(), nullable=True),
    sa.Column('detailed_analysis', sa.TEXT(), nullable=True),
    sa.Column('evidence_summary', sa.TEXT(), nullable=True),
    sa.Column('evidence_links', sa.JSON(), nullable=True),
    sa.Column('source_reliability_score', sa.Float(), nullable=True),
    sa.Column('verification_method', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('verification_tools', sa.JSON(), nullable=True),
    sa.Column('verification_criteria', sa.TEXT(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('reliability_score', sa.Float(), nullable=True),
    sa.Column('evidence_strength', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('related_fact_checks', sa.JSON(), nullable=True),
    sa.Column('contradicting_fact_checks', sa.JSON(), nullable=True),
    sa.Column('external_fact_check_urls', sa.JSON(), nullable=True),
    sa.Column('fact_check_organizations', sa.JSON(), nullable=True),
    sa.Column('supporting_documents', sa.JSON(), nullable=True),
    sa.Column('evidence_images', sa.JSON(), nullable=True),
    sa.Column('verification_videos', sa.JSON(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('review_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('review_notes', sa.TEXT(), nullable=True),
    sa.Column('reviewed_by', sa.Uuid(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('public_notes', sa.TEXT(), nullable=True),
    sa.Column('legal_notes', sa.TEXT(), nullable=True),
    sa.Column('compliance_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('jurisdiction', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('impact_score', sa.Float(), nullable=True),
    sa.Column('public_interest_score', sa.Float(), nullable=True),
    sa.Column('media_mentions', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('helpful_votes', sa.Integer(), nullable=False),
    sa.Column('not_helpful_votes', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_factcheck_id'), 'factcheck', ['id'], unique=False)
    op.create_index(op.f('ix_factcheck_news_id'), 'factcheck', ['news_id'], unique=False)
    op.create_index(op.f('ix_factcheck_status'), 'factcheck', ['status'], unique=False)
    op.create_index(op.f('ix_factcheck_user_id'), 'factcheck', ['user_id'], unique=False)
    op.create_table('newsrelated',
    sa.Column('news_id', sa.Uuid(), nullable=False),
    sa.Column('related_news_id', sa.Uuid(), nullable=False),
    sa.Column('relevance_score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], ),
    sa.ForeignKeyConstraint(['related_news_id'], ['news.id'], ),
    sa.PrimaryKeyConstraint('news_id', 'related_news_id')
    )
    op.create_table('newstag',
    sa.Column('news_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], ),
    sa.PrimaryKeyConstraint('news_id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('subscription_id', sa.Uuid(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('payment_id', sa.Uuid(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['usersubscription.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_payment_id'), 'payment', ['payment_id'], unique=True)
    op.create_index(op.f('ix_payment_subscription_id'), 'payment', ['subscription_id'], unique=False)
    op.create_index(op.f('ix_payment_user_id'), 'payment', ['user_id'], unique=False)
    op.create_table('factcheckcomment',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('fact_check_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('parent_comment_id', sa.Uuid(), nullable=True),
    sa.Column('content', sa.TEXT(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['fact_check_id'], ['factcheck.id'], ),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['factcheckcomment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_factcheckcomment_fact_check_id'), 'factcheckcomment', ['fact_check_id'], unique=False)
    op.create_index(op.f('ix_factcheckcomment_id'), 'factcheckcomment', ['id'], unique=False)
    op.create_index(op.f('ix_factcheckcomment_user_id'), 'factcheckcomment', ['user_id'], unique=False)
    op.create_table('factcheckvote',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('fact_check_id', sa.Uuid(), nullable=False),
    sa.Column('is_helpful', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['fact_check_id'], ['factcheck.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'fact_check_id')
    )
    op.create_table('premiumfeaturepurchase',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('feature_id', sa.Uuid(), nullable=False),
    sa.Column('payment_id', sa.Uuid(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('usage_limit', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['feature_id'], ['premiumfeature.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_premiumfeaturepurchase_feature_id'), 'premiumfeaturepurchase', ['feature_id'], unique=False)
    op.create_index(op.f('ix_premiumfeaturepurchase_user_id'), 'premiumfeaturepurchase', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_premiumfeaturepurchase_user_id'), table_name='premiumfeaturepurchase')
    op.drop_index(op.f('ix_premiumfeaturepurchase_feature_id'), table_name='premiumfeaturepurchase')
    op.drop_table('premiumfeaturepurchase')
    op.drop_table('factcheckvote')
    op.drop_index(op.f('ix_factcheckcomment_user_id'), table_name='factcheckcomment')
    op.drop_index(op.f('ix_factcheckcomment_id'), table_name='factcheckcomment')
    op.drop_index(op.f('ix_factcheckcomment_fact_check_id'), table_name='factcheckcomment')
    op.drop_table('factcheckcomment')
    op.drop_index(op.f('ix_payment_user_id'), table_name='payment')
    op.drop_index(op.f('ix_payment_subscription_id'), table_name='payment')
    op.drop_index(op.f('ix_payment_payment_id'), table_name='payment')
    op.drop_table('payment')
    op.drop_table('newstag')
    op.drop_table('newsrelated')
    op.drop_index(op.f('ix_factcheck_user_id'), table_name='factcheck')
    op.drop_index(op.f('ix_factcheck_status'), table_name='factcheck')
    op.drop_index(op.f('ix_factcheck_news_id'), table_name='factcheck')
    op.drop_index(op.f('ix_factcheck_id'), table_name='factcheck')
    op.drop_table('factcheck')
    op.drop_index(op.f('ix_conversationparticipant_user_id'), table_name='conversationparticipant')
    op.drop_index(op.f('ix_conversationparticipant_id'), table_name='conversationparticipant')
    op.drop_index(op.f('ix_conversationparticipant_conversation_id'), table_name='conversationparticipant')
    op.drop_table('conversationparticipant')
    op.drop_table('webhookdelivery')
    op.drop_index(op.f('ix_usersubscription_user_id'), table_name='usersubscription')
    op.drop_index(op.f('ix_usersubscription_tier_id'), table_name='usersubscription')
    op.drop_table('usersubscription')
    op.drop_index(op.f('ix_streamviewer_user_id'), table_name='streamviewer')
    op.drop_index(op.f('ix_streamviewer_stream_id'), table_name='streamviewer')
    op.drop_index(op.f('ix_streamviewer_id'), table_name='streamviewer')
    op.drop_table('streamviewer')
    op.drop_index(op.f('ix_streambadge_stream_id'), table_name='streambadge')
    op.drop_index(op.f('ix_streambadge_sender_id'), table_name='streambadge')
    op.drop_index(op.f('ix_streambadge_id'), table_name='streambadge')
    op.drop_table('streambadge')
    op.drop_index(op.f('ix_storyviewer_user_id'), table_name='storyviewer')
    op.drop_index(op.f('ix_storyviewer_story_id'), table_name='storyviewer')
    op.drop_index(op.f('ix_storyviewer_id'), table_name='storyviewer')
    op.drop_table('storyviewer')
    op.drop_index(op.f('ix_storyinteraction_user_id'), table_name='storyinteraction')
    op.drop_index(op.f('ix_storyinteraction_story_id'), table_name='storyinteraction')
    op.drop_index(op.f('ix_storyinteraction_interaction_type'), table_name='storyinteraction')
    op.drop_index(op.f('ix_storyinteraction_id'), table_name='storyinteraction')
    op.drop_table('storyinteraction')
    op.drop_index(op.f('ix_searchresult_query_id'), table_name='searchresult')
    op.drop_index(op.f('ix_searchresult_id'), table_name='searchresult')
    op.drop_table('searchresult')
    op.drop_index(op.f('ix_postmedia_post_id'), table_name='postmedia')
    op.drop_index(op.f('ix_postmedia_id'), table_name='postmedia')
    op.drop_table('postmedia')
    op.drop_table('newssourcefollow')
    op.drop_index(op.f('ix_news_user_id'), table_name='news')
    op.drop_index(op.f('ix_news_title'), table_name='news')
    op.drop_index(op.f('ix_news_status'), table_name='news')
    op.drop_index(op.f('ix_news_source_id'), table_name='news')
    op.drop_index(op.f('ix_news_slug'), table_name='news')
    op.drop_index(op.f('ix_news_scheduled_at'), table_name='news')
    op.drop_index(op.f('ix_news_published_at'), table_name='news')
    op.drop_index(op.f('ix_news_priority'), table_name='news')
    op.drop_index(op.f('ix_news_last_interaction_at'), table_name='news')
    op.drop_index(op.f('ix_news_is_trending'), table_name='news')
    op.drop_index(op.f('ix_news_is_featured'), table_name='news')
    op.drop_index(op.f('ix_news_is_breaking_news'), table_name='news')
    op.drop_index(op.f('ix_news_id'), table_name='news')
    op.drop_index(op.f('ix_news_fact_check_status'), table_name='news')
    op.drop_index(op.f('ix_news_created_at'), table_name='news')
    op.drop_index(op.f('ix_news_category_id'), table_name='news')
    op.drop_table('news')
    op.drop_index(op.f('ix_moderationappeal_appellant_id'), table_name='moderationappeal')
    op.drop_index(op.f('ix_moderationappeal_action_id'), table_name='moderationappeal')
    op.drop_table('moderationappeal')
    op.drop_index(op.f('ix_message_sender_id'), table_name='message')
    op.drop_index(op.f('ix_message_id'), table_name='message')
    op.drop_index(op.f('ix_message_created_at'), table_name='message')
    op.drop_index(op.f('ix_message_conversation_id'), table_name='message')
    op.drop_table('message')
    op.drop_table('externalnewsarticle')
    op.drop_index(op.f('ix_creatorearning_creator_id'), table_name='creatorearning')
    op.drop_table('creatorearning')
    op.drop_index(op.f('ix_banappeal_ban_id'), table_name='banappeal')
    op.drop_index(op.f('ix_banappeal_appellant_id'), table_name='banappeal')
    op.drop_table('banappeal')
    op.drop_table('apirequestlog')
    op.drop_index(op.f('ix_adimpression_user_id'), table_name='adimpression')
    op.drop_index(op.f('ix_adimpression_campaign_id'), table_name='adimpression')
    op.drop_table('adimpression')
    op.drop_table('webhook')
    op.drop_table('weatherdata')
    op.drop_index(op.f('ix_userstrike_user_id'), table_name='userstrike')
    op.drop_index(op.f('ix_userstrike_issued_by'), table_name='userstrike')
    op.drop_table('userstrike')
    op.drop_index(op.f('ix_userbehavior_user_id'), table_name='userbehavior')
    op.drop_index(op.f('ix_userbehavior_target_id'), table_name='userbehavior')
    op.drop_table('userbehavior')
    op.drop_index(op.f('ix_userban_user_id'), table_name='userban')
    op.drop_index(op.f('ix_userban_banned_by'), table_name='userban')
    op.drop_table('userban')
    op.drop_index(op.f('ix_subscriptiontier_creator_id'), table_name='subscriptiontier')
    op.drop_table('subscriptiontier')
    op.drop_index(op.f('ix_stream_user_id'), table_name='stream')
    op.drop_index(op.f('ix_stream_title'), table_name='stream')
    op.drop_index(op.f('ix_stream_stream_key'), table_name='stream')
    op.drop_index(op.f('ix_stream_id'), table_name='stream')
    op.drop_table('stream')
    op.drop_index(op.f('ix_storyhighlight_user_id'), table_name='storyhighlight')
    op.drop_index(op.f('ix_storyhighlight_id'), table_name='storyhighlight')
    op.drop_table('storyhighlight')
    op.drop_index(op.f('ix_story_user_id'), table_name='story')
    op.drop_index(op.f('ix_story_id'), table_name='story')
    op.drop_table('story')
    op.drop_table('stockdata')
    op.drop_table('sportsdata')
    op.drop_index(op.f('ix_sponsoredcontent_creator_id'), table_name='sponsoredcontent')
    op.drop_index(op.f('ix_sponsoredcontent_content_id'), table_name='sponsoredcontent')
    op.drop_index(op.f('ix_sponsoredcontent_brand_id'), table_name='sponsoredcontent')
    op.drop_table('sponsoredcontent')
    op.drop_table('socialmediapost')
    op.drop_index(op.f('ix_searchquery_user_id'), table_name='searchquery')
    op.drop_index(op.f('ix_searchquery_query'), table_name='searchquery')
    op.drop_index(op.f('ix_searchquery_id'), table_name='searchquery')
    op.drop_index(op.f('ix_searchquery_created_at'), table_name='searchquery')
    op.drop_table('searchquery')
    op.drop_index(op.f('ix_searchhistory_user_id'), table_name='searchhistory')
    op.drop_index(op.f('ix_searchhistory_searched_at'), table_name='searchhistory')
    op.drop_index(op.f('ix_searchhistory_query'), table_name='searchhistory')
    op.drop_index(op.f('ix_searchhistory_id'), table_name='searchhistory')
    op.drop_table('searchhistory')
    op.drop_index(op.f('ix_reel_user_id'), table_name='reel')
    op.drop_index(op.f('ix_reel_id'), table_name='reel')
    op.drop_table('reel')
    op.drop_index(op.f('ix_post_user_id'), table_name='post')
    op.drop_index(op.f('ix_post_status'), table_name='post')
    op.drop_index(op.f('ix_post_scheduled_at'), table_name='post')
    op.drop_index(op.f('ix_post_published_at'), table_name='post')
    op.drop_index(op.f('ix_post_post_type'), table_name='post')
    op.drop_index(op.f('ix_post_last_interaction_at'), table_name='post')
    op.drop_index(op.f('ix_post_id'), table_name='post')
    op.drop_index(op.f('ix_post_created_at'), table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_personalizedfeed_user_id'), table_name='personalizedfeed')
    op.drop_table('personalizedfeed')
    op.drop_index(op.f('ix_notificationpreference_user_id'), table_name='notificationpreference')
    op.drop_index(op.f('ix_notificationpreference_id'), table_name='notificationpreference')
    op.drop_table('notificationpreference')
    op.drop_index(op.f('ix_notification_sender_id'), table_name='notification')
    op.drop_index(op.f('ix_notification_recipient_id'), table_name='notification')
    op.drop_index(op.f('ix_notification_id'), table_name='notification')
    op.drop_index(op.f('ix_notification_created_at'), table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_newssource_slug'), table_name='newssource')
    op.drop_index(op.f('ix_newssource_name'), table_name='newssource')
    op.drop_index(op.f('ix_newssource_id'), table_name='newssource')
    op.drop_table('newssource')
    op.drop_index(op.f('ix_moderationlog_target_id'), table_name='moderationlog')
    op.drop_index(op.f('ix_moderationlog_moderator_id'), table_name='moderationlog')
    op.drop_table('moderationlog')
    op.drop_index(op.f('ix_moderationaction_moderator_id'), table_name='moderationaction')
    op.drop_index(op.f('ix_moderationaction_content_id'), table_name='moderationaction')
    op.drop_table('moderationaction')
    op.drop_index(op.f('ix_mediaprocessingjob_media_file_id'), table_name='mediaprocessingjob')
    op.drop_index(op.f('ix_mediaprocessingjob_id'), table_name='mediaprocessingjob')
    op.drop_index(op.f('ix_mediaprocessingjob_created_at'), table_name='mediaprocessingjob')
    op.drop_table('mediaprocessingjob')
    op.drop_index(op.f('ix_mediaanalytics_week_start'), table_name='mediaanalytics')
    op.drop_index(op.f('ix_mediaanalytics_month_start'), table_name='mediaanalytics')
    op.drop_index(op.f('ix_mediaanalytics_media_file_id'), table_name='mediaanalytics')
    op.drop_index(op.f('ix_mediaanalytics_id'), table_name='mediaanalytics')
    op.drop_index(op.f('ix_mediaanalytics_date_recorded'), table_name='mediaanalytics')
    op.drop_table('mediaanalytics')
    op.drop_table('integrationsynclog')
    op.drop_table('integrationnewssource')
    op.drop_index(op.f('ix_device_user_id'), table_name='device')
    op.drop_index(op.f('ix_device_registered_at'), table_name='device')
    op.drop_index(op.f('ix_device_device_token'), table_name='device')
    op.drop_table('device')
    op.drop_index(op.f('ix_creatorpayout_payout_id'), table_name='creatorpayout')
    op.drop_index(op.f('ix_creatorpayout_creator_id'), table_name='creatorpayout')
    op.drop_table('creatorpayout')
    op.drop_index(op.f('ix_conversation_title'), table_name='conversation')
    op.drop_index(op.f('ix_conversation_last_message_at'), table_name='conversation')
    op.drop_index(op.f('ix_conversation_id'), table_name='conversation')
    op.drop_index(op.f('ix_conversation_creator_id'), table_name='conversation')
    op.drop_table('conversation')
    op.drop_index(op.f('ix_contentreport_reporter_id'), table_name='contentreport')
    op.drop_index(op.f('ix_contentreport_content_id'), table_name='contentreport')
    op.drop_table('contentreport')
    op.drop_index(op.f('ix_contentrecommendation_user_id'), table_name='contentrecommendation')
    op.drop_index(op.f('ix_contentrecommendation_content_id'), table_name='contentrecommendation')
    op.drop_table('contentrecommendation')
    op.drop_index(op.f('ix_contentflag_content_id'), table_name='contentflag')
    op.drop_table('contentflag')
    op.drop_index(op.f('ix_churnprediction_user_id'), table_name='churnprediction')
    op.drop_table('churnprediction')
    op.drop_table('categoryfollow')
    op.drop_table('apikey')
    op.drop_index(op.f('ix_adcampaign_advertiser_id'), table_name='adcampaign')
    op.drop_table('adcampaign')
    op.drop_index(op.f('ix_useranalytics_week_start'), table_name='useranalytics')
    op.drop_index(op.f('ix_useranalytics_user_id'), table_name='useranalytics')
    op.drop_index(op.f('ix_useranalytics_month_start'), table_name='useranalytics')
    op.drop_index(op.f('ix_useranalytics_id'), table_name='useranalytics')
    op.drop_index(op.f('ix_useranalytics_date_recorded'), table_name='useranalytics')
    op.drop_table('useranalytics')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_trendingtopic_topic'), table_name='trendingtopic')
    op.drop_index(op.f('ix_trendingtopic_last_updated'), table_name='trendingtopic')
    op.drop_index(op.f('ix_trendingtopic_id'), table_name='trendingtopic')
    op.drop_table('trendingtopic')
    op.drop_table('trendanalysis')
    op.drop_index(op.f('ix_translationcache_content_id'), table_name='translationcache')
    op.drop_table('translationcache')
    op.drop_table('premiumfeature')
    op.drop_index(op.f('ix_platformanalytics_week_start'), table_name='platformanalytics')
    op.drop_index(op.f('ix_platformanalytics_month_start'), table_name='platformanalytics')
    op.drop_index(op.f('ix_platformanalytics_id'), table_name='platformanalytics')
    op.drop_index(op.f('ix_platformanalytics_date_recorded'), table_name='platformanalytics')
    op.drop_table('platformanalytics')
    op.drop_index(op.f('ix_music_title'), table_name='music')
    op.drop_index(op.f('ix_music_id'), table_name='music')
    op.drop_index(op.f('ix_music_artist'), table_name='music')
    op.drop_table('music')
    op.drop_table('moderationrule')
    op.drop_index(op.f('ix_mediastorage_id'), table_name='mediastorage')
    op.drop_table('mediastorage')
    op.drop_index(op.f('ix_mediafile_user_id'), table_name='mediafile')
    op.drop_index(op.f('ix_mediafile_media_type'), table_name='mediafile')
    op.drop_index(op.f('ix_mediafile_id'), table_name='mediafile')
    op.drop_index(op.f('ix_mediafile_filename'), table_name='mediafile')
    op.drop_index(op.f('ix_mediafile_created_at'), table_name='mediafile')
    op.drop_table('mediafile')
    op.drop_table('integration')
    op.drop_index(op.f('ix_engagementprediction_content_id'), table_name='engagementprediction')
    op.drop_table('engagementprediction')
    op.drop_index(op.f('ix_effect_name'), table_name='effect')
    op.drop_index(op.f('ix_effect_id'), table_name='effect')
    op.drop_table('effect')
    op.drop_index(op.f('ix_contentclassification_content_id'), table_name='contentclassification')
    op.drop_table('contentclassification')
    op.drop_index(op.f('ix_contentanalytics_id'), table_name='contentanalytics')
    op.drop_index(op.f('ix_contentanalytics_date_recorded'), table_name='contentanalytics')
    op.drop_index(op.f('ix_contentanalytics_content_type'), table_name='contentanalytics')
    op.drop_index(op.f('ix_contentanalytics_content_id'), table_name='contentanalytics')
    op.drop_index(op.f('ix_contentanalytics_content_created_at'), table_name='contentanalytics')
    op.drop_index(op.f('ix_contentanalytics_author_id'), table_name='contentanalytics')
    op.drop_table('contentanalytics')
    op.drop_index(op.f('ix_contentanalysis_content_id'), table_name='contentanalysis')
    op.drop_table('contentanalysis')
    op.drop_index(op.f('ix_category_slug'), table_name='category')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.drop_table('category')
    op.drop_index(op.f('ix_anomalydetection_target_id'), table_name='anomalydetection')
    op.drop_table('anomalydetection')
    op.drop_table('aimodelmetrics')
    # ### end Alembic commands ###
